<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>WangEr&#39;s Blog</title>
  
  <subtitle>生活不止眼前的苟且，还有远方的西洋参和鹿茸</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://wahaha5354.github.io/"/>
  <updated>2018-12-13T08:00:13.485Z</updated>
  <id>https://wahaha5354.github.io/</id>
  
  <author>
    <name>wanger</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>python数据类型之数字和字符串</title>
    <link href="https://wahaha5354.github.io/2018/12/13/python%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/"/>
    <id>https://wahaha5354.github.io/2018/12/13/python数据类型/</id>
    <published>2018-12-13T07:58:55.000Z</published>
    <updated>2018-12-13T08:00:13.485Z</updated>
    
    <content type="html"><![CDATA[<h2 id="python数据类型："><a href="#python数据类型：" class="headerlink" title="python数据类型："></a>python数据类型：</h2><ol><li>Number（数字）</li><li>String(字符串)</li><li>List(列表)</li><li>Dictonary（字典）</li><li>Tuple(元组)</li><li>sets(集合)</li></ol><p>其中数字、字符串、元组是不可变的，列表、字典是可变的。<br>对不可变类型的变量重新赋值，实际上是重新创建一个不可变类型的对象，并将原来的变量重新指向新创建的对象（如果没有其他变量引用原有对象的话（即引用计数为0），原有对象就会被回收）。</p><h3 id="数字"><a href="#数字" class="headerlink" title="数字"></a>数字</h3><ul><li>int:整数  <pre><code>&amp;ensp;&amp;ensp; 1.正负数&amp;ensp; &amp;ensp;2.十六进制(表示方式为0x或者0X开头。例如：0xff)&amp;ensp; &amp;ensp;3.八进制(表示方式为0o或者0O开头。例如：0o632457)&amp;ensp;&amp;ensp; 4.二进制 (表示方式为0b或者0B开头。例如：0b101100)</code></pre></li><li>fraction:分数</li><li>float:浮点数</li><li>complex:复数</li><li>bool:布尔型(特殊的数值类型，只有True和False两个值)<h5 id="进制转换"><a href="#进制转换" class="headerlink" title="进制转换"></a>进制转换</h5><h6 id="整数转其他进制"><a href="#整数转其他进制" class="headerlink" title="整数转其他进制"></a>整数转其他进制</h6>使用bin(i),oct(i),hex(i)函数可以将十进制数分别转换为二进制，八进制，十六进制<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>s=<span class="number">10</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>bin(s)</span><br><span class="line"><span class="string">'0b1010'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>oct(s)</span><br><span class="line"><span class="string">'0o12'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>hex(s)</span><br><span class="line"><span class="string">'0xa'</span></span><br></pre></td></tr></table></figure></li></ul><p>使用int(str,base)可以将非十进制的数转换成整数<br>，其中str是文本形式的数字，base可以为2,8,16数字，分别代表二进制，八进制，十六进制，最高到36位，最低为2<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"> &gt;&gt;&gt; int(<span class="string">'0b10010'</span>,<span class="number">2</span>)</span><br><span class="line"><span class="number">18</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>int(<span class="string">'0o52415'</span>,<span class="number">8</span>)</span><br><span class="line"><span class="number">21773</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>int(<span class="string">'0x134ab'</span>,<span class="number">16</span>)</span><br><span class="line"><span class="number">79019</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>int(<span class="string">'s'</span>,<span class="number">32</span>)</span><br><span class="line"><span class="number">28</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>int(<span class="string">'yz'</span>,<span class="number">36</span>)</span><br><span class="line"><span class="number">1259</span></span><br></pre></td></tr></table></figure></p><p>当然也可以进行16进制转二进制八进制，八进制可以转其他进制<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>hex(<span class="number">0b1001</span>)</span><br><span class="line"><span class="string">'0x9'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>hex(<span class="number">0o1234</span>)</span><br><span class="line"><span class="string">'0x29c'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>oct(<span class="number">0b101</span>)</span><br><span class="line"><span class="string">'0o5'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>oct(<span class="number">0xff</span>)</span><br><span class="line"><span class="string">'0o377'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>bin(<span class="number">0xff</span>)</span><br><span class="line"><span class="string">'0b11111111'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>bin(<span class="number">0o7777</span>)</span><br><span class="line"><span class="string">'0b111111111111'</span></span><br></pre></td></tr></table></figure></p><h5 id="各类运算符"><a href="#各类运算符" class="headerlink" title="各类运算符"></a>各类运算符</h5><ul><li>算数运算符：+,-,*,/,%.//,**</li><li>比较运算符：==，!=,&gt;,&lt;,&lt;=,&gt;=</li><li>赋值运算符：=,+=,-=,*=,/=,%=,//=.**=</li><li>位运算符：&amp;,|,^,~,&lt;&lt;,&gt;&gt;</li><li>逻辑运算符：and,or,not</li><li>成员运算符：in,not in</li><li>身份运算符：is,is not<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>a=<span class="number">12</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>f=~a</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>f</span><br><span class="line"><span class="number">-13</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>bin(f)</span><br><span class="line"><span class="string">'-0b1101'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>bin(a)</span><br><span class="line"><span class="string">'0b1100'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>bin(a&lt;&lt;<span class="number">1</span>)</span><br><span class="line"><span class="string">'0b11000'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>bin(a&gt;&gt;<span class="number">1</span>)</span><br><span class="line"><span class="string">'0b110'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>list=[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a=<span class="number">3</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">print</span> (a <span class="keyword">in</span> list)</span><br><span class="line"><span class="keyword">True</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">print</span> (a <span class="keyword">not</span> <span class="keyword">in</span> list)</span><br><span class="line"><span class="keyword">False</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a=[<span class="string">'1,2,3,4,5'</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>b=a</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">print</span> (b <span class="keyword">is</span> a )</span><br><span class="line"><span class="keyword">True</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">print</span> (b <span class="keyword">is</span> <span class="keyword">not</span> a )</span><br><span class="line"><span class="keyword">False</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>b=a[:]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">print</span> (b <span class="keyword">is</span> a)  <span class="comment">#这是因为字符串是不可变的</span></span><br><span class="line"><span class="keyword">False</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">print</span> (id(a))</span><br><span class="line"><span class="number">42473480</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">print</span> (id(b))</span><br><span class="line"><span class="number">42485000</span></span><br></pre></td></tr></table></figure></li></ul><h5 id="运算符优先级"><a href="#运算符优先级" class="headerlink" title="运算符优先级"></a>运算符优先级</h5><ul><li>** （优先级最高的是幂运算）</li><li>~,+,-   (加和减都是一元运算符)</li><li>*，/，%，//</li><li>+,-</li><li>&lt;&lt;,&gt;&gt;</li><li>&amp;</li><li>^,|</li><li>&lt;=,&gt;=,&lt;,&gt;</li><li>==,!=</li><li>=,+=,-=,*=,/=,%=,//=,**=<h5 id="数学函数的应用"><a href="#数学函数的应用" class="headerlink" title="数学函数的应用"></a>数学函数的应用</h5></li><li><p>power：幂函数，功能与运算符**一样</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; pow(2,3)</span><br><span class="line">8</span><br></pre></td></tr></table></figure></li><li><p>sqrt：取当前数的平方根</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; import math</span><br><span class="line">&gt;&gt;&gt; math.sqrt(4)</span><br><span class="line">2.0</span><br></pre></td></tr></table></figure></li><li><p>max：最大值</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt;max(<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">1</span>,<span class="number">9</span>,<span class="number">6</span>)</span><br><span class="line"><span class="number">9</span></span><br></pre></td></tr></table></figure></li><li><p>min：最小值</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>min(<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">1</span>,<span class="number">9</span>,<span class="number">6</span>)</span><br><span class="line"><span class="number">1</span></span><br></pre></td></tr></table></figure></li><li><p>abs与fabs：取绝对值，fabs取出的是浮点数</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>abs(<span class="number">-1</span>)</span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>math.fabs(<span class="number">-1</span>)</span><br><span class="line"><span class="number">1.0</span></span><br></pre></td></tr></table></figure></li><li><p>round：四舍五入（当小数为5的时候会向靠近偶数的一端进）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; round(3.5)</span><br><span class="line">4</span><br><span class="line">&gt;&gt;&gt; round(2.5)</span><br><span class="line">2</span><br><span class="line">&gt;&gt;&gt; round(2.54)</span><br><span class="line">3</span><br><span class="line">&gt;&gt;&gt; round(2.45)</span><br><span class="line">2</span><br></pre></td></tr></table></figure></li><li><p>ceil：向上取整</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; math.ceil(1.7)</span><br><span class="line">2</span><br><span class="line">&gt;&gt;&gt; math.ceil(1.3)</span><br><span class="line">2</span><br></pre></td></tr></table></figure></li><li><p>floor：向下取整</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; math.floor(1.7)</span><br><span class="line">1</span><br><span class="line">&gt;&gt;&gt; math.floor(1.3)</span><br><span class="line">1</span><br></pre></td></tr></table></figure></li><li><p>cmp：python2中的比较函数，当前面数值大返回-1，一样大返回0，后面数值大返回1</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>cmp(<span class="number">1</span>,<span class="number">2</span>)</span><br><span class="line"><span class="number">-1</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>cmp(<span class="number">1</span>,<span class="number">1</span>)</span><br><span class="line"><span class="number">0</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>cmp(<span class="number">2</span>,<span class="number">1</span>)</span><br><span class="line"><span class="number">1</span></span><br></pre></td></tr></table></figure></li><li><p>随机数函数<br>&ensp;&ensp;- 取0-1之间的随机小数：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; import random</span><br><span class="line">&gt;&gt;&gt; random.random()</span><br><span class="line">0.18001643527271916</span><br></pre></td></tr></table></figure></li></ul><p>&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;- 取自定义数里的随机数：(可以取多个元素)<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; random.choice([1,2,3,4,5])</span><br><span class="line">2</span><br><span class="line">&gt;&gt;&gt; random.choice([1,2,3,4,5])</span><br><span class="line">3</span><br><span class="line">&gt;&gt;&gt; random.sample([1,2,3,4,5,6,7,8,9],2)</span><br><span class="line">[3, 7]</span><br><span class="line">&gt;&gt;&gt; random.sample([1,2,3,4,5,6,7,8,9],3)</span><br><span class="line">[4, 9, 3]</span><br></pre></td></tr></table></figure></p><p>&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;- 随机打乱顺序：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; a=[1,2,3,4,5,8]</span><br><span class="line">&gt;&gt;&gt; random.shuffle(a)</span><br><span class="line">&gt;&gt;&gt; a</span><br><span class="line">[1, 8, 2, 3, 4, 5]</span><br></pre></td></tr></table></figure></p><p>&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;- 获取N位随机数：(二进制)<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; random.getrandbits(6)</span><br><span class="line">55</span><br><span class="line">&gt;&gt;&gt; random.getrandbits(6)</span><br><span class="line">48</span><br><span class="line">&gt;&gt;&gt; random.getrandbits(7)</span><br><span class="line">104</span><br></pre></td></tr></table></figure></p><ul><li><p>modf：把浮点数的整数位和小数位单独取出来</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; math.modf(1.4)</span><br><span class="line">(0.3999999999999999, 1.0)</span><br><span class="line">&gt;&gt;&gt; math.modf(1.5)</span><br><span class="line">(0.5, 1.0)</span><br><span class="line">&gt;&gt;&gt; math.modf(2.8)</span><br><span class="line">(0.7999999999999998, 2.0)</span><br><span class="line">&gt;&gt;&gt; math.modf(3.1)</span><br><span class="line">(0.10000000000000009, 3.0)</span><br></pre></td></tr></table></figure></li><li><p>log：指数函数。默认e为底数，结果为浮点数。也可以自定义底数</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; math.log(4,2)</span><br><span class="line">2.0</span><br><span class="line">&gt;&gt;&gt; math.log2(4)</span><br><span class="line">2.0</span><br><span class="line">&gt;&gt;&gt; math.log10(100)</span><br><span class="line">2.0</span><br><span class="line">&gt;&gt;&gt; math.log(100,10)</span><br><span class="line">2.0</span><br></pre></td></tr></table></figure></li><li><p>格式化输出：格式化输出保留有效数字,格式化输出的是字符串</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>s=format(<span class="number">2.345</span>,<span class="string">'0.2f'</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>s</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>type (s)</span><br><span class="line">&lt;<span class="class"><span class="keyword">class</span> '<span class="title">str</span>'&gt;</span></span><br><span class="line"><span class="class">&gt;&gt;&gt; <span class="title">round</span><span class="params">(<span class="number">2.5</span>)</span></span></span><br><span class="line"><span class="class">2</span></span><br><span class="line"><span class="class">&gt;&gt;&gt; <span class="title">format</span><span class="params">(<span class="number">2.5</span>,<span class="string">'0.0f'</span>)</span></span></span><br><span class="line"><span class="class">'2'</span></span><br></pre></td></tr></table></figure></li><li><p>Decimal模块：在使用浮点数的时候，因为计算机是使用二进制表示，所以会出现精度问题，可以使用Deciamal模块来解决精度问题</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>a=<span class="number">4.2</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>b=<span class="number">2.1</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a+b</span><br><span class="line"><span class="number">6.300000000000001</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">from</span> decimal <span class="keyword">import</span> Decimal</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a=Decimal(<span class="string">'2.1'</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>b=Decimal(<span class="string">'4.2'</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a+b</span><br><span class="line">Decimal(<span class="string">'6.3'</span>)</span><br></pre></td></tr></table></figure></li><li><p>格式化输出——format：使用format进行进制转换</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>a=<span class="number">20</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>bin(a)</span><br><span class="line"><span class="string">'0b10100'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>oct(a)</span><br><span class="line"><span class="string">'0o24'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>hex(a)</span><br><span class="line"><span class="string">'0x14'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>format(a,<span class="string">'b'</span>)</span><br><span class="line"><span class="string">'10100'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>format(a,<span class="string">'o'</span>)</span><br><span class="line"><span class="string">'24'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>format(a,<span class="string">'x'</span>)</span><br><span class="line"><span class="string">'14'</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="字符串"><a href="#字符串" class="headerlink" title="字符串"></a>字符串</h3><p>字符串(python2默认使用ascii编码，使用Unicode编码须在字符串前加u,python3使用unicode编码）<br>a=’str’<br>a=u’str’  </p><h4 id="字符串表示方法"><a href="#字符串表示方法" class="headerlink" title="字符串表示方法"></a>字符串表示方法</h4><ul><li>单引号：’str’ ‘1’</li><li>双引号：”str””1”</li><li>三引号：’’’…str…’’’ “””…str…”””</li><li>转义字符：“str1 \tadded tab\nstr2”</li><li>Raw字符串：r”C:\user\administrator”(无法进行转义操作)<h4 id="字符串操作"><a href="#字符串操作" class="headerlink" title="字符串操作"></a>字符串操作</h4><h5 id="字符串合并"><a href="#字符串合并" class="headerlink" title="字符串合并"></a>字符串合并</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"> &gt;&gt;&gt; <span class="string">'abc'</span>+<span class="string">'def'</span></span><br><span class="line"><span class="string">'abcdef'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">'hello'</span> *<span class="number">5</span></span><br><span class="line"><span class="string">'hellohellohellohellohello'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">print</span> (<span class="string">'-'</span>*<span class="number">50</span>)</span><br><span class="line">--------------------------------------------------</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">"aa"</span><span class="string">"bb"</span></span><br><span class="line"><span class="string">'aabb'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">'ab'</span><span class="string">'cd'</span></span><br><span class="line"><span class="string">'abcd'</span></span><br></pre></td></tr></table></figure></li></ul><h5 id="字符串取值"><a href="#字符串取值" class="headerlink" title="字符串取值"></a>字符串取值</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">a=<span class="string">"text"</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">for</span> c <span class="keyword">in</span> a:</span><br><span class="line"><span class="meta">... </span>    <span class="keyword">print</span> (c,end=<span class="string">''</span>)</span><br><span class="line">...</span><br><span class="line">text</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">for</span> c <span class="keyword">in</span> a:</span><br><span class="line"><span class="meta">... </span>    <span class="keyword">print</span> (c,end=<span class="string">'-'</span>)</span><br><span class="line">...</span><br><span class="line">t-e-x-t-</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">'x'</span> <span class="keyword">in</span> a</span><br><span class="line"><span class="keyword">True</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>text=<span class="string">'this_is_str'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>text[<span class="number">0</span>:<span class="number">4</span>]</span><br><span class="line"><span class="string">'this'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>text[<span class="number">5</span>:<span class="number">7</span>]</span><br><span class="line"><span class="string">'is'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>text[:<span class="number">4</span>]</span><br><span class="line"><span class="string">'this'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>text[<span class="number">-3</span>:]</span><br><span class="line"><span class="string">'str'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>text[<span class="number">-12</span>:<span class="number">-7</span>]</span><br><span class="line"><span class="string">'this'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>text[::<span class="number">2</span>]</span><br><span class="line"><span class="string">'ti_ssr'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>text[<span class="number">8</span>:<span class="number">1</span>:<span class="number">-2</span>]</span><br><span class="line"><span class="string">'ss_i'</span></span><br></pre></td></tr></table></figure><h5 id="字符串编码转换"><a href="#字符串编码转换" class="headerlink" title="字符串编码转换"></a>字符串编码转换</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; ord(&apos;d&apos;)</span><br><span class="line">100</span><br><span class="line">&gt;&gt;&gt; chr(99)</span><br><span class="line">&apos;c&apos;</span><br><span class="line">&gt;&gt;&gt; ord(&apos;王&apos;)</span><br><span class="line">29579</span><br><span class="line">&gt;&gt;&gt; chr(29579)</span><br><span class="line">&apos;王&apos;</span><br></pre></td></tr></table></figure><h5 id="字符串大小写转换"><a href="#字符串大小写转换" class="headerlink" title="字符串大小写转换"></a>字符串大小写转换</h5><ul><li><p>这里利用ascii编码进行大小写转换</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; Text=&quot;&quot;   #初始化Text</span><br><span class="line">&gt;&gt;&gt; text=&quot;aSdFgHjK&quot;  </span><br><span class="line">&gt;&gt;&gt; for i in text:</span><br><span class="line">...     i_code=ord(i)</span><br><span class="line">...     if 97&lt;=i_code and i_code&lt;=122:</span><br><span class="line">...             Text+=chr(i_code-32)</span><br><span class="line">...     else:</span><br><span class="line">...             Text+=i</span><br><span class="line">...</span><br><span class="line">&gt;&gt;&gt; Text</span><br><span class="line">&apos;ASDFGHJK&apos;</span><br><span class="line">&gt;&gt;&gt; for x in text:</span><br><span class="line">...     x_code=ord(x)</span><br><span class="line">...     if 65&lt;=x_code and x_code&lt;=90:</span><br><span class="line">...             Text+=chr(x_code+32)</span><br><span class="line">...     else:</span><br><span class="line">...             Text+=x</span><br><span class="line">...</span><br><span class="line">&gt;&gt;&gt; Text</span><br><span class="line">&apos;ASDFGHJKasdfghjk&apos;</span><br></pre></td></tr></table></figure></li><li><p>这里利用字符串的方法进行转换</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; str=&apos;asdFGHzxcVBN&apos;</span><br><span class="line">&gt;&gt;&gt; str.replace(&apos;asd&apos;,&apos;ASD&apos;)</span><br><span class="line">&apos;ASDFGHzxcVBN&apos;</span><br></pre></td></tr></table></figure></li><li><p>除此之外，还可以使用字符串的大小写方法进行大小写转换    </p></li></ul><p>ascii编码对照表<br>二进制 | 十进制 |十六进制 |图形|<br>—|—|—|—|<br>0010 0000|32|20|（空格）<br>0010 0001|33|21|!<br>0010 0010|34|22|”<br>0010 0011|35|23|#<br>0010 0100|36|24|$<br>0010 0101|37|25|%<br>0010 0110|38|26|&amp;<br>0010 0111|39|27|’’<br>0010 1000|40|28|(<br>0010 1001|41|29|)<br>0010 1010|42|2A|*<br>0010 1011|43|2B|+<br>0010 1100|44|2C|,<br>0010 1101|45|2D|-<br>0010 1110|46|2E|.<br>0010 1111|47|2F|/<br>0011 0000|48|30|0<br>0011 0001|49|31|1<br>0011 0010|50|32|2<br>0011 0011|51|33|3<br>0011 0100|52|34|4<br>0011 0101|53|35|5<br>0011 0110|54|36|6<br>0011 0111|55|37|7<br>0011 1000|56|38|8<br>0011 1001|57|39|9<br>0011 1010|58|3A|:<br>0011 1011|59|3B|;<br>0011 1100|60|3C|&lt;<br>0011 1101|61|3D|=<br>0011 1110|62|3E|&gt;<br>0011 1111|63|3F|?<br>0100 0000|64|40|@<br>0100 0001|65|41|A<br>0100 0010|66|42|B<br>0100 0011|67|43|C<br>0100 0100|68|44|D<br>0100 0101|69|45|E<br>0100 0110|70|46|F<br>0100 0111|71|47|G<br>0100 1000|72|48|H<br>0100 1001|73|49|I<br>0100 1010|74|4A|J<br>0100 1011|75|4B|K<br>0100 1100|76|4C|L<br>0100 1101|77|4D|M<br>0100 1110|78|4E|N<br>0100 1111|79|4F|O<br>0101 0000|80|50|P<br>0101 0001|81|51|Q<br>0101 0010|82|52|R<br>0101 0011|83|53|S<br>0101 0100|84|54|T<br>0101 0101|85|55|U<br>0101 0110|86|56|V<br>0101 0111|87|57|W<br>0101 1000|88|58|X<br>0101 1001|89|59|Y<br>0101 1010|90|5A|Z<br>0101 1011|91|5B|[<br>0101 1100|92|5C|\<br>0101 1101|93|5D|]<br>0101 1110|94|5E|^<br>0101 1111|95|5F|_<br>0110 0000|96|60|`<br>0110 0001|97|61|a<br>0110 0010|98|62|b<br>0110 0011|99|63|c<br>0110 0100|100|64|d<br>0110 0101|101|65|e<br>0110 0110|102|66|f<br>0110 0111|103|67|g<br>0110 1000|104|68|h<br>0110 1001|105|69|i<br>0110 1010|106|6A|j<br>0110 1011|107|6B|k<br>0110 1100|108|6C|l<br>0110 1101|109|6D|m<br>0110 1110|110|6E|n<br>0110 1111|111|6F|o<br>0111 0000|112|70|p<br>0111 0001|113|71|q<br>0111 0010|114|72|r<br>0111 0011|115|73|s<br>0111 0100|116|74|t<br>0111 0101|117|75|u<br>0111 0110|118|76|v<br>0111 0111|119|77|w<br>0111 1000|120|78|x<br>0111 1001|121|79|y<br>0111 1010|122|7A|z<br>0111 1011|123|7B|{<br>0111 1100|124|7C||<br>0111 1101|125|7D|}<br>0111 1110|126|7E|~</p><h4 id="字符串方法"><a href="#字符串方法" class="headerlink" title="字符串方法"></a>字符串方法</h4><h5 id="字符串大小写相关的方法"><a href="#字符串大小写相关的方法" class="headerlink" title="字符串大小写相关的方法"></a>字符串大小写相关的方法</h5><ul><li><p>capitalize()：字符串首字母大写</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>str=<span class="string">'hello world'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>str.capitalize()</span><br><span class="line"><span class="string">'Hello world'</span></span><br></pre></td></tr></table></figure></li><li><p>title()：字符串中单词的首字母大写</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>str.title()</span><br><span class="line"><span class="string">'Hello World'</span></span><br></pre></td></tr></table></figure></li><li><p>upper()：字符串转换成大写</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>str.upper()</span><br><span class="line"><span class="string">'HELLO WORLD'</span></span><br><span class="line">``` </span><br><span class="line">- lower()：字符串转换成小写</span><br><span class="line">```python</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>str.lower()</span><br><span class="line"><span class="string">'hello world'</span></span><br></pre></td></tr></table></figure></li><li><p>swapcase()：字符串大小写互转</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>str=<span class="string">'HellO wORld'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>str.swapcase()</span><br><span class="line"><span class="string">'hELLo WorLD'</span></span><br></pre></td></tr></table></figure></li></ul><h5 id="字符串排版相关的方法"><a href="#字符串排版相关的方法" class="headerlink" title="字符串排版相关的方法"></a>字符串排版相关的方法</h5><ul><li><p>center()：居中对齐</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>str=<span class="string">'hello'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>str.center(<span class="number">11</span>)</span><br><span class="line"><span class="string">'   helloo  '</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>str.center(<span class="number">11</span>,<span class="string">'_'</span>)</span><br><span class="line"><span class="string">'___helloo__'</span></span><br></pre></td></tr></table></figure></li><li><p>ljust()：居左对齐</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>str.ljust(<span class="number">11</span>,<span class="string">'_'</span>)</span><br><span class="line"><span class="string">'helloo_____'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>str.ljust(<span class="number">11</span>)</span><br><span class="line"><span class="string">'helloo</span></span><br></pre></td></tr></table></figure></li><li><p>rjust()：居右对齐</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>str.rjust(<span class="number">11</span>)</span><br><span class="line"><span class="string">'     hello'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>str.rjust(<span class="number">11</span>,<span class="string">'_'</span>)</span><br><span class="line"><span class="string">'_____hello'</span></span><br></pre></td></tr></table></figure><ul><li><p>expandtabs()：修改tab空格的个数</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"> &gt;&gt;&gt; str=<span class="string">'hello\tworld'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">print</span> (str)</span><br><span class="line">hello   world</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>str.expandtabs(<span class="number">9</span>)</span><br><span class="line"><span class="string">'hello    world'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>str.expandtabs(<span class="number">4</span>)</span><br><span class="line"><span class="string">'hello   world'</span></span><br></pre></td></tr></table></figure></li><li><p>zfill()：将字符串扩充到指定长度，前面使用0填充</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"> &gt;&gt;&gt; str.zfill(<span class="number">20</span>)</span><br><span class="line"><span class="string">'000000000hello\tworld'</span></span><br><span class="line"> &gt;&gt;&gt; <span class="string">'sad'</span>.zfill(<span class="number">10</span>)</span><br><span class="line"><span class="string">'0000000sad'</span></span><br></pre></td></tr></table></figure></li><li><p>strip()：删除字符串两边(左边lstrip或右边rstrip)的指定字符（默认为空格和换行符）</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"> &gt;&gt;&gt; str=<span class="string">'   hello world   '</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>str.strip()</span><br><span class="line"><span class="string">'hello world'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>str.lstrip()</span><br><span class="line"><span class="string">'hello world   '</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>str.rstrip()</span><br><span class="line"><span class="string">'   hello world'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>str=<span class="string">'hello,world'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>str.strip(<span class="string">'h'</span>)</span><br><span class="line"><span class="string">'ello,world'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>str.strip(<span class="string">'[held]'</span>)</span><br><span class="line"><span class="string">'o,wor'</span></span><br></pre></td></tr></table></figure></li></ul></li></ul><h5 id="字符串查找相关的方法"><a href="#字符串查找相关的方法" class="headerlink" title="字符串查找相关的方法"></a>字符串查找相关的方法</h5><ul><li>startswith(prefix[,start[,end]])/endswith(suffix[,start[,end]])  判断是否以特定字符串开头或者结尾<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>str=<span class="string">'hello,world'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>str.startswith(<span class="string">'hello'</span>)</span><br><span class="line"><span class="keyword">True</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>str.startswith(<span class="string">'hello'</span>,<span class="number">0</span>,<span class="number">5</span>)</span><br><span class="line"><span class="keyword">True</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>str.startswith(<span class="string">'hello'</span>,<span class="number">1</span>,<span class="number">5</span>)</span><br><span class="line"><span class="keyword">False</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>str.endswith(<span class="string">'rld'</span>,<span class="number">8</span>)</span><br><span class="line"><span class="keyword">True</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>str.endswith(<span class="string">'rld'</span>,<span class="number">9</span>)</span><br><span class="line"><span class="keyword">False</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>str.endswith(<span class="string">'rld'</span>,<span class="number">8</span>,<span class="number">11</span>)</span><br><span class="line"><span class="keyword">True</span></span><br><span class="line">```   </span><br><span class="line">- count(sub[,start[,end]])：相应字符串在文本中的个数</span><br><span class="line">```python</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>str=<span class="string">'hello,world'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>str.count(<span class="string">'l'</span>)</span><br><span class="line"><span class="number">3</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>str.count(<span class="string">'ll'</span>)</span><br><span class="line"><span class="number">1</span></span><br></pre></td></tr></table></figure></li></ul><ul><li><p>find/rfind()：分别从字符串前后开始查找第一个匹配到的字符串的位置,找不到就返回-1</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">str=<span class="string">'hello,world'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>str.find(<span class="string">'l'</span>)</span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>str.rfind(<span class="string">'l'</span>)</span><br><span class="line"><span class="number">9</span></span><br></pre></td></tr></table></figure></li><li><p>index/rindex()：与find方法类似，但是找不到会报错</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>str.index(<span class="string">'l'</span>)</span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>str.rindex(<span class="string">'l'</span>)</span><br><span class="line"><span class="number">9</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>str.index(<span class="string">'a'</span>)</span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File <span class="string">"&lt;stdin&gt;"</span>, line <span class="number">1</span>, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">ValueError: substring <span class="keyword">not</span> found</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>str.find(<span class="string">'a'</span>)</span><br></pre></td></tr></table></figure></li><li><p>replace(old,new[,count])：替换字符串，count代表替换个数</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>str.replace(<span class="string">'l'</span>,<span class="string">'L'</span>)</span><br><span class="line"><span class="string">'heLLo,worLd'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>str.replace(<span class="string">'l'</span>,<span class="string">'L'</span>,<span class="number">1</span>)</span><br><span class="line"><span class="string">'heLlo,world'</span></span><br></pre></td></tr></table></figure></li></ul><h5 id="格式判断相关方法"><a href="#格式判断相关方法" class="headerlink" title="格式判断相关方法"></a>格式判断相关方法</h5><ul><li>isalpha() ：判断是否是字母</li><li>isdigit()：判断是否是数字</li><li>isalnum()：判断是否是数字和字母</li><li>islower()：判断是否有字母，且字母为小写字母</li><li>isupper()：判断是否有字幕，且字母为大写字母</li><li>isspace()：判断是不是只有空格和换行符号</li><li>istitle()：判断字符串每个单词的首字母是否大写</li><li>isdecimal()：判断是不是数字</li><li>isnumeric()：判断是不是数字</li><li>isidentifier()：判断字符能否成为标识符</li><li>isprintable()：判断字符是否全部能打印的  </li></ul><blockquote><p>isdigit、isdecimal、isnumeric三者的区别<br>isdigit()<br>True: Unicode数字，byte数字（单字节），全角数字（双字节），罗马数字<br>False: 汉字数字<br>Error: 无</p></blockquote><blockquote><p>isdecimal()<br>True: Unicode数字，，全角数字（双字节）<br>False: 罗马数字，汉字数字<br>Error: byte数字（单字节）</p></blockquote><blockquote><p>isnumeric()<br>True: Unicode数字，全角数字（双字节），罗马数字，汉字数字<br>False: 无<br>Error: byte数字（单字节）</p></blockquote><h5 id="字符串分隔"><a href="#字符串分隔" class="headerlink" title="字符串分隔"></a>字符串分隔</h5><ul><li><p>split([sep[,maxsplit]])/rsplit([sep[,maxsplit]])：分别从左右按照sep字符串分隔，最多分隔maxsplit此，默认无数次</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; str=&apos;asd,fgh,jkl&apos;</span><br><span class="line">&gt;&gt;&gt; str.split(&apos;,&apos;)</span><br><span class="line">[&apos;asd&apos;, &apos;fgh&apos;, &apos;jkl&apos;]</span><br><span class="line">&gt;&gt;&gt; str.rsplit(&apos;,&apos;,1)</span><br><span class="line">[&apos;asd,fgh&apos;, &apos;jkl&apos;]</span><br></pre></td></tr></table></figure></li><li><p>splitlines()以\n或者\r或者\n\r分隔</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>str=<span class="string">'asd\nfgh\njkl'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>str.splitlines()</span><br><span class="line">[<span class="string">'asd'</span>, <span class="string">'fgh'</span>, <span class="string">'jkl'</span>]</span><br></pre></td></tr></table></figure></li><li><p>partition(sep)：将分隔符也作为一个元素列出来</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">'http://www.baidu.com'</span>.partition(<span class="string">'://'</span>)</span><br><span class="line">(<span class="string">'http'</span>, <span class="string">'://'</span>, <span class="string">'www.baidu.com'</span>)</span><br></pre></td></tr></table></figure></li></ul><h5 id="字符串其他方法"><a href="#字符串其他方法" class="headerlink" title="字符串其他方法"></a>字符串其他方法</h5><ul><li>join()：以特定的分隔符将字符串分隔<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>str=<span class="string">'asdfg'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">'-'</span>.join(str)</span><br><span class="line"><span class="string">'a-s-d-f-g'</span></span><br></pre></td></tr></table></figure></li></ul><h4 id="字符串格式化输出"><a href="#字符串格式化输出" class="headerlink" title="字符串格式化输出"></a>字符串格式化输出</h4><p>python字符串格式化输出的三种方式  </p><ol><li>使用字符串格式格式化操作符——百分号%</li><li>使用字符串方法 format</li><li>使用 f-strings进行字符串格式化<h5 id="使用-进行格式化"><a href="#使用-进行格式化" class="headerlink" title="使用%进行格式化"></a>使用%进行格式化</h5>这种格式化表达式类似于C语言</li></ol><table><thead><tr><th style="text-align:center">格式化操作符（%）</th><th style="text-align:center">说明</th></tr></thead><tbody><tr><td style="text-align:center">s</td><td style="text-align:center">获取传入对象的str方法的返回值，并将其格式化到指定位置</td></tr><tr><td style="text-align:center">r</td><td style="text-align:center">与s一样，但输出方式是repr方式，而不是str</td></tr><tr><td style="text-align:center">c</td><td style="text-align:center">整数：将数字转换成其unicode对应的值，10进制范围为 0&lt;=i&lt;=1114111（py27则只支持0-255）；字符：将字符添加到指定位置 </td></tr><tr><td style="text-align:center">d</td><td style="text-align:center">有符号十进制（整数），将整数、浮点数转换成十 进制表示，并将其格式化到指定位置  </td></tr><tr><td style="text-align:center">i</td><td style="text-align:center">有符号整数</td></tr><tr><td style="text-align:center">u</td><td style="text-align:center">无符号整数</td></tr><tr><td style="text-align:center">o</td><td style="text-align:center">将整数转换成八 进制表示，并将其格式化到指定位置</td></tr><tr><td style="text-align:center">x</td><td style="text-align:center">将整数转换成十六进制表示，并将其格式化到指定位置  </td></tr><tr><td style="text-align:center">X</td><td style="text-align:center">与x一样，A-F是大写</td></tr><tr><td style="text-align:center">e</td><td style="text-align:center">浮点指数，将整数、浮点数转换成科学计数法，并将其格式化到指定位置（小写e）</td></tr><tr><td style="text-align:center">E</td><td style="text-align:center">与e一样，E为大写</td></tr><tr><td style="text-align:center">f</td><td style="text-align:center">将整数、浮点数转换成浮点数表示，并将其格式化到指定位置（默认保留小数点后6位）</td></tr><tr><td style="text-align:center">F</td><td style="text-align:center">浮点数十进制</td></tr><tr><td style="text-align:center">g</td><td style="text-align:center">浮点e或f，自动调整将整数、浮点数转换成 浮点型或科学计数法表示</td></tr><tr><td style="text-align:center">G</td><td style="text-align:center">浮点E或F，自动调整将整数、浮点数转换成 浮点型或科学计数法表示</td></tr><tr><td style="text-align:center">%</td><td style="text-align:center">当字符串中存在格式化标志时，需要用 %%表示一个百分号</td></tr></tbody></table><blockquote><p>注：Python中百分号格式化是不存在自动将整数转换成二进制表示的方式   </p></blockquote><p>举例<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">"%s|%r|%c"</span> %(<span class="string">"this is str"</span>,<span class="string">"this is repr"</span>,<span class="string">"C"</span>)</span><br><span class="line"><span class="string">"this is str|'this is repr'|C"</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">"%d|%i|%o|%x|%X|"</span> %(<span class="number">3</span>,<span class="number">5</span>,<span class="number">12</span>,<span class="number">13</span>,<span class="number">14</span>)</span><br><span class="line"><span class="string">'3|5|14|d|E|'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">"%e|%E|%f|%F|%g|%G"</span> %(<span class="number">1.5E3</span>,<span class="number">1.5e3</span>,<span class="number">13.5</span>,<span class="number">13.5</span>,<span class="number">1.5e13</span>,<span class="number">13.5E15</span>)</span><br><span class="line"><span class="string">'1.500000e+03|1.500000E+03|13.500000|13.500000|1.5e+13|1.35E+16'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">"%(string)-10s"</span>%(&#123;<span class="string">'string'</span>:<span class="string">'1'</span>&#125;)</span><br><span class="line"><span class="string">'1 </span></span><br><span class="line"><span class="string">&gt;&gt;&gt; "%(float)+10.2F"%(&#123;'</span>float<span class="string">':3.1&#125;)</span></span><br><span class="line"><span class="string">'</span>     +<span class="number">3.10</span><span class="string">'</span></span><br><span class="line"><span class="string">&gt;&gt;&gt; "%(float)-10.2f"%(&#123;'</span>float<span class="string">':3.1&#125;)</span></span><br><span class="line"><span class="string">'</span><span class="number">3.10</span>      <span class="string">'</span></span><br></pre></td></tr></table></figure></p><h5 id="使用format方法"><a href="#使用format方法" class="headerlink" title="使用format方法"></a>使用format方法</h5><p>语法：{}.format(value)<br>参数:<br>（value):可以是整数，浮点数，字符串，字符甚至变量。<br>Returntype：返回一个格式化字符串，其值在占位符位置作为参数传递。<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#位置参数</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>username=<span class="string">'wanger'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>password=<span class="number">123456</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">print</span> (<span class="string">"&#123;&#125;'s password is &#123;&#125;"</span>.format(username,password))</span><br><span class="line">wange<span class="string">r's password is 123456  </span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&gt;&gt;&gt; username='</span>wange<span class="string">r'</span></span><br><span class="line"><span class="string">&gt;&gt;&gt; password=123456</span></span><br><span class="line"><span class="string">&gt;&gt;&gt; print ("&#123;1&#125;'</span>s password <span class="keyword">is</span> &#123;<span class="number">0</span>&#125;<span class="string">".format(password,username))</span></span><br><span class="line"><span class="string">wanger's password is 123456 </span></span><br><span class="line"><span class="string"> </span></span><br><span class="line"><span class="string">#下标参数</span></span><br><span class="line"><span class="string">&gt;&gt;&gt; si=['KB','MB','GB','TB','PB','EB','ZB','YB']</span></span><br><span class="line"><span class="string">&gt;&gt;&gt; '1000&#123;0[0]&#125;=1&#123;0[1]&#125;'.format(si)</span></span><br><span class="line"><span class="string">'1000KB=1MB'</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">#浮点数精度</span></span><br><span class="line"><span class="string">&gt;&gt;&gt; '&#123;:.4f&#125;'.format(3.1415926)</span></span><br><span class="line"><span class="string">'3.1416'</span></span><br><span class="line"><span class="string">&gt;&gt;&gt; '&#123;:&gt;10.4f&#125;'.format(3.1415926)</span></span><br><span class="line"><span class="string">'    3.1416'</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&gt;&gt;&gt; 'this is a test &#123;t[0]&#125;'.format(t='hello')</span></span><br><span class="line"><span class="string">'this is a test h'</span></span><br><span class="line"><span class="string">&gt;&gt;&gt; 'this is a test &#123;t[1]&#125;'.format(t='hello')</span></span><br><span class="line"><span class="string">'this is a test e'</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">#使用模块作为参数</span></span><br><span class="line"><span class="string">&gt;&gt;&gt; import sys</span></span><br><span class="line"><span class="string">&gt;&gt;&gt; sys.platform</span></span><br><span class="line"><span class="string">'win32'</span></span><br><span class="line"><span class="string">&gt;&gt;&gt; "</span>&#123;<span class="number">0.</span>platform&#125;<span class="string">".format(sys)</span></span><br><span class="line"><span class="string">'win32'</span></span><br><span class="line"><span class="string">&gt;&gt;&gt; 'my laptop platform is &#123;s&#125;'.format(s=sys.platform)</span></span><br><span class="line"><span class="string">'my laptop platform is win32'</span></span><br><span class="line"><span class="string">&gt;&gt;&gt; 'my laptop platform is (s.platform)'.format(s=sys)</span></span><br><span class="line"><span class="string">'my laptop platform is (s.platform)'</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">#关键字参数</span></span><br><span class="line"><span class="string">&gt;&gt;&gt; 'my name is &#123;name&#125; ,age is &#123;age&#125;'.format(name='wanger',age='25')</span></span><br><span class="line"><span class="string">'my name is wanger ,age is 25</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">```  </span></span><br><span class="line"><span class="string">当占位符&#123;&#125;为空时，Python将按顺序替换通过str.format（）传递的值。  </span></span><br><span class="line"><span class="string">str.format（）方法中存在的值本质上是元组数据类型，元组中包含的每个单独值都可以通过索引号调用，索引号以索引号0开头。  </span></span><br><span class="line"><span class="string">第三段代码的变量si是一个列表，&#123;0&#125;就代表format()方法的第一个参数，那么&#123;0[0]&#125;就代表列表的第一个元素，&#123;0[1]&#125;就代表列表的第二个元素  </span></span><br><span class="line"><span class="string">这个例子说明格式说明符可以通过利用（类似） Python 的语法</span></span><br><span class="line"><span class="string">访问到对象的元素或属性。这就叫做复合字段名 (compound field names) 。  </span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">以下复合字段名都是“ 有效的 ” 。   </span></span><br><span class="line"><span class="string">•  使用列表作为参数，并且通过下标索引来访问其元素（跟上</span></span><br><span class="line"><span class="string">一例类似）  </span></span><br><span class="line"><span class="string">•  使用字典作为参数，并且通过键来访问其值  </span></span><br><span class="line"><span class="string">•  使用模块作为参数，并且通过名字来访问其变量及函数  </span></span><br><span class="line"><span class="string">•  使用类的实例作为参数，并且通过名字来访问其方法和属性  </span></span><br><span class="line"><span class="string">•  以上方法的任意组合  </span></span><br><span class="line"><span class="string">###### format_spec参数</span></span><br><span class="line"><span class="string">表达式：format_spec ::=  [[fill]align][sign][#][0][width][,][.precision][type]</span></span><br><span class="line"><span class="string">- fill ::=  &lt;'any character'&gt;</span></span><br><span class="line"><span class="string">- align ::=  "</span>&lt;<span class="string">"'左对齐' | "</span>&gt;<span class="string">"‘右对齐’ | "</span>=<span class="string">"‘在数字里，符号左对齐，数字右对齐 | "</span>^<span class="string">"‘居中’</span></span><br><span class="line"><span class="string">- sign  ::=  "</span>+<span class="string">" | "</span>-<span class="string">" | "</span> <span class="string">"（当sign=’+‘时，即使是正数也会显示符号，-只有为负数的时候才显示负号，为空格时，会在正数前面留下符号位）</span></span><br><span class="line"><span class="string">- width ::=  integer  (定义输出的宽度)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">fill和align以及后面的width相当于str方法中的center，ljust,rjust </span></span><br><span class="line"><span class="string">```python</span></span><br><span class="line"><span class="string">&gt;&gt;&gt; '&#123;:+^15&#125;'.format('start')</span></span><br><span class="line"><span class="string">'+++++start+++++'</span></span><br><span class="line"><span class="string">&gt;&gt;&gt; '&#123;:+^15&#125;'.format('end')</span></span><br><span class="line"><span class="string">'++++++end++++++'</span></span><br><span class="line"><span class="string">&gt;&gt;&gt; '&#123;:*&lt;15&#125;'.format('end')</span></span><br><span class="line"><span class="string">'end************'</span></span><br><span class="line"><span class="string">&gt;&gt;&gt; '&#123;:*&gt;15&#125;'.format('start')</span></span><br><span class="line"><span class="string">'**********start'</span></span><br><span class="line"><span class="string">&gt;&gt;&gt; '&#123;:=+20&#125;'.format(10)</span></span><br><span class="line"><span class="string">'+                 10'</span></span><br><span class="line"><span class="string">&gt;&gt;&gt; print("</span>&#123;:=<span class="number">10</span>&#125;\n&#123;:=+<span class="number">20</span>&#125;\n&#123;:-^<span class="number">10</span>&#125;\n&#123;:=<span class="number">-13</span>&#125;<span class="string">".format(10,10,'-',-15))</span></span><br><span class="line"><span class="string">        10</span></span><br><span class="line"><span class="string">+                 10</span></span><br><span class="line"><span class="string">----------</span></span><br><span class="line"><span class="string">-          15</span></span><br></pre></td></tr></table></figure></p><ul><li><p>#只有在数字显示里，显示二进制数，八进制数，十六进制数的时候，需要显示前面的0b,0o,0x的时候才会用到</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">"&#123;0:8b&#125;,&#123;0:8o&#125;,&#123;0:8x&#125;"</span>.format(<span class="number">10</span>)</span><br><span class="line"><span class="string">'    1010,      12,       a'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">"&#123;0:b&#125;,&#123;0:o&#125;,&#123;0:x&#125;"</span>.format(<span class="number">10</span>)</span><br><span class="line"><span class="string">'1010,12,a'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>(<span class="string">"&#123;0:#8b&#125;,&#123;0:#8o&#125;,&#123;0:#8x&#125;"</span>.format(<span class="number">10</span>))</span><br><span class="line"><span class="string">'  0b1010,    0o12,     0xa'</span></span><br></pre></td></tr></table></figure></li><li><p>,符号是表示数字时每三位中间加，</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">'&#123;:,&#125;'</span>.format(<span class="number">100000000000</span>)</span><br><span class="line"><span class="string">'100,000,000,000'</span></span><br></pre></td></tr></table></figure></li><li><p>0是固定宽度前面补0</p></li><li><p>.precision ::=  integer(精度显示)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; &apos;&#123;:010.5&#125;&apos;.format(3.1415926)</span><br><span class="line">&apos;00003.1416&apos;</span><br></pre></td></tr></table></figure></li><li><p>type        ::=  “b” | “c” | “d” | “e” | “E” | “f” | “F” | “g” | “G” | “n” | “o” | “s” | “x” | “X” | “%”  (跟之前使用%表示的相等)<br>&ensp;&ensp;- 当为字符时：使用s，默认就是s<br>&ensp;&ensp;- 当为整数时：b,o,x和X是二进制、八进制、十六进制，c是数字按Unicode转换成字符，d是正常十进制，默认就是d。也可以使用n来代替d</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">"&#123;0:d&#125;,&#123;0:b&#125;,&#123;0:o&#125;,&#123;0:x&#125;,&#123;0:X&#125;"</span>.format(<span class="number">10</span>)</span><br><span class="line"><span class="string">'10,1010,12,a,A'</span></span><br></pre></td></tr></table></figure></li></ul><p>&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;- 为浮点数时：e和E是指数，f和F是浮点数。g和G是同一的，也可以使用n来代替g, %是显示百分比<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">"&#123;0:e&#125;,&#123;0:F&#125;,&#123;0:g&#125;,&#123;0:n&#125;,&#123;0:%&#125;"</span>.format(<span class="number">10.3</span>)</span><br><span class="line"><span class="string">'1.030000e+01,10.300000,10.3,10.3,1030.000000%'</span></span><br></pre></td></tr></table></figure></p><h5 id="使用f-strings方法进行格式化"><a href="#使用f-strings方法进行格式化" class="headerlink" title="使用f-strings方法进行格式化"></a>使用f-strings方法进行格式化</h5><p>f-strings也称为“格式化字符串文字”，f字符串是f在开头有一个字符串文字，其中以 {} 包含的表达式会进行值替换。表达式在运行时进行评估，然后使用<strong>format</strong>协议进行格式化。其中以 {} 包含的表达式会进行值替换。</p><h6 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h6><ol><li>代码简洁，没有多余的引号</li><li>括号{}里面的变量，可以是字符串类型，也可以是整型、浮点型，或者是复杂类型，比如数组、词典等，会自动转换成成字符串形式。</li><li>括号{}里面还可以是函数，比如 f’数组a的长度为:{len(a)}’。一句话，只要是位于 {} 中的，都会当做 python 代码来执行。但里面只能写表达式，不能写执行语句如{a=2}之类的。</li><li>f-string在本质上并不是字符串常量，而是一个在运行时运算求值的表达式，速度非常快</li></ol><p>简单举例<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; name=&apos;wanger&apos;</span><br><span class="line">&gt;&gt;&gt; age=25</span><br><span class="line">&gt;&gt;&gt; f&quot;hello,I&apos;m &#123;name&#125;,my age &#123;age&#125; &quot;</span><br><span class="line">&quot;hello,I&apos;m wanger,my age 25 &quot;</span><br><span class="line">#也可以使用大写F</span><br><span class="line">&gt;&gt;&gt; F&quot;hello, I&apos;m &#123;name&#125;,my age &#123;age&#125; &quot;</span><br><span class="line">&quot;hello, I&apos;m wanger,my age 25 &quot;</span><br></pre></td></tr></table></figure></p><p>当然也可以进行简单的计算<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; f&quot;&#123;2*3&#125;&quot;</span><br><span class="line">&apos;6&apos;</span><br></pre></td></tr></table></figure></p><p>也可以调用函数<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; def test(input):</span><br><span class="line">...     return input.lower()</span><br><span class="line">...</span><br><span class="line">&gt;&gt;&gt; name=&apos;WangEr&apos;</span><br><span class="line">&gt;&gt;&gt; f&quot;&#123;test(name)&#125; is funny&quot;</span><br><span class="line">&apos;wanger is funny&apos;</span><br></pre></td></tr></table></figure></p><p>还可以选择直接调用方法<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>name=<span class="string">'WangEr'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">f"<span class="subst">&#123;name.lower()&#125;</span> is funny"</span></span><br><span class="line"><span class="string">'wanger is funny'</span></span><br></pre></td></tr></table></figure></p><p>在使用字典的时候。如果要为字典的键使用单引号，请记住确保对包含键的f字符串使用双引号。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">comedian = &#123;&apos;name&apos;: &apos;wanger&apos;, &apos;age&apos;: 25&#125;</span><br><span class="line">f&quot;The comedian is &#123;comedian[&apos;name&apos;]&#125;, aged &#123;comedian[&apos;age&apos;]&#125;.&quot;</span><br><span class="line">&apos;The comedian is wanger, aged 25.&apos;</span><br></pre></td></tr></table></figure></p><h4 id="使用字符串的场景"><a href="#使用字符串的场景" class="headerlink" title="使用字符串的场景"></a>使用字符串的场景</h4><ul><li>使用多个界定符分隔字符串<br>split只能使用单一字符串，如果要使用多个分隔符的话，就要用到正则表达式模块了<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; str=&apos;asd,dfg;zxc ert  uio&apos;</span><br><span class="line">&gt;&gt;&gt; import re</span><br><span class="line">&gt;&gt;&gt; re.split(r&apos;[;,\s]\s*&apos;,str)</span><br><span class="line">[&apos;asd&apos;, &apos;dfg&apos;, &apos;zxc&apos;, &apos;ert&apos;, &apos;uio&apos;]</span><br></pre></td></tr></table></figure></li></ul><p>[]表示里面字符任意匹配。[;, ]表示；或者，或者空格，\s*表示任意个前面字符</p><ul><li><p>字符串开头或结尾匹配<br>比如要看一个地址是否是http://或者ftp://开头<br>或者查看文件后缀是不是TXT格式<br>可以这样查看</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>url=<span class="string">'http://www.baidu.com'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>ftp=<span class="string">'ftp://www.baidu.com'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>url.startswith((<span class="string">'http://'</span>,<span class="string">'ftp://'</span>))</span><br><span class="line"><span class="keyword">True</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>txt=<span class="string">'ziyuan.txt'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>txt.endswith(<span class="string">'txt'</span>)</span><br><span class="line"><span class="keyword">True</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>url[<span class="number">0</span>:<span class="number">7</span>]==<span class="string">"http://"</span> <span class="keyword">or</span> url[<span class="number">0</span>:<span class="number">6</span>]==<span class="string">"ftp://"</span></span><br><span class="line"><span class="keyword">True</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>txt[<span class="number">7</span>:<span class="number">10</span>]==<span class="string">"txt"</span></span><br><span class="line"><span class="keyword">True</span></span><br></pre></td></tr></table></figure></li><li><p>用shell通配符<br>我们还可以使用shell通配符来检查文件的结尾，这需要用到fnmatch模块<br>fnmatch不区分大小写，fnmatchcase是区分大小写的</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">from</span> fnmatch <span class="keyword">import</span> fnmatch,fnmatchcase</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>fnmatch(<span class="string">'log.txt'</span>,<span class="string">'*.txt'</span>)</span><br><span class="line"><span class="keyword">True</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>fnmatch(<span class="string">'log.TXT'</span>,<span class="string">'*.txt'</span>)</span><br><span class="line"><span class="keyword">True</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>fnmatchcase(<span class="string">'log.TXT'</span>,<span class="string">'*.txt'</span>)</span><br><span class="line"><span class="keyword">False</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>fnmatchcase(<span class="string">'log.TXT'</span>,<span class="string">'*.TXT'</span>)</span><br><span class="line"><span class="keyword">True</span></span><br></pre></td></tr></table></figure></li><li><p>匹配和搜索特定格式的文本<br>普通匹配可以使用find方法，如果是特定格式的话还是会用到正则模块</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>date1=<span class="string">'2018/10/24'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>date2=<span class="string">'2018/12/21'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>date3=<span class="string">'2018-12-05'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="function"><span class="keyword">def</span> <span class="title">isdate</span><span class="params">(date)</span>:</span></span><br><span class="line"><span class="meta">... </span>    <span class="keyword">if</span> re.match(<span class="string">r'\d+/\d+/\d+'</span>,date):</span><br><span class="line"><span class="meta">... </span>            <span class="keyword">print</span> (<span class="string">'match OK'</span>)</span><br><span class="line"><span class="meta">... </span>    <span class="keyword">else</span>:</span><br><span class="line"><span class="meta">... </span>            <span class="keyword">print</span> (<span class="string">'not match'</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>isdate(date1)</span><br><span class="line">match OK</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>isdate(date2)</span><br><span class="line">match OK</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>isdate(date3)</span><br><span class="line"><span class="keyword">not</span> match</span><br></pre></td></tr></table></figure></li></ul><p>在正则模块re中\d表示单个数字，+表示一个或多个前面的字段</p><ul><li>搜索和替换特定的文本格式<br>普通的匹配可以使用replace方法，如果匹配特定格式，还是要用正则模块re<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> re</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>date=<span class="string">'today is 13/12/2018'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>re.sub(<span class="string">r'(\d+)/(\d+)/(\d+)'</span>,<span class="string">r'\3-\2-\1'</span>,date)</span><br><span class="line"><span class="string">'today is 2018-12-13'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>datepat=re.compile(<span class="string">r'(\d+)/(\d+)/(\d+)'</span>)   <span class="comment">#为了防止每次都要定义匹配模式，可以在这里定义一个匹配的变量，以后匹配直接调用这个变量</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>datepat.sub(<span class="string">r'\3-\2-\1'</span>,date)</span><br><span class="line"><span class="string">'today is 2018-12-13'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>date=<span class="string">'yestory is 12/12/2018,today is 13/12/2018'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>datepat.subn(<span class="string">r'\3-\2-\1'</span>,date)</span><br><span class="line">(<span class="string">'yestory is 2018-12-12,today is 2018-12-13'</span>, <span class="number">2</span>)</span><br></pre></td></tr></table></figure></li></ul><p>\1,\2,\3分别代表前面匹配模式中的第一个括号匹配到的，第二个括号匹配到的，第三个括号匹配到的，使用subn方法可以看到匹配到几次</p><ul><li>忽略大小写的搜索替换<br>如果要忽略大小写还是要用到re模块，需要用到的是re的IGNORECASE方法<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> re</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>re.findall(<span class="string">'replace'</span>,<span class="string">'Replace,replace,REPLACE'</span>)</span><br><span class="line">[<span class="string">'replace'</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>re.findall(<span class="string">'replace'</span>,<span class="string">'Replace,replace,REPLACE'</span>,flags=re.IGNORECASE)</span><br><span class="line">[<span class="string">'Replace'</span>, <span class="string">'replace'</span>, <span class="string">'REPLACE'</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>str=<span class="string">'Replace is the same as REPLACE'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>re.sub(<span class="string">'replace'</span>,<span class="string">'WORD'</span>,str,flags=re.IGNORECASE)</span><br><span class="line"><span class="string">'WORD is the same as WORD'</span></span><br></pre></td></tr></table></figure></li></ul><ul><li><p>最短匹配模式<br>用正则表达式匹配某个文本模式，而他找到的是最长匹配，如果要匹配最短字符，可以用下面的方法</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; strpat=re.compile(r&apos;\&quot;(.*)\&quot;&apos;)</span><br><span class="line">&gt;&gt;&gt; text=&apos;this is my &quot;name&quot;&apos;</span><br><span class="line">&gt;&gt;&gt; strpat.findall(text)</span><br><span class="line">[&apos;name&apos;]</span><br><span class="line">&gt;&gt;&gt; text=&apos;this is my &quot;name&quot; and this is my &quot;age&quot;&apos;</span><br><span class="line">&gt;&gt;&gt; strpat.findall(text)</span><br><span class="line">[&apos;name&quot; and this is my &quot;age&apos;]</span><br><span class="line">&gt;&gt;&gt; strpat=re.compile(r&apos;\&quot;(.*?)&quot;&apos;)</span><br><span class="line">&gt;&gt;&gt; strpat.findall(text)</span><br><span class="line">[&apos;name&apos;, &apos;age&apos;]</span><br></pre></td></tr></table></figure></li><li><p>删除字符串中不需要的字符<br>去掉字符串开头，中间或者结尾不想要的字符串，比如空白</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>s=<span class="string">'hello world \n'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>s.strip()</span><br><span class="line"><span class="string">'hello world'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>s.lstrip()</span><br><span class="line"><span class="string">'hello world \n'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>s.rstrip()</span><br><span class="line"><span class="string">'hello world'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> re</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>re.sub(<span class="string">r'\s+'</span>,<span class="string">''</span>,s)</span><br><span class="line"><span class="string">'helloworld'</span></span><br></pre></td></tr></table></figure></li><li><p>合并拼接字符串</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; a=&apos;hello&apos;</span><br><span class="line">&gt;&gt;&gt; b=&apos;world&apos;</span><br><span class="line">&gt;&gt;&gt; a+&apos; &apos;+b</span><br><span class="line">&apos;hello world&apos;</span><br><span class="line">&gt;&gt;&gt; &apos;&#123;&#125; &#123;&#125;&apos;.format(a,b)</span><br><span class="line">&apos;hello world&apos;</span><br><span class="line">&gt;&gt;&gt; &apos; &apos;.join([a,b])</span><br><span class="line">&apos;hello world&apos;</span><br><span class="line">&gt;&gt;&gt; a=print(a,b)</span><br><span class="line">hello world</span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;python数据类型：&quot;&gt;&lt;a href=&quot;#python数据类型：&quot; class=&quot;headerlink&quot; title=&quot;python数据类型：&quot;&gt;&lt;/a&gt;python数据类型：&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;Number（数字）&lt;/li&gt;
&lt;li&gt;String(字
      
    
    </summary>
    
    
      <category term="python数据结构" scheme="https://wahaha5354.github.io/tags/python%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
  </entry>
  
  <entry>
    <title>python-os模块学习笔记</title>
    <link href="https://wahaha5354.github.io/2018/11/30/python-os%E6%A8%A1%E5%9D%97%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <id>https://wahaha5354.github.io/2018/11/30/python-os模块学习笔记/</id>
    <published>2018-11-30T06:52:03.000Z</published>
    <updated>2018-11-30T06:57:18.324Z</updated>
    
    <content type="html"><![CDATA[<p>import os<br>os.mkdir(name)   #创建目录<br>os.path.exists(name)   #判断文件或者目录是否存在<br>os.path.isdir(name)     #判断指定对象是否为目录。是True,否则False。<br>os.mknod(name)    #创建一个文件<br>os.path.isfile(name)   #判断文件是否存在，存在返回True，否则返回False<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>os.mkdir(<span class="string">'aaaa'</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>os.path.exists(<span class="string">'aaaa'</span>)</span><br><span class="line"><span class="keyword">True</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>os.path.isdir(<span class="string">'aaaa'</span>)</span><br><span class="line"><span class="keyword">True</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>os.mknod(<span class="string">'test.txt'</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>os.path.isfile(<span class="string">'test.txt'</span>)</span><br><span class="line"><span class="keyword">True</span></span><br></pre></td></tr></table></figure></p><p>os.rmdir(name)     #删除一个目录<br>os.remove(name) #删除一个文件<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>os.rmdir(<span class="string">'aaaa'</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>os.path.isdir(<span class="string">'aaaa'</span>)</span><br><span class="line"><span class="keyword">False</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>os.remove(<span class="string">'test.txt'</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>os.path.isfile(<span class="string">'test.txt'</span>)</span><br><span class="line"><span class="keyword">False</span></span><br></pre></td></tr></table></figure></p><p>os.getcwd()   #获取当前路径，相当于Linux下的pwd命令<br>os.path.abspath(file|dir)   #获取文件或者目录的绝对路径<br>os.path.basename(name)  #获取文件名或文件夹名<br>os.path.dirname(name)   #获取文件或文件夹的路径<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>os.getcwd()</span><br><span class="line"><span class="string">'/root/SuXinProject'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>os.path.abspath(<span class="string">'.'</span>)</span><br><span class="line"><span class="string">'/root/SuXinProject'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>os.path.dirname(<span class="string">'/root/user.sh'</span>)</span><br><span class="line"><span class="string">'/root'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>os.path.basename(<span class="string">'/root/user.sh'</span>)</span><br><span class="line"><span class="string">'user.sh'</span></span><br></pre></td></tr></table></figure></p><p>os.path.splitext      #分离文件名与扩展名<br>os.path.split     #分离目录与文件名<br>os.path.join(path,name)   #连接目录与文件名或目录<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>os.path.split(<span class="string">'/root/user.sh'</span>)</span><br><span class="line">(<span class="string">'/root'</span>, <span class="string">'user.sh'</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>os.path.splitext(<span class="string">'/root/user.sh'</span>)</span><br><span class="line">(<span class="string">'/root/user'</span>, <span class="string">'.sh'</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>os.path.join(<span class="string">'/root/'</span>,<span class="string">'user.sh'</span>)</span><br><span class="line"><span class="string">'/root/user.sh'</span></span><br></pre></td></tr></table></figure></p><p>os.chdir(dir)   #切换目录<br>os.listdir(dir)   #列出目录下的所有目录和文件<br>os.path.getsize(file|dir)    #获取文件的大小，如果是目录则直接返回0<br>os.stat(name)    #获取文件属性<br>os.system(commond)   #执行系统命令<br>os.rename(old,new)    #文件重命名<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>os.chdir(<span class="string">'/root'</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>os.listdir(<span class="string">'.'</span>)</span><br><span class="line">[<span class="string">'.vnc'</span>, <span class="string">'mysql-5.7.21-linux-glibc2.12-x86_64.tar.gz'</span>, <span class="string">'.pydistutils.cfg'</span>, <span class="string">'.cache'</span>, <span class="string">'.git'</span>, <span class="string">'file'</span>, <span class="string">'.mozilla'</span>, <span class="string">'.rnd'</span>, <span class="string">'GUESS'</span>, <span class="string">'Music'</span>, <span class="string">'run.sh'</span>, <span class="string">'.finalshell'</span>, <span class="string">'.viminfy.tmp'</span>, <span class="string">'.config'</span>, <span class="string">'docker-logspout-elk'</span>, <span class="string">'Desktop'</span>, <span class="string">'sed.txt'</span>, <span class="string">'100oush.sh'</span>, <span class="string">'pid2.txt'</span>, <span class="string">'.cshrc'</span>, <span class="string">'mynginx'</span>, <span class="string">'.bash_profile'</span>, <span class="string">'etcd'</span>, <span class="string">'sh.txt'</span>, <span class="string">'oushu.sh'</span>, <span class="string">'.docker'</span>, <span class="string">'.viminfx.tmp'</span>, <span class="string">'pid.sh'</span>, <span class="string">'test'</span>, <span class="string">'.pycharm_helpers'</span>, <span class="string">'user.sh'</span>, <span class="string">'net'</span>, <span class="string">'jiujiu.sh'</span>, <span class="string">'.dbus'</span>, <span class="string">'sum100.sh'</span>, <span class="string">'.ssh'</span>, <span class="string">'.bashrc'</span>, <span class="string">'LinEnum'</span>, <span class="string">'sysinfo.sh'</span>, <span class="string">'.esd_auth'</span>, <span class="string">'for100oushu.sh'</span>, <span class="string">'pid1.txt'</span>, <span class="string">'.local'</span>, <span class="string">'SuXinProject'</span>, <span class="string">'phone.sh'</span>, <span class="string">'.ansible'</span>, <span class="string">'.viminfz.tmp'</span>, <span class="string">'Documents'</span>, <span class="string">'.viminfo.tmp'</span>, <span class="string">'study'</span>, <span class="string">'.ICEauthority'</span>, <span class="string">'Pictures'</span>, <span class="string">'for99.sh'</span>, <span class="string">'.bash_logout'</span>, <span class="string">'.pid.sh.swp'</span>, <span class="string">'qiuhe.sh'</span>, <span class="string">'pid.txt'</span>, <span class="string">'.viminfo'</span>, <span class="string">'.npm'</span>, <span class="string">'fors00oushu.sh'</span>, <span class="string">'.pki'</span>, <span class="string">'99.sh'</span>, <span class="string">'.gitconfig'</span>, <span class="string">'etcd-v3.2.10-linux-amd64'</span>, <span class="string">'nohup.out'</span>, <span class="string">'Public'</span>, <span class="string">'user1.sh'</span>, <span class="string">'diff.txt'</span>, <span class="string">'.Xauthority'</span>, <span class="string">'.virtualenvs'</span>, <span class="string">'.node_repl_history'</span>, <span class="string">'.pip'</span>, <span class="string">'.bash_history'</span>, <span class="string">'Downloads'</span>, <span class="string">'Videos'</span>, <span class="string">'killpid.sh'</span>, <span class="string">'Templates'</span>, <span class="string">'daemon.json'</span>, <span class="string">'beijing'</span>, <span class="string">'dif'</span>, <span class="string">'.tcshrc'</span>, <span class="string">'kill.sh'</span>, <span class="string">'.mysql_history'</span>, <span class="string">'biao.txt'</span>, <span class="string">'blog'</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>os.path.getsize(<span class="string">'./user.sh'</span>)</span><br><span class="line"><span class="number">299</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>os.stat(<span class="string">'./user.sh'</span>)</span><br><span class="line">posix.stat_result(st_mode=<span class="number">33261</span>, st_ino=<span class="number">143152</span>, st_dev=<span class="number">64769L</span>, st_nlink=<span class="number">1</span>, st_uid=<span class="number">0</span>, st_gid=<span class="number">0</span>, st_size=<span class="number">299</span>, st_atime=<span class="number">1543135673</span>, st_mtime=<span class="number">1542818209</span>, st_ctime=<span class="number">1542818209</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>os.system(<span class="string">'whoami'</span>)</span><br><span class="line">root</span><br><span class="line"><span class="number">0</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>os.rename(<span class="string">'99.sh'</span>,<span class="string">'999.sh'</span>)</span><br></pre></td></tr></table></figure></p><p>os.getuid()    #获取用户id<br>os.getgid()    #获取用户组id<br>os.environ[‘环境变量名称’]=’环境变量值’      #设置环境变量<br>os.environ[‘环境变量名称’]       #获取环境变量<br>os.getenv(‘环境变量名称’)       #获取环境变量<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>os.getuid()</span><br><span class="line"><span class="number">0</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>os.getgid()</span><br><span class="line"><span class="number">0</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>os.environ[<span class="string">'PYTHON'</span>]=<span class="string">'/usr/local/bin'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>os.environ[<span class="string">'PYTHON'</span>]</span><br><span class="line"><span class="string">'/usr/local/bin'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>os.getenv(<span class="string">'PYTHON'</span>)</span><br><span class="line"><span class="string">'/usr/local/bin'</span></span><br></pre></td></tr></table></figure></p><p>os.walk(top[, topdown=True[, onerror=None[, followlinks=False]]])      # 从上到下或从下到上遍历树来生成目录树中的文件名  </p><h4 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h4><ul><li>top - 以目录为根的每个目录产生3元组，即（dirpath，dirnames，filenames）。dirpath为目录的路径，为一个字符串。dirnames列出了目录路径下面所有存在的目录的名称。filenames列出了目录路径下面所有文件的名称。不明白的可以看下图</li><li>topdown - 如果可选参数topdown为True或未指定，则从上到下扫描目录。如果topdown设置为False，则会自下而上扫描目录，不懂的话可以看下面的代码就明白了</li><li>onerror - 这可能会显示错误以继续行走，或者引发异常以中止行走。</li><li>followlinks - 如果设置为true，则访问符号链接指向的目录。<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">for</span> root, dirs, files <span class="keyword">in</span> os.walk(<span class="string">"."</span>):</span><br><span class="line"><span class="meta">... </span>    <span class="keyword">for</span> name <span class="keyword">in</span> dirs:</span><br><span class="line"><span class="meta">... </span>            print(os.path.join(root,name))</span><br><span class="line"><span class="meta">... </span></span><br><span class="line">./shell编程</span><br><span class="line">./test</span><br><span class="line">./ftp</span><br><span class="line">./hexo</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">for</span> root, dirs, files <span class="keyword">in</span> os.walk(<span class="string">"."</span>, topdown=<span class="keyword">False</span>):</span><br><span class="line"><span class="meta">... </span>     <span class="keyword">for</span> name <span class="keyword">in</span> files:</span><br><span class="line"><span class="meta">... </span>            print(os.path.join(root, name))</span><br><span class="line"><span class="meta">... </span></span><br><span class="line">./shell编程/index.html</span><br><span class="line">./test/index.html</span><br><span class="line">./ftp/index.html</span><br><span class="line">./hexo/index.html</span><br><span class="line">./index.html</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">for</span> root, dirs, files <span class="keyword">in</span> os.walk(<span class="string">"."</span>):</span><br><span class="line"><span class="meta">... </span>     <span class="keyword">for</span> name <span class="keyword">in</span> files:</span><br><span class="line"><span class="meta">... </span>            print(os.path.join(root, name))</span><br><span class="line"><span class="meta">... </span></span><br><span class="line">./index.html</span><br><span class="line">./shell编程/index.html</span><br><span class="line">./test/index.html</span><br><span class="line">./ftp/index.html</span><br><span class="line">./hexo/index.html</span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;import os&lt;br&gt;os.mkdir(name)   #创建目录&lt;br&gt;os.path.exists(name)   #判断文件或者目录是否存在&lt;br&gt;os.path.isdir(name)     #判断指定对象是否为目录。是True,否则False。&lt;br&gt;os.
      
    
    </summary>
    
    
      <category term="python" scheme="https://wahaha5354.github.io/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>http学习笔记</title>
    <link href="https://wahaha5354.github.io/2018/10/29/http%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <id>https://wahaha5354.github.io/2018/10/29/http学习笔记/</id>
    <published>2018-10-29T14:07:04.000Z</published>
    <updated>2018-10-31T15:28:28.728Z</updated>
    
    <content type="html"><![CDATA[<p>http:hypertext transfer protocol：超文本传输协议<br>超文本：带有超级链接的链接<br>超级链接：能够实现在不同的文档中跳转<br>http/0.9版本：只支持纯文本的传输（带有超级连接）ASCII码<br>&emsp;&emsp;HTML:hypertext mark<br>&emsp;&emsp;language:超文本标记语言<br>&emsp;&emsp;支持get方法，且不支持请求头</p><p>Browser:浏览器<br>URI:uniform resource<br>indentifier:统一资源标识符<br>URL：uniform resource locator：统一资源定位符<br>&emsp;&emsp;统一：路径格式的统一<br>&emsp;&emsp;protocal://address/to/resouce_path<br>web资源：用URL标识，并且让用户客户端代理（浏览器）能够访问的文件<br>HTML：把多种web资源整合成一个HTML文档，并能够让浏览器访问显示的一种语言<br>http/1.0版本：<br>&emsp;&emsp;  1.引入MIME机制（为了实现能够传输分文本信息）<br>&emsp;&emsp;  MIME:multi Internet mail extension：多用途互联网邮件交换协议，将非文本数据在传输之前重新编码为文本格式，接收方能够利用相反的方式将其重新还原为原来的格式，还能调用相应的应程序显示此文件<br>&emsp;&emsp;扩展：SMTP:simple mail transfer    protocol：简单邮件传输协议<br>  &emsp;&emsp;2.请求与响应头域<br>  &emsp;&emsp;3.响应对象以一个响应状态行开始<br> &emsp;&emsp;4.响应对象不止限于文本<br>  &emsp;&emsp;5.开始支持客户端通过POST方法向web服务器提交数据，支持GET、HEAD、POST方法<br>  &emsp;&emsp;6.支持长连接（但默认还是使用短连接），<br>  &emsp;&emsp;7.缓存机制（加快速度），以及身份验证  </p><blockquote><p>动态网页：web服务器存储的文档是非HTML文档，而是动态语言，动态语言生成的脚本能够接受用户的参数后形成HTML文档，把生成的文档返回给客户端</p></blockquote><p>http/1.1是目前使用最广泛的协议版本，在http1.0中使用长连接需要添加请求头Connection:Keep-Alive,而在http1.1默认支持长连接，除非特殊声明不支持（HTTP请求首部加上Connection:Close）,http1.1引入了许多关键优化：keepalive连接。chunked编码传输，字节范围请求，请求流水线等<br>HTTP1.1协议中共定义了八种方法来表明Request-URI指定的资源的不同的操作方式：<br>&emsp;&emsp;1.     OPTIONS：返回服务器针对特定资源所支持的HTTP请求方法，也可以利用向web发送’*’的请求来测试服务器的功能性<br>&emsp;&emsp;2.     HEAD：向服务器索要与GET请求相一致的响应，只不过想硬体将不会被返回，这一方法可以在不必传输整个响应内容的情况下，就可以获取包含在响应消息头中的元信息<br>&emsp;&emsp;3.     GET：向特定的资源发出请求。注意：GET方法不应被用于产生“副作用”的操作中，例如在web app中，其中一个原因是GET可能会被网络爬虫等随意访问<br>&emsp;&emsp;4.     POST：向指定资源提交数据进行数据请求（例如提交表单或者上传文件）.数据被包含在请求体中，POST请求可能会导致新的资源的建立或已有资源的修改<br>&emsp;&emsp;5.     PUT：向指定资源位置上传其最新内容<br>&emsp;&emsp;6.     DELETE：请求服务器删除Request-URI所标识的资源<br>&emsp;&emsp;7.     TRACE：回显服务器收到的请求，主要用于测试和诊断<br>&emsp;&emsp;8.     CONNECT：http/1.1协议中预留给能够将连接改为管道方式的代理服务器  </p><p>http/2.0是下一代http协议，目前应用还非常少，主要特点有：<br>    &emsp;&emsp;多路复用（二进制分帧）：在二进制分帧层上，http2.0将所有传输的信息分割为更小的消息和帧，并对他们采用二进制格式的编码<br>    &emsp;&emsp;头部压缩：当一个客户端向相同服务器请求许多资源时，向来自同一个网页的图像，将会有大量的请求看上去几乎同样的，这就需要压缩技术对付这种几乎相同的信息<br>    &emsp;&emsp;随时复位：http1.1一个缺点是当http信息有一定长度大小数据传输时，你不能方便地随时停止他，中断TCP连接的代价是昂贵的，使用http2的RST_STREAM将能够方便停止一个信息传输，启动新的信息，在不中断连接的情况下提高带宽利用效率  </p><pre><code>服务器端推流：server Push:客户端请求一个资源X，服务器端判断也许客户端还需要资源Z，在无需事先询问客户端情况下将资源Z推送到客户端，客户端接受到后，可以缓存起来以备后用.优先权和依赖：每个流都有自己的优先级别，会表明哪个流是最重要的，客户端会指定哪个流是最重要的，有一些依赖参数，这样一个流可以依赖另一个流，优先级别可以在运行时动态改变，当用户滚动页面时，可以告诉浏览器哪个图像是最重要的，你也可以在一组流中进行优先筛选，能够突出抓住重点流</code></pre><p>http报文：请求报文（http request）和响应报文（http response）  </p><p>&emsp;&emsp;请求报文语法：<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">method</span>&gt;</span><span class="tag">&lt;<span class="name">request-URI</span>&gt;</span><span class="tag">&lt;<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">headers</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">entity-body</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>&emsp;&emsp;响应报文语法：<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span><span class="tag">&lt;<span class="name">status</span>&gt;</span><span class="tag">&lt;<span class="name">reason-phrase</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">headrers</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">entity-body</span>&gt;</span></span><br></pre></td></tr></table></figure></p><h4 id="响应报文的状态代码："><a href="#响应报文的状态代码：" class="headerlink" title="响应报文的状态代码："></a>响应报文的状态代码：</h4><p>&emsp;&emsp;1xx：纯信息，已经弃用<br>&emsp;&emsp;200：“成功“类的信息<br>&emsp;&emsp;301：永久重定向<br>&emsp;&emsp;302：临时重定向<br>&emsp;&emsp;304：浏览器缓存<br>&emsp;&emsp;403：请求不到首页，权限被拒绝<br>&emsp;&emsp;404：资源找不到<br>&emsp;&emsp;500：服务器内部错误，程序代码错误<br>&emsp;&emsp;502：找不到后端的错误<br>&emsp;&emsp;504：请求超时</p><h4 id="Web服务器处理并发连接请求的并发模型"><a href="#Web服务器处理并发连接请求的并发模型" class="headerlink" title="Web服务器处理并发连接请求的并发模型"></a>Web服务器处理并发连接请求的并发模型</h4><p>&emsp;&emsp;1.单线程web服多器(Single-threaded web servers):此种架构方式中,web服多器一次处理一个请求.结束后读取井处理下一个请求.在某请求处理辻程中,其它所有的清求将被阻塞,因此;在并发请求较多的场景中将会出现严重的性能问题（即一次只能处理一个请求）</p><p>&emsp;&emsp;2.多进程/多线程web服灸器:此种架构方式中, web服多器生成多个进程或线程并行处理多个用戸请求,进程或线程可以按需或事先生成、有的web服务器应用程序为每个用戸请求生成一个単独的进程或线程来进行响应,不过, 一旦并发请求数量达到成千上万吋,多个同吋进行的进程或线程将会消耗大量的系統资源（即每个进程只能响应一个请求，并且一个进程对应一个线程）</p><p>&emsp;&emsp;3.I/O多路复用web服努器:为了能够支持更多的并友用户清求,越来越多的web服努器正在采用多种复用的架构–即同歩监控所有的连接靖求的活动状态，当一个连接的状态发生改变时(如数据准各完毕或发生某错误)将为其执行一系列特定操作；在操作完成后此连接将重新变回暂时的稳定态并返回至打开的连接列表中，直到下次的状态改变，由于其多路复用的特性,进程或线程不会被空闲的连接所占用，因而可以提供高效的工作模弌.（<br>这种架构可以理解为一个进程可以生成多个线程，每个请求交给一个线程程迸行处理)  </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;http:hypertext transfer protocol：超文本传输协议&lt;br&gt;超文本：带有超级链接的链接&lt;br&gt;超级链接：能够实现在不同的文档中跳转&lt;br&gt;http/0.9版本：只支持纯文本的传输（带有超级连接）ASCII码&lt;br&gt;&amp;emsp;&amp;emsp;HTML
      
    
    </summary>
    
    
      <category term="lnmp" scheme="https://wahaha5354.github.io/tags/lnmp/"/>
    
  </entry>
  
  <entry>
    <title>网络安全学习网址</title>
    <link href="https://wahaha5354.github.io/2018/10/25/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%AD%A6%E4%B9%A0%E7%BD%91%E5%9D%80/"/>
    <id>https://wahaha5354.github.io/2018/10/25/网络安全学习网址/</id>
    <published>2018-10-25T14:33:46.000Z</published>
    <updated>2018-10-25T15:17:49.573Z</updated>
    
    <content type="html"><![CDATA[<h2 id="网络安全学习网址"><a href="#网络安全学习网址" class="headerlink" title="网络安全学习网址"></a>网络安全学习网址</h2><blockquote><p><a href="http://www.sec-wiki.com/skill/安全技能(里面渗透逆向编程都有介绍)" target="_blank" rel="noopener">http://www.sec-wiki.com/skill/安全技能(里面渗透逆向编程都有介绍)</a><br><a href="http://blog.knownsec.com/Knownsec_RD_Checklist/" target="_blank" rel="noopener">http://blog.knownsec.com/Knownsec_RD_Checklist/</a> 知道创宇研发技能表v3.0<br><a href="https://www.shentoushi.top/network" target="_blank" rel="noopener">https://www.shentoushi.top/network</a>  渗透师 （网络安全学习网址导航）<br><a href="https://www.anquanquan.info/" target="_blank" rel="noopener">https://www.anquanquan.info/</a>   安全圈info（网络安全学习导航网址）  </p></blockquote><h3 id="综合学习平台："><a href="#综合学习平台：" class="headerlink" title="综合学习平台："></a>综合学习平台：</h3><blockquote><p><a href="https://secquan.org" target="_blank" rel="noopener">https://secquan.org</a>  圈子社区<br><a href="https://github.com/cxf210/Scanners-Box" target="_blank" rel="noopener">https://github.com/cxf210/Scanners-Box</a><br><a href="http://edu.gooann.com/" target="_blank" rel="noopener">http://edu.gooann.com/</a>  谷安网校<br><a href="https://edu.aqniu.com/" target="_blank" rel="noopener">https://edu.aqniu.com/</a>  安全牛课堂<br><a href="http://www.jikexueyuan.com/" target="_blank" rel="noopener">http://www.jikexueyuan.com/</a>  极客学院<br><a href="http://www.hetianlab.com/" target="_blank" rel="noopener">http://www.hetianlab.com/</a>  合天<br><a href="http://www.moonsos.com/" target="_blank" rel="noopener">http://www.moonsos.com/</a>  米安网<br><a href="http://www.ichunqiu.com/" target="_blank" rel="noopener">http://www.ichunqiu.com/</a>  i春秋<br><a href="http://www.honyaedu.com/" target="_blank" rel="noopener">http://www.honyaedu.com/</a> 红亚<br><a href="http://www.baimaoxueyuan.com/" target="_blank" rel="noopener">http://www.baimaoxueyuan.com/</a>  白帽学院<br><a href="http://www.simplexue.com/ctf/index" target="_blank" rel="noopener">http://www.simplexue.com/ctf/index</a>   西普学院<br><a href="http://www.imooc.com/course/list" target="_blank" rel="noopener">http://www.imooc.com/course/list</a>  慕课<br><a href="http://www.secbox.cn/" target="_blank" rel="noopener">http://www.secbox.cn/</a>  安全盒子<br><a href="http://www.freebuf.com/" target="_blank" rel="noopener">http://www.freebuf.com/</a> freebuf<br><a href="http://bobao.360.cn/" target="_blank" rel="noopener">http://bobao.360.cn/</a> 360安全播报<br><a href="https://github.com/cxf210/Scanners-Box" target="_blank" rel="noopener">https://github.com/cxf210/Scanners-Box</a> github上的资源库<br><a href="https://github.com/cxf210/docker" target="_blank" rel="noopener">https://github.com/cxf210/docker</a><br><a href="https://github.com/cxf210/fuzzdb" target="_blank" rel="noopener">https://github.com/cxf210/fuzzdb</a><br><a href="https://github.com/cxf210/webshell" target="_blank" rel="noopener">https://github.com/cxf210/webshell</a><br>github上的webshell<br><a href="http://drops.wooyun.org/" target="_blank" rel="noopener">http://drops.wooyun.org/</a> 乌云知识库<br><a href="http://wiki.wooyun.org/" target="_blank" rel="noopener">http://wiki.wooyun.org/</a> WooYun WiKi<br><a href="https://www.91ri.org/" target="_blank" rel="noopener">https://www.91ri.org/</a> 91ri<br><a href="https://www.t00ls.NET/tools" target="_blank" rel="noopener">https://www.t00ls.NET/tools</a> 土司<br><a href="https://bbs.77169.com/forum.php" target="_blank" rel="noopener">https://bbs.77169.com/forum.php</a>  华盟网<br><a href="http://www.ijiandao.com/" target="_blank" rel="noopener">http://www.ijiandao.com/</a> 爱尖刀<br><a href="http://www.secist.com/" target="_blank" rel="noopener">http://www.secist.com/</a>  即刻安全<br><a href="http://www.secwk.com/article/index.html" target="_blank" rel="noopener">http://www.secwk.com/article/index.html</a> 威客众测<br><a href="http://bluereader.org/" target="_blank" rel="noopener">http://bluereader.org/</a> 深蓝阅读<br><a href="http://www.shentou.org/" target="_blank" rel="noopener">http://www.shentou.org/</a> 黑客安全军火库<br><a href="http://netsecurity.51cto.com/" target="_blank" rel="noopener">http://netsecurity.51cto.com/</a> 51cto<br><a href="http://security.csdn.net/" target="_blank" rel="noopener">http://security.csdn.net/</a> csdn<br><a href="http://www.80sec.com/" target="_blank" rel="noopener">http://www.80sec.com/</a> 80sec team<br><a href="https://security.alibaba.com/blog.htm?spm=0.0.0.0.knOqaI" target="_blank" rel="noopener">https://security.alibaba.com/blog.htm?spm=0.0.0.0.knOqaI</a> 阿里巴巴安全响应中心<br><a href="http://security.tencent.com/index.PHP/blog" target="_blank" rel="noopener">http://security.tencent.com/index.PHP/blog</a>  腾讯安全应急响应中心博客<br><a href="http://security.360.cn/blog" target="_blank" rel="noopener">http://security.360.cn/blog</a> 360安全应急响应中心博客<br><a href="http://sec.baidu.com/index.php?research/list" target="_blank" rel="noopener">http://sec.baidu.com/index.php?research/list</a> 百度安全应急响应中心博客  </p></blockquote><h3 id="博客推荐"><a href="#博客推荐" class="headerlink" title="博客推荐"></a>博客推荐</h3><blockquote><p><a href="http://security.tencent.com/index.php/blog" target="_blank" rel="noopener">http://security.tencent.com/index.php/blog</a> &gt; <a href="http://217.logdown.com/" target="_blank" rel="noopener">http://217.logdown.com/</a> 217<br><a href="https://laolisafe.com/" target="_blank" rel="noopener">https://laolisafe.com/</a> 大老李的博客<br><a href="http://mannix.top/" target="_blank" rel="noopener">http://mannix.top/</a>  mannix的博客<br><a href="http://www.raosong.cc/" target="_blank" rel="noopener">http://www.raosong.cc/</a>  折戟博客<br><a href="http://www.blue-lotus.net" target="_blank" rel="noopener">http://www.blue-lotus.net</a> blue-lotus 蓝莲花<br><a href="http://blog.0ops.net/" target="_blank" rel="noopener">http://blog.0ops.net/</a> 0ops<br><a href="http://blog.amanhardikar.com/#home" target="_blank" rel="noopener">http://blog.amanhardikar.com/#home</a><br><a href="http://le4f.net/" target="_blank" rel="noopener">http://le4f.net/</a> e4f<br><a href="http://www.programlife.net/" target="_blank" rel="noopener">http://www.programlife.net/</a> 代码疯子<br><a href="http://www.hackdog.me/" target="_blank" rel="noopener">http://www.hackdog.me/</a> redrain’blog<br><a href="http://www.syjzwjj.com/" target="_blank" rel="noopener">http://www.syjzwjj.com/</a> 俊杰<br><a href="http://syclover.sinaapp.com/" target="_blank" rel="noopener">http://syclover.sinaapp.com/</a> 三叶草安全小组<br><a href="http://appleu0.sinaapp.com/" target="_blank" rel="noopener">http://appleu0.sinaapp.com/</a> appleU0大大<br><a href="http://bl4ck.in/" target="_blank" rel="noopener">http://bl4ck.in/</a> tomato表哥<br><a href="http://www.sco4x0.com/" target="_blank" rel="noopener">http://www.sco4x0.com/</a> 4叔叔<br><a href="http://laterain.sinaapp.com/" target="_blank" rel="noopener">http://laterain.sinaapp.com/</a> 白神<br><a href="http://0nly3nd.sinaapp.com/" target="_blank" rel="noopener">http://0nly3nd.sinaapp.com/</a> 0nly3nd<br><a href="http://hijacks.in/" target="_blank" rel="noopener">http://hijacks.in/</a> LateRain’blog<br><a href="http://www.waitalone.cn/" target="_blank" rel="noopener">http://www.waitalone.cn/</a> 独自等待<br><a href="http://evilcos.me/" target="_blank" rel="noopener">http://evilcos.me/</a> 余弦<br><a href="http://www.moonsec.com/" target="_blank" rel="noopener">http://www.moonsec.com/</a> 暗月<br><a href="http://www.cnblogs.com/xuanhun/" target="_blank" rel="noopener">http://www.cnblogs.com/xuanhun/</a> 玄魂<br><a href="https://www.leavesongs.com/" target="_blank" rel="noopener">https://www.leavesongs.com/</a> 离别歌<br><a href="http://huaidan.org/" target="_blank" rel="noopener">http://huaidan.org/</a> 鬼仔<br><a href="http://www.03sec.com/" target="_blank" rel="noopener">http://www.03sec.com/</a> sky的自留地<br><a href="http://joychou.org/" target="_blank" rel="noopener">http://joychou.org/</a> jc老师<br><a href="http://www.unhonker.com/" target="_blank" rel="noopener">http://www.unhonker.com/</a> 90’s blog<br><a href="http://www1.taosay.net/" target="_blank" rel="noopener">http://www1.taosay.net/</a> 道哥的黑板报<br><a href="http://blog.knownsec.com/" target="_blank" rel="noopener">http://blog.knownsec.com/</a> 知道创宇<br><a href="http://www.sadk.org/" target="_blank" rel="noopener">http://www.sadk.org/</a> 焠安<br><a href="http://www.cnseay.com/" target="_blank" rel="noopener">http://www.cnseay.com/</a> seay’blog<br><a href="http://blog.aptsec.net/" target="_blank" rel="noopener">http://blog.aptsec.net/</a> AptSec Team<br><a href="http://lcx.cc/" target="_blank" rel="noopener">http://lcx.cc/</a> 网络安全研究中心<br><a href="http://www.kali.org.cn/" target="_blank" rel="noopener">http://www.kali.org.cn/</a> kali中文网<br><a href="http://xiao106347.blog.163.com/" target="_blank" rel="noopener">http://xiao106347.blog.163.com/</a> xiao106347 kali折腾  </p></blockquote><h3 id="渗透"><a href="#渗透" class="headerlink" title="渗透:"></a>渗透:</h3><blockquote><p><a href="http://www.wooyun.org/" target="_blank" rel="noopener">http://www.wooyun.org/</a> 乌云<br><a href="http://bbs.blackbap.org/" target="_blank" rel="noopener">http://bbs.blackbap.org/</a> 习科<br><a href="http://www.1937cn.net/" target="_blank" rel="noopener">http://www.1937cn.net/</a> 1937<br><a href="http://forum.cnsec.org/" target="_blank" rel="noopener">http://forum.cnsec.org/</a> 暗组<br><a href="http://www.k33nteam.org/" target="_blank" rel="noopener">http://www.k33nteam.org/</a> keen team<br><a href="http://forum.eviloctal.com/" target="_blank" rel="noopener">http://forum.eviloctal.com/</a> 邪恶八进制<br><a href="http://www.evil0x.com/" target="_blank" rel="noopener">http://www.evil0x.com/</a> 邪恶十六进制<br><a href="http://www.myhack58.com/" target="_blank" rel="noopener">http://www.myhack58.com/</a> 黑吧安全吧<br><a href="http://www.cnhonkerarmy.com/" target="_blank" rel="noopener">http://www.cnhonkerarmy.com/</a> 中国红客红盟<br><a href="http://www.chinahacker.com/" target="_blank" rel="noopener">http://www.chinahacker.com/</a> 中国黑客联盟<br><a href="http://www.hxhack.com/" target="_blank" rel="noopener">http://www.hxhack.com/</a> 华夏黑客联盟<br><a href="http://www.heikexiehui.com/" target="_blank" rel="noopener">http://www.heikexiehui.com/</a> 中国黑客协会官网<br><a href="http://www.hackbase.com/" target="_blank" rel="noopener">http://www.hackbase.com/</a> 黑基<br><a href="http://www.2cto.com/" target="_blank" rel="noopener">http://www.2cto.com/</a> 红黑联盟<br><a href="http://bbs.2cto.com/" target="_blank" rel="noopener">http://bbs.2cto.com/</a> 红黑联盟论坛<br><a href="http://www.hackwd.com/" target="_blank" rel="noopener">http://www.hackwd.com/</a><br><a href="http://www.heishou.com.cn/" target="_blank" rel="noopener">http://www.heishou.com.cn/</a> 黑手安全网<br><a href="https://www.sitedirsec.com/" target="_blank" rel="noopener">https://www.sitedirsec.com/</a> 非安全中国网<br><a href="http://www.zatokasztuki.com/" target="_blank" rel="noopener">http://www.zatokasztuki.com/</a> 学生技术联盟  </p></blockquote><h3 id="逆向："><a href="#逆向：" class="headerlink" title="逆向："></a>逆向：</h3><blockquote><p><a href="http://www.52pojie.cn/" target="_blank" rel="noopener">http://www.52pojie.cn/</a> 吾爱破解<br><a href="http://bbs.pediy.com/" target="_blank" rel="noopener">http://bbs.pediy.com/</a> 看雪论坛<br><a href="https://www.chinapyg.com/" target="_blank" rel="noopener">https://www.chinapyg.com/</a>  飘云阁论坛<br><a href="https://0x00sec.org/" target="_blank" rel="noopener">https://0x00sec.org/</a> 国外逆向论坛<br><a href="https://github.com/onethawt/reverseengineering-reading-list/blob/master/README.md" target="_blank" rel="noopener">https://github.com/onethawt/reverseengineering-reading-list/blob/master/README.md</a> 逆向工程阅读清单<br><a href="https://github.com/RPISEC/Malware/blob/master/README.md" target="_blank" rel="noopener">https://github.com/RPISEC/Malware/blob/master/README.md</a> 恶意软件分析  </p></blockquote><h3 id="编程："><a href="#编程：" class="headerlink" title="编程："></a>编程：</h3><blockquote><p><a href="http://www.he11oworld.com/" target="_blank" rel="noopener">http://www.he11oworld.com/</a> hello word<br><a href="http://www.w3school.com.cn/" target="_blank" rel="noopener">http://www.w3school.com.cn/</a> w3school<br><a href="http://www.runoob.com/" target="_blank" rel="noopener">http://www.runoob.com/</a> 菜鸟<br><a href="http://www.51zxw.net/" target="_blank" rel="noopener">http://www.51zxw.net/</a><br><a href="https://github.com/" target="_blank" rel="noopener">https://github.com/</a><br><a href="http://navisec-Git.qiniudn.com/" target="_blank" rel="noopener">http://navisec-Git.qiniudn.com/</a><br><a href="http://c.biancheng.net/cpp/" target="_blank" rel="noopener">http://c.biancheng.net/cpp/</a><br><a href="http://www.liaoxuefeng.com/" target="_blank" rel="noopener">http://www.liaoxuefeng.com/</a><br><a href="http://www.php100.com/" target="_blank" rel="noopener">http://www.php100.com/</a><br><a href="https://ruby-china.org/wiki" target="_blank" rel="noopener">https://ruby-china.org/wiki</a><br><a href="http://bbs.csdn.net/forums/Java/" target="_blank" rel="noopener">http://bbs.csdn.net/forums/Java/</a><br><a href="http://outofmemory.cn/tutorial/" target="_blank" rel="noopener">http://outofmemory.cn/tutorial/</a>  </p></blockquote><h3 id="书籍："><a href="#书籍：" class="headerlink" title="书籍："></a>书籍：</h3><blockquote><p><a href="http://zhuanlan.zhihu.com/Evi1m0/19706178" target="_blank" rel="noopener">http://zhuanlan.zhihu.com/Evi1m0/19706178</a> Evi1m0: 书籍推荐<br><a href="http://www.douban.com/doulist/3339701/" target="_blank" rel="noopener">http://www.douban.com/doulist/3339701/</a> 信息安全必读书单<br><a href="http://www.douban.com/doulist/1363865/" target="_blank" rel="noopener">http://www.douban.com/doulist/1363865/</a> 信息安全经典书籍<br><a href="http://www.zhihu.com/question/21390646" target="_blank" rel="noopener">http://www.zhihu.com/question/21390646</a><br><a href="http://my.oschina.net/bluefly/blog/335409?utm_source=tuicool&amp;utm_medium=referralWeb安全核心书单" target="_blank" rel="noopener">http://my.oschina.net/bluefly/blog/335409?utm_source=tuicool&amp;utm_medium=referralWeb安全核心书单</a><br>连载<br>《安全参考》<a href="http://www.douban.com/group/topic/72383272/(2013年第一期--2015年第一期)全集" target="_blank" rel="noopener">http://www.douban.com/group/topic/72383272/(2013年第一期--2015年第一期)全集</a><br>《书安》(更新中)<br><a href="http://www.secbox.cn/hacker/8205.html" target="_blank" rel="noopener">http://www.secbox.cn/hacker/8205.html</a> 书安SecBook第一期《icloud iOS安全大揭秘》<br><a href="http://www.secbox.cn/hacker/7366.html" target="_blank" rel="noopener">http://www.secbox.cn/hacker/7366.html</a> 书安SecBook第二期《信息安全攻防赛》<br>渗透实战文章可以看看里的杨凡(<a href="http://blog.sina.com.cn/s/articlelist_1758675673_4_1.html" target="_blank" rel="noopener">http://blog.sina.com.cn/s/articlelist_1758675673_4_1.html</a>)<br>和法克文章（<a href="http://pan.baidu.com/share/link?shareid=249629&amp;uk=2198816663）" target="_blank" rel="noopener">http://pan.baidu.com/share/link?shareid=249629&amp;uk=2198816663）</a></p></blockquote><h3 id="工具："><a href="#工具：" class="headerlink" title="工具："></a>工具：</h3><blockquote><p>链接：<a href="https://pan.baidu.com/s/1tt9O4etSxkFzPsRCamOInA" target="_blank" rel="noopener">https://pan.baidu.com/s/1tt9O4etSxkFzPsRCamOInA</a><br>提取码：dt8o  个人收集的一些ctf工具包<br><a href="https://github.com/zardus/ctf-tools" target="_blank" rel="noopener">https://github.com/zardus/ctf-tools</a>  github上的ctf工具<br><a href="http://www.52pojie.cn/forum.php?mod=viewthread&amp;tid=388015" target="_blank" rel="noopener">http://www.52pojie.cn/forum.php?mod=viewthread&amp;tid=388015</a> 吾爱破解工具包<br><a href="http://down.52pojie.cn/" target="_blank" rel="noopener">http://down.52pojie.cn/</a> 爱盘 – 在线破解工具包，教程<br><a href="http://www.52pojie.cn/thread-341238-1-1.html" target="_blank" rel="noopener">http://www.52pojie.cn/thread-341238-1-1.html</a> 吾爱破解论坛专用破解虚拟机<br>ctf常用工具包请看<a href="http://tieba.baidu.com/p/3933947157里面群文件" target="_blank" rel="noopener">http://tieba.baidu.com/p/3933947157里面群文件</a></p></blockquote><h3 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h3><blockquote><p><a href="http://www.zhihu.com/topic/19558642" target="_blank" rel="noopener">http://www.zhihu.com/topic/19558642</a> 黑客知乎话题<br><a href="http://www.zhihu.com/topic/20011446" target="_blank" rel="noopener">http://www.zhihu.com/topic/20011446</a> ctf知乎话题<br><a href="http://www.zhihu.com/topic/19561983" target="_blank" rel="noopener">http://www.zhihu.com/topic/19561983</a> 信息安全知乎话题<br><a href="http://zhuanlan.zhihu.com/evilcos/19961466" target="_blank" rel="noopener">http://zhuanlan.zhihu.com/evilcos/19961466</a> 余弦知乎专栏  </p></blockquote><h3 id="CTF方面"><a href="#CTF方面" class="headerlink" title="CTF方面"></a>CTF方面</h3><blockquote><p><a href="http://blog.idf.cn/2015/02/ctf-field-guide" target="_blank" rel="noopener">http://blog.idf.cn/2015/02/ctf-field-guide</a><br><a href="http://tieba.baidu.com/p/3933947157" target="_blank" rel="noopener">http://tieba.baidu.com/p/3933947157</a>   ctf大全<br><a href="https://ctftime.org/event/list/upcoming" target="_blank" rel="noopener">https://ctftime.org/event/list/upcoming</a> 各种CTF赛事预告<br>(ps:国内各个高校或企业举办的比赛请进<a href="http://tieba.baidu.com/p/3933947157里面的群" target="_blank" rel="noopener">http://tieba.baidu.com/p/3933947157里面的群</a>)  </p></blockquote><h3 id="平时ctf练习"><a href="#平时ctf练习" class="headerlink" title="平时ctf练习"></a>平时ctf练习</h3><h4 id="ctf逆向"><a href="#ctf逆向" class="headerlink" title="ctf逆向:"></a>ctf逆向:</h4><blockquote><p><a href="https://ctf.pediy.com/" target="_blank" rel="noopener">https://ctf.pediy.com/</a>  看雪ctf<br><a href="http://reversing.kr/" target="_blank" rel="noopener">http://reversing.kr/</a><br><a href="http://pwnable.kr/" target="_blank" rel="noopener">http://pwnable.kr/</a><br><a href="http://exploit-exercises.com/" target="_blank" rel="noopener">http://exploit-exercises.com/</a><br><a href="http://overthewire.org" target="_blank" rel="noopener">http://overthewire.org</a><br><a href="http://security.cs.rpi.edu/courses/binexp-spring2015/" target="_blank" rel="noopener">http://security.cs.rpi.edu/courses/binexp-spring2015/</a> bin 干货区<br><a href="http://www.52pojie.cn/forum-67-1.html" target="_blank" rel="noopener">http://www.52pojie.cn/forum-67-1.html</a> 『2014CrackMe大赛』  </p></blockquote><h4 id="SQL"><a href="#SQL" class="headerlink" title="SQL:"></a>SQL:</h4><blockquote><p><a href="https://github.com/Audi-1/sqli-labs" target="_blank" rel="noopener">https://github.com/Audi-1/sqli-labs</a><br><a href="http://redtiger.labs.overthewire.org/" target="_blank" rel="noopener">http://redtiger.labs.overthewire.org/</a>  </p></blockquote><h4 id="ctf-XSS"><a href="#ctf-XSS" class="headerlink" title="ctf XSS:"></a>ctf XSS:</h4><blockquote><p><a href="http://prompt.ml/" target="_blank" rel="noopener">http://prompt.ml/</a><br><a href="http://xss.pkav.net/xss/" target="_blank" rel="noopener">http://xss.pkav.net/xss/</a><br><a href="http://www.doscn.org/xss/" target="_blank" rel="noopener">http://www.doscn.org/xss/</a><br><a href="http://xss-quiz.int21h.jp/" target="_blank" rel="noopener">http://xss-quiz.int21h.jp/</a><br><a href="http://escape.alf.nu/" target="_blank" rel="noopener">http://escape.alf.nu/</a><br><a href="https://xss-game.appspot.com/" target="_blank" rel="noopener">https://xss-game.appspot.com/</a> 谷歌的xss游戏  </p></blockquote><h4 id="密码学："><a href="#密码学：" class="headerlink" title="密码学："></a>密码学：</h4><p><a href="http://cryptopals.com/" target="_blank" rel="noopener">http://cryptopals.com/</a>  </p><h4 id="ctf综合练习："><a href="#ctf综合练习：" class="headerlink" title="ctf综合练习："></a>ctf综合练习：</h4><p><a href="http://ctf.nuptsast.com/login" target="_blank" rel="noopener">http://ctf.nuptsast.com/login</a> 南邮大学ctf<br><a href="http://hackinglab.cn/" target="_blank" rel="noopener">http://hackinglab.cn/</a> 网络信息安全攻防学习平台<br><a href="https://www.91ctf.com/session" target="_blank" rel="noopener">https://www.91ctf.com/session</a> 安恒竞赛平台<br><a href="http://ctf.bugku.com/new" target="_blank" rel="noopener">http://ctf.bugku.com/new</a>  bugkuctf练习平台<br><a href="http://captf.com/" target="_blank" rel="noopener">http://captf.com/</a> ctf题目<br><a href="http://cafebabe.cc/nazo/" target="_blank" rel="noopener">http://cafebabe.cc/nazo/</a> 脑洞开发，与ctf只有那么一点关系，有85关了<br><a href="http://1111.segmentfault.com/" target="_blank" rel="noopener">http://1111.segmentfault.com/</a> 光棍节程序员闯关秀<br><a href="http://www.helloisa.com/test/" target="_blank" rel="noopener">http://www.helloisa.com/test/</a><br><a href="http://www.fj543.com/hack/" target="_blank" rel="noopener">http://www.fj543.com/hack/</a> 黑客丛林之旅<br><a href="http://monyer.com/game/game1/" target="_blank" rel="noopener">http://monyer.com/game/game1/</a> 梦之光芒的小游戏<br><a href="http://oj.xctf.org.cn/" target="_blank" rel="noopener">http://oj.xctf.org.cn/</a> XCTF_OJ练习平台<br><a href="http://hackgame.blackbap.org/" target="_blank" rel="noopener">http://hackgame.blackbap.org/</a> 习科黑客游戏<br><a href="http://ctf.3sec.cn/" target="_blank" rel="noopener">http://ctf.3sec.cn/</a> Jlu.CTF<br><a href="http://www.baimaoxueyuan.com/ctf" target="_blank" rel="noopener">http://www.baimaoxueyuan.com/ctf</a> 白帽学院ctf挑战赛<br><a href="http://www.ichunqiu.com/tiaozhans" target="_blank" rel="noopener">http://www.ichunqiu.com/tiaozhans</a> i春秋ctf挑战<br><a href="http://ctf.idf.cn/" target="_blank" rel="noopener">http://ctf.idf.cn/</a> idf 实验室<br><a href="http://www.dvwa.co.uk/" target="_blank" rel="noopener">http://www.dvwa.co.uk/</a> DVWA<br><a href="http://ctf.moonsos.com/pentest/index.php" target="_blank" rel="noopener">http://ctf.moonsos.com/pentest/index.php</a> 米安网ctf<br><a href="http://www.hetianlab.com/CTFrace.html" target="_blank" rel="noopener">http://www.hetianlab.com/CTFrace.html</a> 合天ctf<br><a href="http://www.shiyanbar.com/ctf/index" target="_blank" rel="noopener">http://www.shiyanbar.com/ctf/index</a> 实验吧(前名西普学院）<br><a href="http://hkyx.myhack58.com/" target="_blank" rel="noopener">http://hkyx.myhack58.com/</a> 黑吧安全网-红客闯关游戏<br><a href="http://202.108.211.5/" target="_blank" rel="noopener">http://202.108.211.5/</a> 实训竞赛系统</p><h3 id="国外比较好的几个综合练习平台"><a href="#国外比较好的几个综合练习平台" class="headerlink" title="国外比较好的几个综合练习平台"></a>国外比较好的几个综合练习平台</h3><blockquote><p><a href="https://ctf365.com/" target="_blank" rel="noopener">https://ctf365.com/</a><br><a href="https://hack.me/s/" target="_blank" rel="noopener">https://hack.me/s/</a><br><a href="https://ringzer0ctf.com/challenges" target="_blank" rel="noopener">https://ringzer0ctf.com/challenges</a><br><a href="https://www.hackergateway.com/" target="_blank" rel="noopener">https://www.hackergateway.com/</a><br><a href="http://challengeland.co/" target="_blank" rel="noopener">http://challengeland.co/</a><br><a href="http://www.hackertest.net/" target="_blank" rel="noopener">http://www.hackertest.net/</a><br><a href="http://www.wechall.net" target="_blank" rel="noopener">http://www.wechall.net</a><br><a href="https://www.vulnhub.com/" target="_blank" rel="noopener">https://www.vulnhub.com/</a><br><a href="http://insight-labs.org/" target="_blank" rel="noopener">http://insight-labs.org/</a><br><a href="http://wargame.kr/" target="_blank" rel="noopener">http://wargame.kr/</a><br><a href="https://ctflearn.com/" target="_blank" rel="noopener">https://ctflearn.com/</a><br><a href="http://canyouhack.it/" target="_blank" rel="noopener">http://canyouhack.it/</a><br><a href="https://pentest.training/index.php" target="_blank" rel="noopener">https://pentest.training/index.php</a><br><a href="http://hackit.sinaapp.com/" target="_blank" rel="noopener">http://hackit.sinaapp.com/</a><br><a href="http://webhacking.kr/" target="_blank" rel="noopener">http://webhacking.kr/</a><br><a href="http://fun.coolshell.cn/" target="_blank" rel="noopener">http://fun.coolshell.cn/</a><br><a href="http://ringzer0team.com/challenge" target="_blank" rel="noopener">http://ringzer0team.com/challenge</a><br><a href="https://backdoor.sdslabs.co/" target="_blank" rel="noopener">https://backdoor.sdslabs.co/</a><br><a href="https://www.enigmagroup.org/pages/challenges" target="_blank" rel="noopener">https://www.enigmagroup.org/pages/challenges</a><br><a href="http://overthewire.org/wargames/natas/natas2.html" target="_blank" rel="noopener">http://overthewire.org/wargames/natas/natas2.html</a><br><a href="http://smashthestack.org/" target="_blank" rel="noopener">http://smashthestack.org/</a> 漏洞利用练习网站  </p></blockquote><h3 id="ctf-writeup-WP"><a href="#ctf-writeup-WP" class="headerlink" title="ctf writeup(WP):"></a>ctf writeup(WP):</h3><blockquote><p>直接百度:writeup(一边看一边总结，有道笔记，印象笔记什么的，最好能复现)<br><a href="http://drops.wooyun.org/?s=writeup&amp;submit=%E6%90%9C%E7%B4%A2" target="_blank" rel="noopener">http://drops.wooyun.org/?s=writeup&amp;submit=%E6%90%9C%E7%B4%A2</a><br><a href="http://bobao.360.cn/ctf/" target="_blank" rel="noopener">http://bobao.360.cn/ctf/</a><br><a href="https://github.com/ctfs/" target="_blank" rel="noopener">https://github.com/ctfs/</a> 各种 writeup<br><a href="http://sec.yka.me/" target="_blank" rel="noopener">http://sec.yka.me/</a> CTF Writeup Summary<br><a href="https://ctf-team.vulnhub.com/" target="_blank" rel="noopener">https://ctf-team.vulnhub.com/</a> Write Ups<br><a href="http://hebin.me/" target="_blank" rel="noopener">http://hebin.me/</a><br><a href="https://blog.csdn.net/gyt478922579/article/details/53204891?locationNum=11&amp;fps=1" target="_blank" rel="noopener">https://blog.csdn.net/gyt478922579/article/details/53204891?locationNum=11&amp;fps=1</a><br><a href="https://blog.csdn.net/xuqi7/article/details/51635360" target="_blank" rel="noopener">https://blog.csdn.net/xuqi7/article/details/51635360</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;网络安全学习网址&quot;&gt;&lt;a href=&quot;#网络安全学习网址&quot; class=&quot;headerlink&quot; title=&quot;网络安全学习网址&quot;&gt;&lt;/a&gt;网络安全学习网址&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;http://www.sec-wiki.com/
      
    
    </summary>
    
    
      <category term="网络安全" scheme="https://wahaha5354.github.io/tags/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/"/>
    
  </entry>
  
  <entry>
    <title>centos系统7的ftp版本创建目录和匿名用户登录的测试</title>
    <link href="https://wahaha5354.github.io/2018/09/13/centos%E7%B3%BB%E7%BB%9F7%E7%9A%84ftp%E7%89%88%E6%9C%AC%E5%88%9B%E5%BB%BA%E7%9B%AE%E5%BD%95%E5%92%8C%E5%8C%BF%E5%90%8D%E7%94%A8%E6%88%B7%E7%99%BB%E5%BD%95%E7%9A%84%E6%B5%8B%E8%AF%95/"/>
    <id>https://wahaha5354.github.io/2018/09/13/centos系统7的ftp版本创建目录和匿名用户登录的测试/</id>
    <published>2018-09-13T02:21:37.000Z</published>
    <updated>2018-09-13T03:11:44.601Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>centos6系统使用的ftp是2.0以上的版本，而centos7使用的是3.0.2版本</p></blockquote><h2 id="首先说一下ftp使用匿名用户创建目录"><a href="#首先说一下ftp使用匿名用户创建目录" class="headerlink" title="首先说一下ftp使用匿名用户创建目录"></a>首先说一下ftp使用匿名用户创建目录</h2><p>在centos7下只能在pub下创建文件夹，而且pub用户属主必须是ftp或者将pub目录授予777的权限，也就是说ftp用户在pub目录下必须具有写的权限。<br><img src="http://peofbsx9u.bkt.clouddn.com/18-9-13/63487703.jpg" alt="图一"><br>在这之前需要确保配置文件这几个选项为YES，这几个选项在配置文件里都是默认开启的，还有selinux要处于Permissive状态<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">anon_mkdir_write_enable=YES</span><br><span class="line">anon_upload_enable=YES</span><br><span class="line">anonymous_enable=YES</span><br></pre></td></tr></table></figure></p><h2 id="还有centos7下拒绝访问ftp服务的权限"><a href="#还有centos7下拒绝访问ftp服务的权限" class="headerlink" title="还有centos7下拒绝访问ftp服务的权限"></a>还有centos7下拒绝访问ftp服务的权限</h2><p>首先，ftp的访问跟ftp/pub的权限是没关系的，在正常情况下，授予ftp目录777的权限，是拒绝用户访问的<br><img src="http://peofbsx9u.bkt.clouddn.com/18-9-13/64377833.jpg" alt="图二"><br>如果将ftp目录的属主和属组都修改成ftp用户，将ftp目录的权限修改回755，也是不能访问的<br><img src="http://peofbsx9u.bkt.clouddn.com/18-9-13/10904134.jpg" alt="图三"><br>将配置文件的umask修改成000，并且重启服务，还是不能访问，但是如果我将ftp的目录的属主和属组都修改成ftp，而ftp的目录权限修改成557，那么ftp服务就可以正常访问了<br><img src="http://peofbsx9u.bkt.clouddn.com/18-9-13/98588304.jpg" alt="图四"><br>当我把ftp的属主和属组又修改成root之后，ftp服务又不能访问了<br><img src="http://peofbsx9u.bkt.clouddn.com/18-9-13/77312475.jpg" alt="图五"><br>我再把ftp的属主和属组都修改成ftp,,ftp服务还是可以正常的访问<br><img src="http://peofbsx9u.bkt.clouddn.com/18-9-13/61939290.jpg" alt="图六"><br>如果我再将ftp的目录权限修改成335，而属主和属组都是root，那么ftp也是可以访问的<br><img src="http://peofbsx9u.bkt.clouddn.com/18-9-13/16375443.jpg" alt="图七"><br>保持权限不变，而属主和属组改为ftp，那么ftp服务还是不能访问<br><img src="http://peofbsx9u.bkt.clouddn.com/18-9-13/87405128.jpg" alt="图八"><br>我再修改ftp目录的权限为445，将ftp目录的属主和属组都改为root，ftp服务还是可以访问的<br><img src="http://peofbsx9u.bkt.clouddn.com/18-9-13/93471053.jpg" alt="图九"><br>ftp目录的权限不变，修改ftp目录的属主和属组为ftp,ftp是可以进行访问的<br><img src="http://peofbsx9u.bkt.clouddn.com/18-9-13/72316895.jpg" alt="图十"><br>这里属主和属组都不改变，分别修改ftp目录的权限为665和225，结果ftp服务都不能访问<br><img src="http://peofbsx9u.bkt.clouddn.com/18-9-13/78582627.jpg" alt="图十一"><br><img src="http://peofbsx9u.bkt.clouddn.com/18-9-13/9760739.jpg" alt="图十二"><br>也就是说不能给ftp用户写的权限，否则不能访问ftp。那如果我修改一下默认目录试试呢，我将ftp默认访问路径修改成/var/test，再次进行测试发现test目录的权限也是不能有写权限，否则不能访问<br><img src="http://peofbsx9u.bkt.clouddn.com/18-9-13/29240569.jpg" alt="图十三"><br><img src="http://peofbsx9u.bkt.clouddn.com/18-9-13/10166450.jpg" alt="图十四"><br>因此，我们可以得出结论：访问ftp服务的匿名用户不能有写权限，这也就是为什么ftp目录下匿名用户不能创建子目录的原因</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;centos6系统使用的ftp是2.0以上的版本，而centos7使用的是3.0.2版本&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;首先说一下ftp使用匿名用户创建目录&quot;&gt;&lt;a href=&quot;#首先说一下ftp使用匿名用户创建目录&quot; cla
      
    
    </summary>
    
      <category term="ftp" scheme="https://wahaha5354.github.io/categories/ftp/"/>
    
    
      <category term="ftp" scheme="https://wahaha5354.github.io/tags/ftp/"/>
    
  </entry>
  
  <entry>
    <title>shell编程之条件测试</title>
    <link href="https://wahaha5354.github.io/2018/08/18/shell%E7%BC%96%E7%A8%8B%E4%B9%8B%E6%9D%A1%E4%BB%B6%E6%B5%8B%E8%AF%95/"/>
    <id>https://wahaha5354.github.io/2018/08/18/shell编程之条件测试/</id>
    <published>2018-08-18T01:55:05.000Z</published>
    <updated>2018-08-18T02:04:57.436Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>关于条件测试命令可以使用man test命令查看</p></blockquote><h2 id="条件测试语句语法"><a href="#条件测试语句语法" class="headerlink" title="条件测试语句语法"></a>条件测试语句语法</h2><p>1.test 测试语句<br>2.[ 测试语句 ]<br>3.[[ 测试语句 ]]<br>4.((测试语句))<br>其中1和2除了语法不一样，功能基本是一样的，而第3种语法他可以使用通配符进行匹配，第四种语法除了用于整数的比较，更多的还是进行一些整数的运算，不过平时经常用到的还是第2、3种语法结构。</p><h2 id="条件测试类型"><a href="#条件测试类型" class="headerlink" title="条件测试类型"></a>条件测试类型</h2><ol><li>文件测试</li><li>数值测试</li><li>字符串测试</li><li>逻辑测试<h2 id="文件测试"><a href="#文件测试" class="headerlink" title="文件测试"></a>文件测试</h2><h3 id="格式："><a href="#格式：" class="headerlink" title="格式："></a>格式：</h3>1.test 文件测试符 file<br>2.[ 文件测试符 file ]   #中括号的两边都需要有空格<br>3.[[ 文件测试符 file ]]  #中括号两边需要有空格<h3 id="常用文件测试操作符："><a href="#常用文件测试操作符：" class="headerlink" title="常用文件测试操作符："></a>常用文件测试操作符：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">-b: 文件是否存在，并且为块文件</span><br><span class="line">-c：文件是否存在，并且为字符文件</span><br><span class="line">-d: 文件是否存在，并且为一个目录（在linux下,万物皆为文件）</span><br><span class="line">-e: 文件是否存在</span><br><span class="line">-f: 文件是否存在，并且为普通文件</span><br><span class="line">-s: 文件是否存在，并且文件大小大于零</span><br><span class="line">-L: 文件是否存在，并且为链接文件</span><br><span class="line">-r: 文件是否存在，并且文件可读</span><br><span class="line">-w: 文件是否存在，并且文件可写</span><br><span class="line">-x: 文件是否存在，并且文件可执行</span><br><span class="line">file1 -nt file2 文件1是否比文件2新(文件新旧是按照文件修改时间来区分的)</span><br><span class="line">file1 -ot file2 文件1是否比文件2旧</span><br></pre></td></tr></table></figure></li></ol><h3 id="实例："><a href="#实例：" class="headerlink" title="实例："></a>实例：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[root@docker ~]# touch wanger          #新建一个普通文件</span><br><span class="line">[root@docker ~]# test -f wanger &amp;&amp; echo 0 || echo 1</span><br><span class="line">0      #测试文件是否是普通文件，如果是输出0，否则输出1</span><br><span class="line">[root@docker ~]# [ -d wanger ] &amp;&amp; echo 0 || echo 1</span><br><span class="line">1      #测试文件是否是一个目录，如果是输出0，否则输出1</span><br><span class="line"></span><br><span class="line">[root@docker ~]# touch wangerxiao    创建一个普通文件wangerxiao</span><br><span class="line">[root@docker ~]# test wanger -nt wangerxiao &amp;&amp; echo 0 || echo 1</span><br><span class="line">1     #比较wanger是否比wangerxiao新，如果为真输出0，否则输出1</span><br><span class="line">[root@docker ~]# [ wanger -ot wangerxiao ] &amp;&amp; echo 0 || echo 1</span><br><span class="line">0     #比较wanger是否比wangerxiao旧，如果为真输出0，否则输出1</span><br></pre></td></tr></table></figure><h2 id="字符串测试："><a href="#字符串测试：" class="headerlink" title="字符串测试："></a>字符串测试：</h2><h3 id="格式：-1"><a href="#格式：-1" class="headerlink" title="格式："></a>格式：</h3><ol><li>test 字符串测试符 string</li><li>[ 字符串测试符 string ]</li><li>[[ 字符串测试符 string ]]<h3 id="常用字符串测试操作符："><a href="#常用字符串测试操作符：" class="headerlink" title="常用字符串测试操作符："></a>常用字符串测试操作符：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">-z string :字符串长度是否为0</span><br><span class="line">-n string :字符串长度是否不为0</span><br><span class="line">string1 = string2 :string1和string2是否相等</span><br><span class="line">string1 != string2 :string1和string2是否不相等</span><br></pre></td></tr></table></figure></li></ol><h3 id="实例：-1"><a href="#实例：-1" class="headerlink" title="实例："></a>实例：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@docker ~]# name=wanger       #定义一个变量</span><br><span class="line">[root@docker ~]# [ -z $name ] &amp;&amp; echo 0 || echo 1</span><br><span class="line">1           #判断字符串是否为空，为空则返回0，否则返回1</span><br><span class="line">[root@docker ~]# test -n $name &amp;&amp; echo 0 || echo 1</span><br><span class="line">0#判断字符串是否不为空，如果是则返回0，否则返回1</span><br><span class="line">[root@docker ~]# [ $name != &quot;wanger&quot; ] &amp;&amp; echo 0 || echo 1</span><br><span class="line">1           #判断变量是否不等于”wanger”，如果是返回0,否则返回1</span><br><span class="line">[root@docker ~]# test $name = &quot;wanger&quot; &amp;&amp; echo 0 || echo 1</span><br><span class="line">0#判断变量是否等于”wanger”,如果是返回0，否则返回1</span><br></pre></td></tr></table></figure><h2 id="数值测试："><a href="#数值测试：" class="headerlink" title="数值测试："></a>数值测试：</h2><h3 id="格式：-2"><a href="#格式：-2" class="headerlink" title="格式："></a>格式：</h3><p>test num1 数值测试操作符 num2<br>[ num1 数值测试操作符 num2 ]<br>[[ num 数值测试操作符 num2 ]]<br>((num1数值测试操作符num2))</p><h3 id="常用数值测试操作符："><a href="#常用数值测试操作符：" class="headerlink" title="常用数值测试操作符："></a>常用数值测试操作符：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">num1 -eq num2 : 数字1是否等于数字2</span><br><span class="line">num1 -ge num2 : 数字1是否大于等于数字2</span><br><span class="line">num1 -gt num2 : 数字1是否大于数字2</span><br><span class="line">num1 -le num2 : 数字1是否小于等于数字2</span><br><span class="line">num1 -lt num2 : 数字1是否小于数字2</span><br><span class="line">num1 -ne num2 : 数字1是否不等于数字2</span><br></pre></td></tr></table></figure><blockquote><p>注意：以上几种操作符不能用在(())格式中，在(())中应使用”&lt; &gt; = != &gt;= &lt;=”比较符号来进行数值的比较</p></blockquote><h3 id="实例：-2"><a href="#实例：-2" class="headerlink" title="实例："></a>实例：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@docker ~]# test 6 -le 5 &amp;&amp; echo 0 ||echo 1</span><br><span class="line">0        #判断6是否小于等于5，如果是返回0，否则返回1</span><br><span class="line">[2]+  Done                    test 64 -gt 63</span><br><span class="line">[root@docker ~]# [ 6 -gt 5 ]&amp;&amp; echo 0 || echo 1</span><br><span class="line">0       #判断6是否大于5，如果大于返回0，否则返回1</span><br><span class="line">[root@docker ~]# [[ 6 = 5 ]]&amp;&amp; echo 0 || echo 1</span><br><span class="line">1#判断6是否等于5，如果等于返回0，否则返回1</span><br><span class="line">[root@docker ~]# ((5!=6))&amp;&amp;echo 0 ||echo 1</span><br><span class="line">0#判断5是否等于6，如果不等于返回0，等于则返回1</span><br></pre></td></tr></table></figure><h2 id="逻辑运算符："><a href="#逻辑运算符：" class="headerlink" title="逻辑运算符："></a>逻辑运算符：</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">-a : 相当于&amp;&amp;，表示逻辑与，两端条件都为真，结果为真</span><br><span class="line">-o : 相当于||,表示逻辑或，两端条件只要有一个为真，结果就为真</span><br><span class="line">！: 逻辑非，两端相反结果为真</span><br></pre></td></tr></table></figure><h3 id="实例：-3"><a href="#实例：-3" class="headerlink" title="实例："></a>实例：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">test=”123”  #定义test变量</span><br><span class="line">[root@docker ~]# [ ! -z $test -o $test = &quot;123&quot; ] &amp;&amp;echo 0 || echo 1</span><br><span class="line">0     #判断test变量是否不为空或者是否等于123，如果是返回0，在[]格式中只能使用-o和-a，而不能用&amp;&amp;和||</span><br><span class="line">[root@docker ~]# test -z $test &amp;&amp; test $test = &quot;123&quot; &amp;&amp;echo 0 ||echo 1</span><br><span class="line">1        #判断test变量是否为空并且test变量是否等于123，如果是返回0</span><br><span class="line">[root@docker ~]# [[ -z $test || $test = &quot;123&quot; ]] &amp;&amp;echo 0 ||echo 1</span><br><span class="line">0        #判断test变量是否为空或者test变量是否等于123，如果是返回0</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;关于条件测试命令可以使用man test命令查看&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;条件测试语句语法&quot;&gt;&lt;a href=&quot;#条件测试语句语法&quot; class=&quot;headerlink&quot; title=&quot;条件测试语句语法&quot;&gt;&lt;/a&gt;条件测
      
    
    </summary>
    
    
      <category term="shell" scheme="https://wahaha5354.github.io/tags/shell/"/>
    
  </entry>
  
  <entry>
    <title>shell编程循环脚本</title>
    <link href="https://wahaha5354.github.io/2018/08/18/shell%E7%BC%96%E7%A8%8B%E5%BE%AA%E7%8E%AF%E8%84%9A%E6%9C%AC/"/>
    <id>https://wahaha5354.github.io/2018/08/18/shell编程循环脚本/</id>
    <published>2018-08-18T01:33:09.000Z</published>
    <updated>2018-08-18T01:52:20.817Z</updated>
    
    <content type="html"><![CDATA[<h2 id="求从1加到100的和"><a href="#求从1加到100的和" class="headerlink" title="求从1加到100的和"></a>求从1加到100的和</h2><h3 id="使用for循环求和："><a href="#使用for循环求和：" class="headerlink" title="使用for循环求和："></a>使用for循环求和：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line">declare -i sum=0</span><br><span class="line">for ((i=1;i&lt;=100;i++));do</span><br><span class="line">let sum+=$i</span><br><span class="line">done</span><br><span class="line">echo &quot;sum=$sum&quot;</span><br></pre></td></tr></table></figure><h3 id="使用until循环求和："><a href="#使用until循环求和：" class="headerlink" title="使用until循环求和："></a>使用until循环求和：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line"></span><br><span class="line">i=1</span><br><span class="line">sum=0</span><br><span class="line">until [ $i -gt 100 ];do</span><br><span class="line">let sum+=$i</span><br><span class="line">let i++</span><br><span class="line">done</span><br><span class="line">echo &quot;sum is:$sum&quot;</span><br></pre></td></tr></table></figure><h3 id="使用while循环求和："><a href="#使用while循环求和：" class="headerlink" title="使用while循环求和："></a>使用while循环求和：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line"></span><br><span class="line">i=1</span><br><span class="line">sum=0</span><br><span class="line">while [ $i -le 100 ];do</span><br><span class="line">let sum+=$i</span><br><span class="line">let i++</span><br><span class="line">done</span><br><span class="line">echo &quot;sum is:$sum&quot;</span><br></pre></td></tr></table></figure><h2 id="求100以内的偶数之和"><a href="#求100以内的偶数之和" class="headerlink" title="求100以内的偶数之和"></a>求100以内的偶数之和</h2><h3 id="使用for循环求和：-1"><a href="#使用for循环求和：-1" class="headerlink" title="使用for循环求和："></a>使用for循环求和：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line"></span><br><span class="line">i=0</span><br><span class="line">sum=0</span><br><span class="line">for i in `seq 100` ;do</span><br><span class="line">    if [ $[$i%2] -eq 1 ];then</span><br><span class="line">continue</span><br><span class="line">fi</span><br><span class="line">let sum+=$i</span><br><span class="line">done</span><br><span class="line">echo &quot;sum is:$sum&quot;</span><br></pre></td></tr></table></figure><h3 id="使用while循环求和：-1"><a href="#使用while循环求和：-1" class="headerlink" title="使用while循环求和："></a>使用while循环求和：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line"></span><br><span class="line">i=0</span><br><span class="line">sum=0</span><br><span class="line">while [ $i -le 100 ];do</span><br><span class="line">let i++</span><br><span class="line">if [ $[$i%2] -eq 1 ];then</span><br><span class="line">continue</span><br><span class="line">fi</span><br><span class="line">let sum+=$i</span><br><span class="line">done</span><br><span class="line">echo &quot;sum is: $sum&quot;</span><br></pre></td></tr></table></figure><h3 id="使用until循环求和：-1"><a href="#使用until循环求和：-1" class="headerlink" title="使用until循环求和："></a>使用until循环求和：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line"></span><br><span class="line">i=0</span><br><span class="line">sum=0</span><br><span class="line">until [ $i -gt 100 ];do</span><br><span class="line">let i++</span><br><span class="line">if [ $[ $i%2 ] -eq 1 ];then</span><br><span class="line">continue</span><br><span class="line">fi</span><br><span class="line">let sum+=$i</span><br><span class="line">done</span><br><span class="line">echo &quot;sum is: $sum&quot;</span><br></pre></td></tr></table></figure><h2 id="编写一个九九乘法表"><a href="#编写一个九九乘法表" class="headerlink" title="编写一个九九乘法表"></a>编写一个九九乘法表</h2><h3 id="使用for循环："><a href="#使用for循环：" class="headerlink" title="使用for循环："></a>使用for循环：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line"></span><br><span class="line">#for i in `seq 9`;do</span><br><span class="line">for ((j=1;j&lt;=9;j++));do</span><br><span class="line">for ((i=1;i&lt;=j;i++));do</span><br><span class="line">echo -ne &quot;$i*$j=$(($i*$j))\t&quot;</span><br><span class="line">done</span><br><span class="line">echo</span><br><span class="line">done</span><br></pre></td></tr></table></figure><h3 id="使用while循环："><a href="#使用while循环：" class="headerlink" title="使用while循环："></a>使用while循环：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line"></span><br><span class="line">i=1</span><br><span class="line">j=1</span><br><span class="line">while[ $j -le 9 ];do</span><br><span class="line">while [ $i -le $j ];do</span><br><span class="line">echo -ne &quot;$i*$j=$(($i*$j))\t&quot;</span><br><span class="line">let i++</span><br><span class="line">done</span><br><span class="line">echo</span><br><span class="line">let i=1</span><br><span class="line">let j++</span><br><span class="line">done</span><br></pre></td></tr></table></figure><h3 id="使用until循环："><a href="#使用until循环：" class="headerlink" title="使用until循环："></a>使用until循环：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line"></span><br><span class="line">i=1</span><br><span class="line">j=1</span><br><span class="line">until [ $j -gt 9 ];do</span><br><span class="line">until [ $i -gt $j ];do</span><br><span class="line">echo -ne &quot;$i*$j=$(($i*$j))\t&quot;</span><br><span class="line">let i++</span><br><span class="line">done</span><br><span class="line">echo</span><br><span class="line">let i=1</span><br><span class="line">let j++</span><br><span class="line">done</span><br></pre></td></tr></table></figure><h2 id="通过脚本判断用户是否登入系统，如果没有，则每10秒循环一次"><a href="#通过脚本判断用户是否登入系统，如果没有，则每10秒循环一次" class="headerlink" title="通过脚本判断用户是否登入系统，如果没有，则每10秒循环一次"></a>通过脚本判断用户是否登入系统，如果没有，则每10秒循环一次</h2><h3 id="使用while循环：-1"><a href="#使用while循环：-1" class="headerlink" title="使用while循环："></a>使用while循环：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line"></span><br><span class="line">read -p &quot;pls input a username: &quot; username</span><br><span class="line">while ! `who |grep &quot;^$username&quot; &amp;&gt; /dev/null`;do</span><br><span class="line">sleep 10</span><br><span class="line">done</span><br><span class="line">echo &quot;`date +%F-%H:%M:%S` $username logged on&quot;&gt;&gt;/tmp/user.log</span><br></pre></td></tr></table></figure><h2 id="使用case循环来获取系统信息"><a href="#使用case循环来获取系统信息" class="headerlink" title="使用case循环来获取系统信息"></a>使用case循环来获取系统信息</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line"></span><br><span class="line">cat &lt;&lt;EOF</span><br><span class="line">1) show cpu information;</span><br><span class="line">2) show memory information;</span><br><span class="line">3) show disk information;</span><br><span class="line">4) quit</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line">cpu_info()&#123;</span><br><span class="line">lscpu</span><br><span class="line">&#125;</span><br><span class="line">mem_info()&#123;</span><br><span class="line">cat /proc/meminfo</span><br><span class="line">&#125;</span><br><span class="line">disk_info()&#123;</span><br><span class="line">fdisk -l</span><br><span class="line">&#125;</span><br><span class="line">quit()&#123;</span><br><span class="line">echo &quot;quit&quot;</span><br><span class="line">exit 0</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">read -p &quot;pls input a num: &quot; num</span><br><span class="line">if [ $num -ne 1 -a $num -ne 2 -a $num -ne 3 -a $num -ne 4 ];then </span><br><span class="line">read -p &quot;pls input a num again: &quot; num</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line">case &quot;$num&quot; in </span><br><span class="line">1) </span><br><span class="line">cpu_info</span><br><span class="line">;;</span><br><span class="line">2)</span><br><span class="line">mem_info</span><br><span class="line">;;</span><br><span class="line">3)</span><br><span class="line">disk_info</span><br><span class="line">;;</span><br><span class="line">4)</span><br><span class="line">quit</span><br><span class="line">esac</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;求从1加到100的和&quot;&gt;&lt;a href=&quot;#求从1加到100的和&quot; class=&quot;headerlink&quot; title=&quot;求从1加到100的和&quot;&gt;&lt;/a&gt;求从1加到100的和&lt;/h2&gt;&lt;h3 id=&quot;使用for循环求和：&quot;&gt;&lt;a href=&quot;#使用for循环求和：&quot;
      
    
    </summary>
    
      <category term="shell编程" scheme="https://wahaha5354.github.io/categories/shell%E7%BC%96%E7%A8%8B/"/>
    
    
      <category term="shell" scheme="https://wahaha5354.github.io/tags/shell/"/>
    
  </entry>
  
  <entry>
    <title>Markdown语法</title>
    <link href="https://wahaha5354.github.io/2018/08/09/Markdown%E8%AF%AD%E6%B3%95/"/>
    <id>https://wahaha5354.github.io/2018/08/09/Markdown语法/</id>
    <published>2018-08-09T09:35:55.000Z</published>
    <updated>2018-10-29T14:08:05.119Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-标题"><a href="#1-标题" class="headerlink" title="1.标题"></a>1.标题</h2><p>第一种 markdown最高可以设置六级标题,前面#号的数量代表标题的等级,#号后面要带一个空格<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># 一级标题</span><br><span class="line">## 二级标题</span><br><span class="line">### 三级标题</span><br><span class="line">#### 四级标题</span><br><span class="line">##### 五级标题</span><br><span class="line">###### 六级标题</span><br></pre></td></tr></table></figure></p><p>演示</p><h1 id="一级标题"><a href="#一级标题" class="headerlink" title="一级标题"></a>一级标题</h1><h2 id="二级标题"><a href="#二级标题" class="headerlink" title="二级标题"></a>二级标题</h2><h3 id="三级标题"><a href="#三级标题" class="headerlink" title="三级标题"></a>三级标题</h3><h4 id="四级标题"><a href="#四级标题" class="headerlink" title="四级标题"></a>四级标题</h4><h5 id="五级标题"><a href="#五级标题" class="headerlink" title="五级标题"></a>五级标题</h5><h6 id="六级标题"><a href="#六级标题" class="headerlink" title="六级标题"></a>六级标题</h6><p>第二种 这种只能表示一级和二级标题,=和-的数量没有限制，只要大于一就行<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">一级标题</span><br><span class="line">=======</span><br><span class="line">二级标题</span><br><span class="line">------</span><br></pre></td></tr></table></figure></p><p>演示</p><h1 id="一级标题-1"><a href="#一级标题-1" class="headerlink" title="一级标题"></a>一级标题</h1><h2 id="二级标题-1"><a href="#二级标题-1" class="headerlink" title="二级标题"></a>二级标题</h2><h2 id="2-文本样式"><a href="#2-文本样式" class="headerlink" title="2.文本样式"></a>2.文本样式</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">**加粗**</span><br><span class="line">*斜体* 或者 _斜体_</span><br><span class="line">***加粗斜体***</span><br><span class="line">~~删除线~~</span><br></pre></td></tr></table></figure><p>演示<br><strong>加粗</strong><br><em>斜体</em><br><strong><em>加粗斜体</em></strong><br><del>删除线</del></p><h2 id="3-列表"><a href="#3-列表" class="headerlink" title="3.列表"></a>3.列表</h2><h3 id="无序列表"><a href="#无序列表" class="headerlink" title="无序列表"></a>无序列表</h3><p>无序列表可以有三种写法,使用*或+或- :<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">使用 * ：</span><br><span class="line">* 无序列表1</span><br><span class="line">* 无序列表2</span><br><span class="line">* 无序列表3</span><br><span class="line"></span><br><span class="line">使用 + ：</span><br><span class="line">+ 无序列表4</span><br><span class="line">+ 无序列表5</span><br><span class="line">+ 无序列表6</span><br><span class="line"></span><br><span class="line">使用 - ：</span><br><span class="line">- 无序列表7</span><br><span class="line">- 无序列表8</span><br><span class="line">- 无序列表9</span><br></pre></td></tr></table></figure></p><p>演示<br>使用 * ：</p><ul><li>无序列表1</li><li>无序列表2</li><li>无序列表3</li></ul><p>使用 + ：</p><ul><li>无序列表4</li><li>无序列表5</li><li>无序列表6</li></ul><p>使用 - ：</p><ul><li>无序列表7</li><li>无序列表8</li><li>无序列表9<h3 id="有序列表"><a href="#有序列表" class="headerlink" title="有序列表"></a>有序列表</h3>有序列表就是在前面加数字而不是用符号<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1. 有序列表1</span><br><span class="line">2. 有序列表2</span><br><span class="line">3. 有序列表3</span><br></pre></td></tr></table></figure></li></ul><p>演示</p><ol><li>有序列表1</li><li>有序列表2</li><li>有序列表3<h2 id="4-引用"><a href="#4-引用" class="headerlink" title="4.引用"></a>4.引用</h2>引用的格式很简单,在引用的文字前面加上<code>&gt;</code>就行了<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; 为人民服务</span><br><span class="line">&gt;          ——毛主席</span><br></pre></td></tr></table></figure></li></ol><p>演示</p><blockquote><p>为人民服务</p><p align="right"></p><p align="right">——毛主席</p></blockquote><h2 id="5-代码块"><a href="#5-代码块" class="headerlink" title="5.代码块"></a>5.代码块</h2><p>比较短的或是单行的代码可以使用反引号包裹,若是有多行的代码要使用3个反引号,这里为了转义我用\将反引号隔开，顺便说一下,如果不想让一些符号用作markdown语法,可用\进行转义。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">`短的或者单行代码`</span><br><span class="line">`\``               </span><br><span class="line">多行代码&#123;</span><br><span class="line">        print ‘人生苦短，我用Python’</span><br><span class="line">        &#125;</span><br><span class="line">`\``</span><br></pre></td></tr></table></figure></p><p>演示<br><code>短的或者单行代码</code><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">多行代码&#123;</span><br><span class="line">        print ‘人生苦短，我用Python’</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure></p><h2 id="6-表格"><a href="#6-表格" class="headerlink" title="6.表格"></a>6.表格</h2><p>在markdown里使用表格有点麻烦，使用|来分隔不同的单元格，使用-来分隔表头和其他行，使用:来设置表格的对齐方式<br><code>:---</code> 表示左对齐,不加:也表示左对齐<br><code>:--:</code> 表示居中对齐<br><code>---:</code> 表示右对齐<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">|name|age|sex|</span><br><span class="line">|:-----|:--:|----:|</span><br><span class="line">|wanger|23  |nan  |</span><br><span class="line">|lisi  |20  |nv   |</span><br><span class="line">|wangwu|22  |nan  |</span><br></pre></td></tr></table></figure></p><p>演示</p><table><thead><tr><th style="text-align:left">name</th><th style="text-align:center">age</th><th style="text-align:right">sex</th></tr></thead><tbody><tr><td style="text-align:left">wanger</td><td style="text-align:center">23</td><td style="text-align:right">nan</td></tr><tr><td style="text-align:left">lisi</td><td style="text-align:center">20</td><td style="text-align:right">nv</td></tr><tr><td style="text-align:left">wangwu</td><td style="text-align:center">22</td><td style="text-align:right">nan</td></tr></tbody></table><h2 id="7-分割线"><a href="#7-分割线" class="headerlink" title="7.分割线"></a>7.分割线</h2><p>可以在一行中用三个以上的星号、减号、底线来建立一个分隔线，同时需要在分隔线的上面空一行。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">___</span><br><span class="line">***</span><br></pre></td></tr></table></figure></p><p>演示</p><hr><hr><hr><h2 id="8-超链接与图片"><a href="#8-超链接与图片" class="headerlink" title="8.超链接与图片"></a>8.超链接与图片</h2><p>超链接与图片格式的最大区别就是图片格式多一个’!’，图片的title和链接的title表示你的鼠标指向图片或者链接描述的时候出现的内容,title与图片地址和链接地址之间有空格,title属性可以不加。</p><ul><li>图片<br><code>![图片描述](图片地址 &quot;title&quot;)</code></li><li>链接<br><code>[链接描述](链接地址 &quot;title&quot;)</code><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">![微信公众号](/uploads/wechat-qcode.jpg &quot;微信公众号&quot;)</span><br><span class="line">[个人博客](https://wahaha5354.github.io &quot;个人博客&quot;)</span><br></pre></td></tr></table></figure></li></ul><p>演示<br><img src="/uploads/wechat-qcode.jpg" alt="微信公众号" title="微信公众号"><br><a href="https://wahaha5354.github.io" title="个人博客">个人博客</a> </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;1-标题&quot;&gt;&lt;a href=&quot;#1-标题&quot; class=&quot;headerlink&quot; title=&quot;1.标题&quot;&gt;&lt;/a&gt;1.标题&lt;/h2&gt;&lt;p&gt;第一种 markdown最高可以设置六级标题,前面#号的数量代表标题的等级,#号后面要带一个空格&lt;br&gt;&lt;figure cl
      
    
    </summary>
    
    
      <category term="markdown" scheme="https://wahaha5354.github.io/tags/markdown/"/>
    
  </entry>
  
  <entry>
    <title>next主题的个性化设置</title>
    <link href="https://wahaha5354.github.io/2018/08/09/next%E4%B8%BB%E9%A2%98%E7%9A%84%E4%B8%AA%E6%80%A7%E5%8C%96%E8%AE%BE%E7%BD%AE/"/>
    <id>https://wahaha5354.github.io/2018/08/09/next主题的个性化设置/</id>
    <published>2018-08-09T00:09:18.000Z</published>
    <updated>2018-08-09T05:27:08.346Z</updated>
    
    <content type="html"><![CDATA[<p>因为hexo博客使用的markdown语法，之前并没有接触过markdown语法，所以第一次写博客只能参考markdown语法的用法来写</p><h2 id="设置hexo的头像"><a href="#设置hexo的头像" class="headerlink" title="设置hexo的头像"></a>设置hexo的头像</h2><p>之前参照了网上修改的方法老是出现报错，折腾了两天还是不行，后来在修改网站图标的时候才知道是因为我配置文件格式写错了，网上的很多方法都是在主题的配置文件里改，但我改了并没有生效，也许是姿势有问题，后来在主题的配置文件里修改竟然生效了，在配置文件里搜索’Sidebar Avatar’，找到如下字段：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># Sidebar Avatar</span><br><span class="line">avatar:</span><br><span class="line">  # in theme directory(source/images): /images/avatar.gif</span><br><span class="line">  # in site  directory(source/uploads): /uploads/avatar.gif</span><br><span class="line">  # You can also use other linking images.</span><br><span class="line">  url: /images/avatar.jpg</span><br></pre></td></tr></table></figure></p><p>在url: 后面加上头像的存放地址，我的头像放在了站点目录/source/images/目录下，修改完配置后执行命令:<br><code>hexo clean</code><br><code>hexo g</code><br><code>hexo d</code></p><h2 id="站内搜索"><a href="#站内搜索" class="headerlink" title="站内搜索"></a>站内搜索</h2><p>刚开始想用Swiftype来着，后来才知道Swiftype在去年就停止免费服务了，又想着去用Algolia，但我实在太笨，找不到地址在哪里，网站访问的也很慢，于是准备用hexo自带的Local Search</p><ol><li>安装 hexo-generator-searchdb，在站点的根目录下执行以下命令：<br><code>npm install hexo-generator-searchdb --save</code></li><li><p>编辑 站点配置文件，新增以下内容到任意位置：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">search:</span><br><span class="line">  path: search.xml</span><br><span class="line">  field: post</span><br><span class="line">  format: html</span><br><span class="line">  limit: 10000</span><br></pre></td></tr></table></figure></li><li><p>编辑 主题配置文件，启用本地搜索功能：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># Local search</span><br><span class="line">local_search:</span><br><span class="line">  enable: true</span><br></pre></td></tr></table></figure></li></ol><p>具体可以参考官方的文档<a href="http://theme-next.iissnan.com/third-party-services.html#search-system" target="_blank" rel="noopener">Next使用文档</a><br>目前我的博客评论用的是来必力，分享用的是Add This,站内搜索用的是local search，感觉用起来还是挺不错的</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;因为hexo博客使用的markdown语法，之前并没有接触过markdown语法，所以第一次写博客只能参考markdown语法的用法来写&lt;/p&gt;
&lt;h2 id=&quot;设置hexo的头像&quot;&gt;&lt;a href=&quot;#设置hexo的头像&quot; class=&quot;headerlink&quot; title
      
    
    </summary>
    
      <category term="hexo" scheme="https://wahaha5354.github.io/categories/hexo/"/>
    
    
      <category term="hexo next" scheme="https://wahaha5354.github.io/tags/hexo-next/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://wahaha5354.github.io/2018/08/07/hello-world/"/>
    <id>https://wahaha5354.github.io/2018/08/07/hello-world/</id>
    <published>2018-08-07T13:10:23.098Z</published>
    <updated>2018-08-07T13:10:23.094Z</updated>
    
    <content type="html"><![CDATA[<p>后面没有了，这是最早的一篇博客了</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;后面没有了，这是最早的一篇博客了&lt;/p&gt;
&lt;h2 id=&quot;Quick-Start&quot;&gt;&lt;a href=&quot;#Quick-Start&quot; class=&quot;headerlink&quot; title=&quot;Quick Start&quot;&gt;&lt;/a&gt;Quick Start&lt;/h2&gt;&lt;h3 id=&quot;Creat
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>test</title>
    <link href="https://wahaha5354.github.io/2018/08/05/test/"/>
    <id>https://wahaha5354.github.io/2018/08/05/test/</id>
    <published>2018-08-05T12:34:51.000Z</published>
    <updated>2018-11-30T06:53:08.779Z</updated>
    
    <content type="html"><![CDATA[<p>hello wanger</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;hello wanger&lt;/p&gt;

      
    
    </summary>
    
      <category term="test" scheme="https://wahaha5354.github.io/categories/test/"/>
    
    
      <category term="test" scheme="https://wahaha5354.github.io/tags/test/"/>
    
  </entry>
  
</feed>
