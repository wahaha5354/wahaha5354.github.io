<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>WangEr&#39;s Blog</title>
  
  <subtitle>生活不止眼前的苟且，还有远方的西洋参和鹿茸</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://wahaha5354.github.io/"/>
  <updated>2018-08-18T02:04:57.436Z</updated>
  <id>https://wahaha5354.github.io/</id>
  
  <author>
    <name>wanger</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>shell编程之条件测试</title>
    <link href="https://wahaha5354.github.io/2018/08/18/shell%E7%BC%96%E7%A8%8B%E4%B9%8B%E6%9D%A1%E4%BB%B6%E6%B5%8B%E8%AF%95/"/>
    <id>https://wahaha5354.github.io/2018/08/18/shell编程之条件测试/</id>
    <published>2018-08-18T01:55:05.000Z</published>
    <updated>2018-08-18T02:04:57.436Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>关于条件测试命令可以使用man test命令查看</p></blockquote><h2 id="条件测试语句语法"><a href="#条件测试语句语法" class="headerlink" title="条件测试语句语法"></a>条件测试语句语法</h2><p>1.test 测试语句<br>2.[ 测试语句 ]<br>3.[[ 测试语句 ]]<br>4.((测试语句))<br>其中1和2除了语法不一样，功能基本是一样的，而第3种语法他可以使用通配符进行匹配，第四种语法除了用于整数的比较，更多的还是进行一些整数的运算，不过平时经常用到的还是第2、3种语法结构。</p><h2 id="条件测试类型"><a href="#条件测试类型" class="headerlink" title="条件测试类型"></a>条件测试类型</h2><ol><li>文件测试</li><li>数值测试</li><li>字符串测试</li><li>逻辑测试<h2 id="文件测试"><a href="#文件测试" class="headerlink" title="文件测试"></a>文件测试</h2><h3 id="格式："><a href="#格式：" class="headerlink" title="格式："></a>格式：</h3>1.test 文件测试符 file<br>2.[ 文件测试符 file ]   #中括号的两边都需要有空格<br>3.[[ 文件测试符 file ]]  #中括号两边需要有空格<h3 id="常用文件测试操作符："><a href="#常用文件测试操作符：" class="headerlink" title="常用文件测试操作符："></a>常用文件测试操作符：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">-b: 文件是否存在，并且为块文件</span><br><span class="line">-c：文件是否存在，并且为字符文件</span><br><span class="line">-d: 文件是否存在，并且为一个目录（在linux下,万物皆为文件）</span><br><span class="line">-e: 文件是否存在</span><br><span class="line">-f: 文件是否存在，并且为普通文件</span><br><span class="line">-s: 文件是否存在，并且文件大小大于零</span><br><span class="line">-L: 文件是否存在，并且为链接文件</span><br><span class="line">-r: 文件是否存在，并且文件可读</span><br><span class="line">-w: 文件是否存在，并且文件可写</span><br><span class="line">-x: 文件是否存在，并且文件可执行</span><br><span class="line">file1 -nt file2 文件1是否比文件2新(文件新旧是按照文件修改时间来区分的)</span><br><span class="line">file1 -ot file2 文件1是否比文件2旧</span><br></pre></td></tr></table></figure></li></ol><h3 id="实例："><a href="#实例：" class="headerlink" title="实例："></a>实例：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[root@docker ~]# touch wanger          #新建一个普通文件</span><br><span class="line">[root@docker ~]# test -f wanger &amp;&amp; echo 0 || echo 1</span><br><span class="line">0      #测试文件是否是普通文件，如果是输出0，否则输出1</span><br><span class="line">[root@docker ~]# [ -d wanger ] &amp;&amp; echo 0 || echo 1</span><br><span class="line">1      #测试文件是否是一个目录，如果是输出0，否则输出1</span><br><span class="line"></span><br><span class="line">[root@docker ~]# touch wangerxiao    创建一个普通文件wangerxiao</span><br><span class="line">[root@docker ~]# test wanger -nt wangerxiao &amp;&amp; echo 0 || echo 1</span><br><span class="line">1     #比较wanger是否比wangerxiao新，如果为真输出0，否则输出1</span><br><span class="line">[root@docker ~]# [ wanger -ot wangerxiao ] &amp;&amp; echo 0 || echo 1</span><br><span class="line">0     #比较wanger是否比wangerxiao旧，如果为真输出0，否则输出1</span><br></pre></td></tr></table></figure><h2 id="字符串测试："><a href="#字符串测试：" class="headerlink" title="字符串测试："></a>字符串测试：</h2><h3 id="格式：-1"><a href="#格式：-1" class="headerlink" title="格式："></a>格式：</h3><ol><li>test 字符串测试符 string</li><li>[ 字符串测试符 string ]</li><li>[[ 字符串测试符 string ]]<h3 id="常用字符串测试操作符："><a href="#常用字符串测试操作符：" class="headerlink" title="常用字符串测试操作符："></a>常用字符串测试操作符：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">-z string :字符串长度是否为0</span><br><span class="line">-n string :字符串长度是否不为0</span><br><span class="line">string1 = string2 :string1和string2是否相等</span><br><span class="line">string1 != string2 :string1和string2是否不相等</span><br></pre></td></tr></table></figure></li></ol><h3 id="实例：-1"><a href="#实例：-1" class="headerlink" title="实例："></a>实例：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@docker ~]# name=wanger       #定义一个变量</span><br><span class="line">[root@docker ~]# [ -z $name ] &amp;&amp; echo 0 || echo 1</span><br><span class="line">1           #判断字符串是否为空，为空则返回0，否则返回1</span><br><span class="line">[root@docker ~]# test -n $name &amp;&amp; echo 0 || echo 1</span><br><span class="line">0#判断字符串是否不为空，如果是则返回0，否则返回1</span><br><span class="line">[root@docker ~]# [ $name != &quot;wanger&quot; ] &amp;&amp; echo 0 || echo 1</span><br><span class="line">1           #判断变量是否不等于”wanger”，如果是返回0,否则返回1</span><br><span class="line">[root@docker ~]# test $name = &quot;wanger&quot; &amp;&amp; echo 0 || echo 1</span><br><span class="line">0#判断变量是否等于”wanger”,如果是返回0，否则返回1</span><br></pre></td></tr></table></figure><h2 id="数值测试："><a href="#数值测试：" class="headerlink" title="数值测试："></a>数值测试：</h2><h3 id="格式：-2"><a href="#格式：-2" class="headerlink" title="格式："></a>格式：</h3><p>test num1 数值测试操作符 num2<br>[ num1 数值测试操作符 num2 ]<br>[[ num 数值测试操作符 num2 ]]<br>((num1数值测试操作符num2))</p><h3 id="常用数值测试操作符："><a href="#常用数值测试操作符：" class="headerlink" title="常用数值测试操作符："></a>常用数值测试操作符：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">num1 -eq num2 : 数字1是否等于数字2</span><br><span class="line">num1 -ge num2 : 数字1是否大于等于数字2</span><br><span class="line">num1 -gt num2 : 数字1是否大于数字2</span><br><span class="line">num1 -le num2 : 数字1是否小于等于数字2</span><br><span class="line">num1 -lt num2 : 数字1是否小于数字2</span><br><span class="line">num1 -ne num2 : 数字1是否不等于数字2</span><br></pre></td></tr></table></figure><blockquote><p>注意：以上几种操作符不能用在(())格式中，在(())中应使用”&lt; &gt; = != &gt;= &lt;=”比较符号来进行数值的比较</p></blockquote><h3 id="实例：-2"><a href="#实例：-2" class="headerlink" title="实例："></a>实例：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@docker ~]# test 6 -le 5 &amp;&amp; echo 0 ||echo 1</span><br><span class="line">0        #判断6是否小于等于5，如果是返回0，否则返回1</span><br><span class="line">[2]+  Done                    test 64 -gt 63</span><br><span class="line">[root@docker ~]# [ 6 -gt 5 ]&amp;&amp; echo 0 || echo 1</span><br><span class="line">0       #判断6是否大于5，如果大于返回0，否则返回1</span><br><span class="line">[root@docker ~]# [[ 6 = 5 ]]&amp;&amp; echo 0 || echo 1</span><br><span class="line">1#判断6是否等于5，如果等于返回0，否则返回1</span><br><span class="line">[root@docker ~]# ((5!=6))&amp;&amp;echo 0 ||echo 1</span><br><span class="line">0#判断5是否等于6，如果不等于返回0，等于则返回1</span><br></pre></td></tr></table></figure><h2 id="逻辑运算符："><a href="#逻辑运算符：" class="headerlink" title="逻辑运算符："></a>逻辑运算符：</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">-a : 相当于&amp;&amp;，表示逻辑与，两端条件都为真，结果为真</span><br><span class="line">-o : 相当于||,表示逻辑或，两端条件只要有一个为真，结果就为真</span><br><span class="line">！: 逻辑非，两端相反结果为真</span><br></pre></td></tr></table></figure><h3 id="实例：-3"><a href="#实例：-3" class="headerlink" title="实例："></a>实例：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">test=”123”  #定义test变量</span><br><span class="line">[root@docker ~]# [ ! -z $test -o $test = &quot;123&quot; ] &amp;&amp;echo 0 || echo 1</span><br><span class="line">0     #判断test变量是否不为空或者是否等于123，如果是返回0，在[]格式中只能使用-o和-a，而不能用&amp;&amp;和||</span><br><span class="line">[root@docker ~]# test -z $test &amp;&amp; test $test = &quot;123&quot; &amp;&amp;echo 0 ||echo 1</span><br><span class="line">1        #判断test变量是否为空并且test变量是否等于123，如果是返回0</span><br><span class="line">[root@docker ~]# [[ -z $test || $test = &quot;123&quot; ]] &amp;&amp;echo 0 ||echo 1</span><br><span class="line">0        #判断test变量是否为空或者test变量是否等于123，如果是返回0</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;关于条件测试命令可以使用man test命令查看&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;条件测试语句语法&quot;&gt;&lt;a href=&quot;#条件测试语句语法&quot; class=&quot;headerlink&quot; title=&quot;条件测试语句语法&quot;&gt;&lt;/a&gt;条件测
      
    
    </summary>
    
    
      <category term="shell" scheme="https://wahaha5354.github.io/tags/shell/"/>
    
  </entry>
  
  <entry>
    <title>shell编程循环脚本</title>
    <link href="https://wahaha5354.github.io/2018/08/18/shell%E7%BC%96%E7%A8%8B%E5%BE%AA%E7%8E%AF%E8%84%9A%E6%9C%AC/"/>
    <id>https://wahaha5354.github.io/2018/08/18/shell编程循环脚本/</id>
    <published>2018-08-18T01:33:09.000Z</published>
    <updated>2018-08-18T01:52:20.817Z</updated>
    
    <content type="html"><![CDATA[<h2 id="求从1加到100的和"><a href="#求从1加到100的和" class="headerlink" title="求从1加到100的和"></a>求从1加到100的和</h2><h3 id="使用for循环求和："><a href="#使用for循环求和：" class="headerlink" title="使用for循环求和："></a>使用for循环求和：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line">declare -i sum=0</span><br><span class="line">for ((i=1;i&lt;=100;i++));do</span><br><span class="line">let sum+=$i</span><br><span class="line">done</span><br><span class="line">echo &quot;sum=$sum&quot;</span><br></pre></td></tr></table></figure><h3 id="使用until循环求和："><a href="#使用until循环求和：" class="headerlink" title="使用until循环求和："></a>使用until循环求和：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line"></span><br><span class="line">i=1</span><br><span class="line">sum=0</span><br><span class="line">until [ $i -gt 100 ];do</span><br><span class="line">let sum+=$i</span><br><span class="line">let i++</span><br><span class="line">done</span><br><span class="line">echo &quot;sum is:$sum&quot;</span><br></pre></td></tr></table></figure><h3 id="使用while循环求和："><a href="#使用while循环求和：" class="headerlink" title="使用while循环求和："></a>使用while循环求和：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line"></span><br><span class="line">i=1</span><br><span class="line">sum=0</span><br><span class="line">while [ $i -le 100 ];do</span><br><span class="line">let sum+=$i</span><br><span class="line">let i++</span><br><span class="line">done</span><br><span class="line">echo &quot;sum is:$sum&quot;</span><br></pre></td></tr></table></figure><h2 id="求100以内的偶数之和"><a href="#求100以内的偶数之和" class="headerlink" title="求100以内的偶数之和"></a>求100以内的偶数之和</h2><h3 id="使用for循环求和：-1"><a href="#使用for循环求和：-1" class="headerlink" title="使用for循环求和："></a>使用for循环求和：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line"></span><br><span class="line">i=0</span><br><span class="line">sum=0</span><br><span class="line">for i in `seq 100` ;do</span><br><span class="line">    if [ $[$i%2] -eq 1 ];then</span><br><span class="line">continue</span><br><span class="line">fi</span><br><span class="line">let sum+=$i</span><br><span class="line">done</span><br><span class="line">echo &quot;sum is:$sum&quot;</span><br></pre></td></tr></table></figure><h3 id="使用while循环求和：-1"><a href="#使用while循环求和：-1" class="headerlink" title="使用while循环求和："></a>使用while循环求和：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line"></span><br><span class="line">i=0</span><br><span class="line">sum=0</span><br><span class="line">while [ $i -le 100 ];do</span><br><span class="line">let i++</span><br><span class="line">if [ $[$i%2] -eq 1 ];then</span><br><span class="line">continue</span><br><span class="line">fi</span><br><span class="line">let sum+=$i</span><br><span class="line">done</span><br><span class="line">echo &quot;sum is: $sum&quot;</span><br></pre></td></tr></table></figure><h3 id="使用until循环求和：-1"><a href="#使用until循环求和：-1" class="headerlink" title="使用until循环求和："></a>使用until循环求和：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line"></span><br><span class="line">i=0</span><br><span class="line">sum=0</span><br><span class="line">until [ $i -gt 100 ];do</span><br><span class="line">let i++</span><br><span class="line">if [ $[ $i%2 ] -eq 1 ];then</span><br><span class="line">continue</span><br><span class="line">fi</span><br><span class="line">let sum+=$i</span><br><span class="line">done</span><br><span class="line">echo &quot;sum is: $sum&quot;</span><br></pre></td></tr></table></figure><h2 id="编写一个九九乘法表"><a href="#编写一个九九乘法表" class="headerlink" title="编写一个九九乘法表"></a>编写一个九九乘法表</h2><h3 id="使用for循环："><a href="#使用for循环：" class="headerlink" title="使用for循环："></a>使用for循环：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line"></span><br><span class="line">#for i in `seq 9`;do</span><br><span class="line">for ((j=1;j&lt;=9;j++));do</span><br><span class="line">for ((i=1;i&lt;=j;i++));do</span><br><span class="line">echo -ne &quot;$i*$j=$(($i*$j))\t&quot;</span><br><span class="line">done</span><br><span class="line">echo</span><br><span class="line">done</span><br></pre></td></tr></table></figure><h3 id="使用while循环："><a href="#使用while循环：" class="headerlink" title="使用while循环："></a>使用while循环：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line"></span><br><span class="line">i=1</span><br><span class="line">j=1</span><br><span class="line">while[ $j -le 9 ];do</span><br><span class="line">while [ $i -le $j ];do</span><br><span class="line">echo -ne &quot;$i*$j=$(($i*$j))\t&quot;</span><br><span class="line">let i++</span><br><span class="line">done</span><br><span class="line">echo</span><br><span class="line">let i=1</span><br><span class="line">let j++</span><br><span class="line">done</span><br></pre></td></tr></table></figure><h3 id="使用until循环："><a href="#使用until循环：" class="headerlink" title="使用until循环："></a>使用until循环：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line"></span><br><span class="line">i=1</span><br><span class="line">j=1</span><br><span class="line">until [ $j -gt 9 ];do</span><br><span class="line">until [ $i -gt $j ];do</span><br><span class="line">echo -ne &quot;$i*$j=$(($i*$j))\t&quot;</span><br><span class="line">let i++</span><br><span class="line">done</span><br><span class="line">echo</span><br><span class="line">let i=1</span><br><span class="line">let j++</span><br><span class="line">done</span><br></pre></td></tr></table></figure><h2 id="通过脚本判断用户是否登入系统，如果没有，则每10秒循环一次"><a href="#通过脚本判断用户是否登入系统，如果没有，则每10秒循环一次" class="headerlink" title="通过脚本判断用户是否登入系统，如果没有，则每10秒循环一次"></a>通过脚本判断用户是否登入系统，如果没有，则每10秒循环一次</h2><h3 id="使用while循环：-1"><a href="#使用while循环：-1" class="headerlink" title="使用while循环："></a>使用while循环：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line"></span><br><span class="line">read -p &quot;pls input a username: &quot; username</span><br><span class="line">while ! `who |grep &quot;^$username&quot; &amp;&gt; /dev/null`;do</span><br><span class="line">sleep 10</span><br><span class="line">done</span><br><span class="line">echo &quot;`date +%F-%H:%M:%S` $username logged on&quot;&gt;&gt;/tmp/user.log</span><br></pre></td></tr></table></figure><h2 id="使用case循环来获取系统信息"><a href="#使用case循环来获取系统信息" class="headerlink" title="使用case循环来获取系统信息"></a>使用case循环来获取系统信息</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line"></span><br><span class="line">cat &lt;&lt;EOF</span><br><span class="line">1) show cpu information;</span><br><span class="line">2) show memory information;</span><br><span class="line">3) show disk information;</span><br><span class="line">4) quit</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line">cpu_info()&#123;</span><br><span class="line">lscpu</span><br><span class="line">&#125;</span><br><span class="line">mem_info()&#123;</span><br><span class="line">cat /proc/meminfo</span><br><span class="line">&#125;</span><br><span class="line">disk_info()&#123;</span><br><span class="line">fdisk -l</span><br><span class="line">&#125;</span><br><span class="line">quit()&#123;</span><br><span class="line">echo &quot;quit&quot;</span><br><span class="line">exit 0</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">read -p &quot;pls input a num: &quot; num</span><br><span class="line">if [ $num -ne 1 -a $num -ne 2 -a $num -ne 3 -a $num -ne 4 ];then </span><br><span class="line">read -p &quot;pls input a num again: &quot; num</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line">case &quot;$num&quot; in </span><br><span class="line">1) </span><br><span class="line">cpu_info</span><br><span class="line">;;</span><br><span class="line">2)</span><br><span class="line">mem_info</span><br><span class="line">;;</span><br><span class="line">3)</span><br><span class="line">disk_info</span><br><span class="line">;;</span><br><span class="line">4)</span><br><span class="line">quit</span><br><span class="line">esac</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;求从1加到100的和&quot;&gt;&lt;a href=&quot;#求从1加到100的和&quot; class=&quot;headerlink&quot; title=&quot;求从1加到100的和&quot;&gt;&lt;/a&gt;求从1加到100的和&lt;/h2&gt;&lt;h3 id=&quot;使用for循环求和：&quot;&gt;&lt;a href=&quot;#使用for循环求和：&quot;
      
    
    </summary>
    
      <category term="shell编程" scheme="https://wahaha5354.github.io/categories/shell%E7%BC%96%E7%A8%8B/"/>
    
    
      <category term="shell" scheme="https://wahaha5354.github.io/tags/shell/"/>
    
  </entry>
  
  <entry>
    <title>Markdown语法</title>
    <link href="https://wahaha5354.github.io/2018/08/09/Markdown%E8%AF%AD%E6%B3%95/"/>
    <id>https://wahaha5354.github.io/2018/08/09/Markdown语法/</id>
    <published>2018-08-09T09:35:55.000Z</published>
    <updated>2018-08-09T14:52:24.126Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-标题"><a href="#1-标题" class="headerlink" title="1.标题"></a>1.标题</h2><p>第一种 markdown最高可以设置六级标题,前面#号的数量代表标题的等级,#号后面要带一个空格<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># 一级标题</span><br><span class="line">## 二级标题</span><br><span class="line">### 三级标题</span><br><span class="line">#### 四级标题</span><br><span class="line">##### 五级标题</span><br><span class="line">###### 六级标题</span><br></pre></td></tr></table></figure></p><p>演示</p><h1 id="一级标题"><a href="#一级标题" class="headerlink" title="一级标题"></a>一级标题</h1><h2 id="二级标题"><a href="#二级标题" class="headerlink" title="二级标题"></a>二级标题</h2><h3 id="三级标题"><a href="#三级标题" class="headerlink" title="三级标题"></a>三级标题</h3><h4 id="四级标题"><a href="#四级标题" class="headerlink" title="四级标题"></a>四级标题</h4><h5 id="五级标题"><a href="#五级标题" class="headerlink" title="五级标题"></a>五级标题</h5><h6 id="六级标题"><a href="#六级标题" class="headerlink" title="六级标题"></a>六级标题</h6><p>第二种 这种只能表示一级和二级标题,=和-的数量没有限制，只要大于一就行<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">一级标题</span><br><span class="line">=======</span><br><span class="line">二级标题</span><br><span class="line">------</span><br></pre></td></tr></table></figure></p><p>演示</p><h1 id="一级标题-1"><a href="#一级标题-1" class="headerlink" title="一级标题"></a>一级标题</h1><h2 id="二级标题-1"><a href="#二级标题-1" class="headerlink" title="二级标题"></a>二级标题</h2><h2 id="2-文本样式"><a href="#2-文本样式" class="headerlink" title="2.文本样式"></a>2.文本样式</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">**加粗**</span><br><span class="line">*斜体* 或者 _斜体_</span><br><span class="line">***加粗斜体***</span><br><span class="line">~~删除线~~</span><br></pre></td></tr></table></figure><p>演示<br><strong>加粗</strong><br><em>斜体</em><br><strong><em>加粗斜体</em></strong><br><del>删除线</del></p><h2 id="3-列表"><a href="#3-列表" class="headerlink" title="3.列表"></a>3.列表</h2><h3 id="无序列表"><a href="#无序列表" class="headerlink" title="无序列表"></a>无序列表</h3><p>无序列表可以有三种写法,使用*或+或- :<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">使用 * ：</span><br><span class="line">* 无序列表1</span><br><span class="line">* 无序列表2</span><br><span class="line">* 无序列表3</span><br><span class="line"></span><br><span class="line">使用 + ：</span><br><span class="line">+ 无序列表4</span><br><span class="line">+ 无序列表5</span><br><span class="line">+ 无序列表6</span><br><span class="line"></span><br><span class="line">使用 - ：</span><br><span class="line">- 无序列表7</span><br><span class="line">- 无序列表8</span><br><span class="line">- 无序列表9</span><br></pre></td></tr></table></figure></p><p>演示<br>使用 * ：</p><ul><li>无序列表1</li><li>无序列表2</li><li>无序列表3</li></ul><p>使用 + ：</p><ul><li>无序列表4</li><li>无序列表5</li><li>无序列表6</li></ul><p>使用 - ：</p><ul><li>无序列表7</li><li>无序列表8</li><li>无序列表9<h3 id="有序列表"><a href="#有序列表" class="headerlink" title="有序列表"></a>有序列表</h3>有序列表就是在前面加数字而不是用符号<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1. 有序列表1</span><br><span class="line">2. 有序列表2</span><br><span class="line">3. 有序列表3</span><br></pre></td></tr></table></figure></li></ul><p>演示</p><ol><li>有序列表1</li><li>有序列表2</li><li>有序列表3<h2 id="4-引用"><a href="#4-引用" class="headerlink" title="4.引用"></a>4.引用</h2>引用的格式很简单,在引用的文字前面加上<code>&gt;</code>就行了<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; 为人民服务</span><br><span class="line">&gt;          ——毛主席</span><br></pre></td></tr></table></figure></li></ol><p>演示</p><blockquote><p>为人民服务</p><p align="right"></p><p align="right">——毛主席</p></blockquote><h2 id="5-代码块"><a href="#5-代码块" class="headerlink" title="5.代码块"></a>5.代码块</h2><p>比较短的或是单行的代码可以使用反引号包裹,若是有多行的代码要使用3个反引号,这里为了转义我用\将反引号隔开，顺便说一下,如果不想让一些符号用作markdown语法,可用\进行转义。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">`短的或者单行代码`</span><br><span class="line">`\``               </span><br><span class="line">多行代码&#123;</span><br><span class="line">        print ‘人生苦短，我用Python’</span><br><span class="line">        &#125;</span><br><span class="line">`\``</span><br></pre></td></tr></table></figure></p><p>演示<br><code>短的或者单行代码</code><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">多行代码&#123;</span><br><span class="line">        print ‘人生苦短，我用Python’</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure></p><h2 id="6-表格"><a href="#6-表格" class="headerlink" title="6.表格"></a>6.表格</h2><p>在markdown里使用表格有点麻烦，使用|来分隔不同的单元格，使用-来分隔表头和其他行，使用:来设置表格的对齐方式<br><code>:---</code> 表示左对齐,不加:也表示左对齐<br><code>:--:</code> 表示居中对齐<br><code>---:</code> 表示右对齐<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">|name|age|sex|</span><br><span class="line">|:-----|:--:|----:|</span><br><span class="line">|wanger|23  |nan  |</span><br><span class="line">|lisi  |20  |nv   |</span><br><span class="line">|wangwu|22  |nan  |</span><br></pre></td></tr></table></figure></p><p>演示</p><table><thead><tr><th style="text-align:left">name</th><th style="text-align:center">age</th><th style="text-align:right">sex</th></tr></thead><tbody><tr><td style="text-align:left">wanger</td><td style="text-align:center">23</td><td style="text-align:right">nan</td></tr><tr><td style="text-align:left">lisi</td><td style="text-align:center">20</td><td style="text-align:right">nv</td></tr><tr><td style="text-align:left">wangwu</td><td style="text-align:center">22</td><td style="text-align:right">nan</td></tr></tbody></table><h2 id="7-分割线"><a href="#7-分割线" class="headerlink" title="7.分割线"></a>7.分割线</h2><p>可以在一行中用三个以上的星号、减号、底线来建立一个分隔线，同时需要在分隔线的上面空一行。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">___</span><br><span class="line">***</span><br></pre></td></tr></table></figure></p><p>演示</p><hr><hr><hr><h2 id="8-超链接与图片"><a href="#8-超链接与图片" class="headerlink" title="8.超链接与图片"></a>8.超链接与图片</h2><p>超链接与图片格式的最大区别就是图片格式多一个’!’，图片的title和链接的title表示你的鼠标指向图片或者链接描述的时候出现的内容,title与图片地址和链接地址之间有空格,title属性可以不加。</p><ul><li>图片<br><code>![图片描述](图片地址 &quot;title&quot;)</code></li><li>链接<br><code>[链接描述](链接地址 &quot;title&quot;)</code><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">![微信公众号](/uploads/wechat-qcode.jpg &quot;微信公众号&quot;)</span><br><span class="line">[个人博客](https://wahaha5354.github.io &quot;个人博客&quot;)</span><br></pre></td></tr></table></figure></li></ul><p>演示<br><img src="/uploads/wechat-qcode.jpg" alt="微信公众号" title="微信公众号"><br><a href="https://wahaha5354.github.io" title="个人博客">个人博客</a> </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;1-标题&quot;&gt;&lt;a href=&quot;#1-标题&quot; class=&quot;headerlink&quot; title=&quot;1.标题&quot;&gt;&lt;/a&gt;1.标题&lt;/h2&gt;&lt;p&gt;第一种 markdown最高可以设置六级标题,前面#号的数量代表标题的等级,#号后面要带一个空格&lt;br&gt;&lt;figure cl
      
    
    </summary>
    
    
      <category term="markdown" scheme="https://wahaha5354.github.io/tags/markdown/"/>
    
  </entry>
  
  <entry>
    <title>next主题的个性化设置</title>
    <link href="https://wahaha5354.github.io/2018/08/09/next%E4%B8%BB%E9%A2%98%E7%9A%84%E4%B8%AA%E6%80%A7%E5%8C%96%E8%AE%BE%E7%BD%AE/"/>
    <id>https://wahaha5354.github.io/2018/08/09/next主题的个性化设置/</id>
    <published>2018-08-09T00:09:18.000Z</published>
    <updated>2018-08-09T05:27:08.346Z</updated>
    
    <content type="html"><![CDATA[<p>因为hexo博客使用的markdown语法，之前并没有接触过markdown语法，所以第一次写博客只能参考markdown语法的用法来写</p><h2 id="设置hexo的头像"><a href="#设置hexo的头像" class="headerlink" title="设置hexo的头像"></a>设置hexo的头像</h2><p>之前参照了网上修改的方法老是出现报错，折腾了两天还是不行，后来在修改网站图标的时候才知道是因为我配置文件格式写错了，网上的很多方法都是在主题的配置文件里改，但我改了并没有生效，也许是姿势有问题，后来在主题的配置文件里修改竟然生效了，在配置文件里搜索’Sidebar Avatar’，找到如下字段：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># Sidebar Avatar</span><br><span class="line">avatar:</span><br><span class="line">  # in theme directory(source/images): /images/avatar.gif</span><br><span class="line">  # in site  directory(source/uploads): /uploads/avatar.gif</span><br><span class="line">  # You can also use other linking images.</span><br><span class="line">  url: /images/avatar.jpg</span><br></pre></td></tr></table></figure></p><p>在url: 后面加上头像的存放地址，我的头像放在了站点目录/source/images/目录下，修改完配置后执行命令:<br><code>hexo clean</code><br><code>hexo g</code><br><code>hexo d</code></p><h2 id="站内搜索"><a href="#站内搜索" class="headerlink" title="站内搜索"></a>站内搜索</h2><p>刚开始想用Swiftype来着，后来才知道Swiftype在去年就停止免费服务了，又想着去用Algolia，但我实在太笨，找不到地址在哪里，网站访问的也很慢，于是准备用hexo自带的Local Search</p><ol><li>安装 hexo-generator-searchdb，在站点的根目录下执行以下命令：<br><code>npm install hexo-generator-searchdb --save</code></li><li><p>编辑 站点配置文件，新增以下内容到任意位置：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">search:</span><br><span class="line">  path: search.xml</span><br><span class="line">  field: post</span><br><span class="line">  format: html</span><br><span class="line">  limit: 10000</span><br></pre></td></tr></table></figure></li><li><p>编辑 主题配置文件，启用本地搜索功能：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># Local search</span><br><span class="line">local_search:</span><br><span class="line">  enable: true</span><br></pre></td></tr></table></figure></li></ol><p>具体可以参考官方的文档<a href="http://theme-next.iissnan.com/third-party-services.html#search-system" target="_blank" rel="noopener">Next使用文档</a><br>目前我的博客评论用的是来必力，分享用的是Add This,站内搜索用的是local search，感觉用起来还是挺不错的</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;因为hexo博客使用的markdown语法，之前并没有接触过markdown语法，所以第一次写博客只能参考markdown语法的用法来写&lt;/p&gt;
&lt;h2 id=&quot;设置hexo的头像&quot;&gt;&lt;a href=&quot;#设置hexo的头像&quot; class=&quot;headerlink&quot; title
      
    
    </summary>
    
      <category term="hexo" scheme="https://wahaha5354.github.io/categories/hexo/"/>
    
    
      <category term="hexo next" scheme="https://wahaha5354.github.io/tags/hexo-next/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://wahaha5354.github.io/2018/08/07/hello-world/"/>
    <id>https://wahaha5354.github.io/2018/08/07/hello-world/</id>
    <published>2018-08-07T13:10:23.098Z</published>
    <updated>2018-08-07T13:10:23.094Z</updated>
    
    <content type="html"><![CDATA[<p>后面没有了，这是最早的一篇博客了</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;后面没有了，这是最早的一篇博客了&lt;/p&gt;
&lt;h2 id=&quot;Quick-Start&quot;&gt;&lt;a href=&quot;#Quick-Start&quot; class=&quot;headerlink&quot; title=&quot;Quick Start&quot;&gt;&lt;/a&gt;Quick Start&lt;/h2&gt;&lt;h3 id=&quot;Creat
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>test</title>
    <link href="https://wahaha5354.github.io/2018/08/05/test/"/>
    <id>https://wahaha5354.github.io/2018/08/05/test/</id>
    <published>2018-08-05T12:34:51.000Z</published>
    <updated>2018-08-08T00:52:48.601Z</updated>
    
    <content type="html"><![CDATA[<p>hello wanger</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;hello wanger&lt;/p&gt;

      
    
    </summary>
    
      <category term="test" scheme="https://wahaha5354.github.io/categories/test/"/>
    
    
      <category term="test" scheme="https://wahaha5354.github.io/tags/test/"/>
    
  </entry>
  
</feed>
