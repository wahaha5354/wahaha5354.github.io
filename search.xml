<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[网络安全学习网址]]></title>
    <url>%2F2018%2F10%2F25%2F%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%AD%A6%E4%B9%A0%E7%BD%91%E5%9D%80%2F</url>
    <content type="text"><![CDATA[网络安全学习网址 http://www.sec-wiki.com/skill/安全技能(里面渗透逆向编程都有介绍)http://blog.knownsec.com/Knownsec_RD_Checklist/ 知道创宇研发技能表v3.0https://www.shentoushi.top/network 渗透师 （网络安全学习网址导航）https://www.anquanquan.info/ 安全圈info（网络安全学习导航网址） 综合学习平台： https://secquan.org 圈子社区https://github.com/cxf210/Scanners-Boxhttp://edu.gooann.com/ 谷安网校https://edu.aqniu.com/ 安全牛课堂http://www.jikexueyuan.com/ 极客学院http://www.hetianlab.com/ 合天http://www.moonsos.com/ 米安网http://www.ichunqiu.com/ i春秋http://www.honyaedu.com/ 红亚http://www.baimaoxueyuan.com/ 白帽学院http://www.simplexue.com/ctf/index 西普学院http://www.imooc.com/course/list 慕课http://www.secbox.cn/ 安全盒子http://www.freebuf.com/ freebufhttp://bobao.360.cn/ 360安全播报https://github.com/cxf210/Scanners-Box github上的资源库https://github.com/cxf210/dockerhttps://github.com/cxf210/fuzzdbhttps://github.com/cxf210/webshellgithub上的webshellhttp://drops.wooyun.org/ 乌云知识库http://wiki.wooyun.org/ WooYun WiKihttps://www.91ri.org/ 91rihttps://www.t00ls.NET/tools 土司https://bbs.77169.com/forum.php 华盟网http://www.ijiandao.com/ 爱尖刀http://www.secist.com/ 即刻安全http://www.secwk.com/article/index.html 威客众测http://bluereader.org/ 深蓝阅读http://www.shentou.org/ 黑客安全军火库http://netsecurity.51cto.com/ 51ctohttp://security.csdn.net/ csdnhttp://www.80sec.com/ 80sec teamhttps://security.alibaba.com/blog.htm?spm=0.0.0.0.knOqaI 阿里巴巴安全响应中心http://security.tencent.com/index.PHP/blog 腾讯安全应急响应中心博客http://security.360.cn/blog 360安全应急响应中心博客http://sec.baidu.com/index.php?research/list 百度安全应急响应中心博客 博客推荐 http://security.tencent.com/index.php/blog &gt; http://217.logdown.com/ 217https://laolisafe.com/ 大老李的博客http://mannix.top/ mannix的博客http://www.raosong.cc/ 折戟博客http://www.blue-lotus.net blue-lotus 蓝莲花http://blog.0ops.net/ 0opshttp://blog.amanhardikar.com/#homehttp://le4f.net/ e4fhttp://www.programlife.net/ 代码疯子http://www.hackdog.me/ redrain’bloghttp://www.syjzwjj.com/ 俊杰http://syclover.sinaapp.com/ 三叶草安全小组http://appleu0.sinaapp.com/ appleU0大大http://bl4ck.in/ tomato表哥http://www.sco4x0.com/ 4叔叔http://laterain.sinaapp.com/ 白神http://0nly3nd.sinaapp.com/ 0nly3ndhttp://hijacks.in/ LateRain’bloghttp://www.waitalone.cn/ 独自等待http://evilcos.me/ 余弦http://www.moonsec.com/ 暗月http://www.cnblogs.com/xuanhun/ 玄魂https://www.leavesongs.com/ 离别歌http://huaidan.org/ 鬼仔http://www.03sec.com/ sky的自留地http://joychou.org/ jc老师http://www.unhonker.com/ 90’s bloghttp://www1.taosay.net/ 道哥的黑板报http://blog.knownsec.com/ 知道创宇http://www.sadk.org/ 焠安http://www.cnseay.com/ seay’bloghttp://blog.aptsec.net/ AptSec Teamhttp://lcx.cc/ 网络安全研究中心http://www.kali.org.cn/ kali中文网http://xiao106347.blog.163.com/ xiao106347 kali折腾 渗透: http://www.wooyun.org/ 乌云http://bbs.blackbap.org/ 习科http://www.1937cn.net/ 1937http://forum.cnsec.org/ 暗组http://www.k33nteam.org/ keen teamhttp://forum.eviloctal.com/ 邪恶八进制http://www.evil0x.com/ 邪恶十六进制http://www.myhack58.com/ 黑吧安全吧http://www.cnhonkerarmy.com/ 中国红客红盟http://www.chinahacker.com/ 中国黑客联盟http://www.hxhack.com/ 华夏黑客联盟http://www.heikexiehui.com/ 中国黑客协会官网http://www.hackbase.com/ 黑基http://www.2cto.com/ 红黑联盟http://bbs.2cto.com/ 红黑联盟论坛http://www.hackwd.com/http://www.heishou.com.cn/ 黑手安全网https://www.sitedirsec.com/ 非安全中国网http://www.zatokasztuki.com/ 学生技术联盟 逆向： http://www.52pojie.cn/ 吾爱破解http://bbs.pediy.com/ 看雪论坛https://www.chinapyg.com/ 飘云阁论坛https://0x00sec.org/ 国外逆向论坛https://github.com/onethawt/reverseengineering-reading-list/blob/master/README.md 逆向工程阅读清单https://github.com/RPISEC/Malware/blob/master/README.md 恶意软件分析 编程： http://www.he11oworld.com/ hello wordhttp://www.w3school.com.cn/ w3schoolhttp://www.runoob.com/ 菜鸟http://www.51zxw.net/https://github.com/http://navisec-Git.qiniudn.com/http://c.biancheng.net/cpp/http://www.liaoxuefeng.com/http://www.php100.com/https://ruby-china.org/wikihttp://bbs.csdn.net/forums/Java/http://outofmemory.cn/tutorial/ 书籍： http://zhuanlan.zhihu.com/Evi1m0/19706178 Evi1m0: 书籍推荐http://www.douban.com/doulist/3339701/ 信息安全必读书单http://www.douban.com/doulist/1363865/ 信息安全经典书籍http://www.zhihu.com/question/21390646http://my.oschina.net/bluefly/blog/335409?utm_source=tuicool&amp;utm_medium=referralWeb安全核心书单连载《安全参考》http://www.douban.com/group/topic/72383272/(2013年第一期--2015年第一期)全集《书安》(更新中)http://www.secbox.cn/hacker/8205.html 书安SecBook第一期《icloud iOS安全大揭秘》http://www.secbox.cn/hacker/7366.html 书安SecBook第二期《信息安全攻防赛》渗透实战文章可以看看里的杨凡(http://blog.sina.com.cn/s/articlelist_1758675673_4_1.html)和法克文章（http://pan.baidu.com/share/link?shareid=249629&amp;uk=2198816663） 工具： 链接：https://pan.baidu.com/s/1tt9O4etSxkFzPsRCamOInA提取码：dt8o 个人收集的一些ctf工具包https://github.com/zardus/ctf-tools github上的ctf工具http://www.52pojie.cn/forum.php?mod=viewthread&amp;tid=388015 吾爱破解工具包http://down.52pojie.cn/ 爱盘 – 在线破解工具包，教程http://www.52pojie.cn/thread-341238-1-1.html 吾爱破解论坛专用破解虚拟机ctf常用工具包请看http://tieba.baidu.com/p/3933947157里面群文件 其他 http://www.zhihu.com/topic/19558642 黑客知乎话题http://www.zhihu.com/topic/20011446 ctf知乎话题http://www.zhihu.com/topic/19561983 信息安全知乎话题http://zhuanlan.zhihu.com/evilcos/19961466 余弦知乎专栏 CTF方面 http://blog.idf.cn/2015/02/ctf-field-guidehttp://tieba.baidu.com/p/3933947157 ctf大全https://ctftime.org/event/list/upcoming 各种CTF赛事预告(ps:国内各个高校或企业举办的比赛请进http://tieba.baidu.com/p/3933947157里面的群) 平时ctf练习ctf逆向: https://ctf.pediy.com/ 看雪ctfhttp://reversing.kr/http://pwnable.kr/http://exploit-exercises.com/http://overthewire.orghttp://security.cs.rpi.edu/courses/binexp-spring2015/ bin 干货区http://www.52pojie.cn/forum-67-1.html 『2014CrackMe大赛』 SQL: https://github.com/Audi-1/sqli-labshttp://redtiger.labs.overthewire.org/ ctf XSS: http://prompt.ml/http://xss.pkav.net/xss/http://www.doscn.org/xss/http://xss-quiz.int21h.jp/http://escape.alf.nu/https://xss-game.appspot.com/ 谷歌的xss游戏 密码学：http://cryptopals.com/ ctf综合练习：http://ctf.nuptsast.com/login 南邮大学ctfhttp://hackinglab.cn/ 网络信息安全攻防学习平台https://www.91ctf.com/session 安恒竞赛平台http://ctf.bugku.com/new bugkuctf练习平台http://captf.com/ ctf题目http://cafebabe.cc/nazo/ 脑洞开发，与ctf只有那么一点关系，有85关了http://1111.segmentfault.com/ 光棍节程序员闯关秀http://www.helloisa.com/test/http://www.fj543.com/hack/ 黑客丛林之旅http://monyer.com/game/game1/ 梦之光芒的小游戏http://oj.xctf.org.cn/ XCTF_OJ练习平台http://hackgame.blackbap.org/ 习科黑客游戏http://ctf.3sec.cn/ Jlu.CTFhttp://www.baimaoxueyuan.com/ctf 白帽学院ctf挑战赛http://www.ichunqiu.com/tiaozhans i春秋ctf挑战http://ctf.idf.cn/ idf 实验室http://www.dvwa.co.uk/ DVWAhttp://ctf.moonsos.com/pentest/index.php 米安网ctfhttp://www.hetianlab.com/CTFrace.html 合天ctfhttp://www.shiyanbar.com/ctf/index 实验吧(前名西普学院）http://hkyx.myhack58.com/ 黑吧安全网-红客闯关游戏http://202.108.211.5/ 实训竞赛系统 国外比较好的几个综合练习平台 https://ctf365.com/https://hack.me/s/https://ringzer0ctf.com/challengeshttps://www.hackergateway.com/http://challengeland.co/http://www.hackertest.net/http://www.wechall.nethttps://www.vulnhub.com/http://insight-labs.org/http://wargame.kr/https://ctflearn.com/http://canyouhack.it/https://pentest.training/index.phphttp://hackit.sinaapp.com/http://webhacking.kr/http://fun.coolshell.cn/http://ringzer0team.com/challengehttps://backdoor.sdslabs.co/https://www.enigmagroup.org/pages/challengeshttp://overthewire.org/wargames/natas/natas2.htmlhttp://smashthestack.org/ 漏洞利用练习网站 ctf writeup(WP): 直接百度:writeup(一边看一边总结，有道笔记，印象笔记什么的，最好能复现)http://drops.wooyun.org/?s=writeup&amp;submit=%E6%90%9C%E7%B4%A2http://bobao.360.cn/ctf/https://github.com/ctfs/ 各种 writeuphttp://sec.yka.me/ CTF Writeup Summaryhttps://ctf-team.vulnhub.com/ Write Upshttp://hebin.me/https://blog.csdn.net/gyt478922579/article/details/53204891?locationNum=11&amp;fps=1https://blog.csdn.net/xuqi7/article/details/51635360]]></content>
      <tags>
        <tag>网络安全</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[centos系统7的ftp版本创建目录和匿名用户登录的测试]]></title>
    <url>%2F2018%2F09%2F13%2Fcentos%E7%B3%BB%E7%BB%9F7%E7%9A%84ftp%E7%89%88%E6%9C%AC%E5%88%9B%E5%BB%BA%E7%9B%AE%E5%BD%95%E5%92%8C%E5%8C%BF%E5%90%8D%E7%94%A8%E6%88%B7%E7%99%BB%E5%BD%95%E7%9A%84%E6%B5%8B%E8%AF%95%2F</url>
    <content type="text"><![CDATA[centos6系统使用的ftp是2.0以上的版本，而centos7使用的是3.0.2版本 首先说一下ftp使用匿名用户创建目录在centos7下只能在pub下创建文件夹，而且pub用户属主必须是ftp或者将pub目录授予777的权限，也就是说ftp用户在pub目录下必须具有写的权限。在这之前需要确保配置文件这几个选项为YES，这几个选项在配置文件里都是默认开启的，还有selinux要处于Permissive状态123anon_mkdir_write_enable=YESanon_upload_enable=YESanonymous_enable=YES 还有centos7下拒绝访问ftp服务的权限首先，ftp的访问跟ftp/pub的权限是没关系的，在正常情况下，授予ftp目录777的权限，是拒绝用户访问的如果将ftp目录的属主和属组都修改成ftp用户，将ftp目录的权限修改回755，也是不能访问的将配置文件的umask修改成000，并且重启服务，还是不能访问，但是如果我将ftp的目录的属主和属组都修改成ftp，而ftp的目录权限修改成557，那么ftp服务就可以正常访问了当我把ftp的属主和属组又修改成root之后，ftp服务又不能访问了我再把ftp的属主和属组都修改成ftp,,ftp服务还是可以正常的访问如果我再将ftp的目录权限修改成335，而属主和属组都是root，那么ftp也是可以访问的保持权限不变，而属主和属组改为ftp，那么ftp服务还是不能访问我再修改ftp目录的权限为445，将ftp目录的属主和属组都改为root，ftp服务还是可以访问的ftp目录的权限不变，修改ftp目录的属主和属组为ftp,ftp是可以进行访问的这里属主和属组都不改变，分别修改ftp目录的权限为665和225，结果ftp服务都不能访问也就是说不能给ftp用户写的权限，否则不能访问ftp。那如果我修改一下默认目录试试呢，我将ftp默认访问路径修改成/var/test，再次进行测试发现test目录的权限也是不能有写权限，否则不能访问因此，我们可以得出结论：访问ftp服务的匿名用户不能有写权限，这也就是为什么ftp目录下匿名用户不能创建子目录的原因]]></content>
      <categories>
        <category>ftp</category>
      </categories>
      <tags>
        <tag>ftp</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[shell编程之条件测试]]></title>
    <url>%2F2018%2F08%2F18%2Fshell%E7%BC%96%E7%A8%8B%E4%B9%8B%E6%9D%A1%E4%BB%B6%E6%B5%8B%E8%AF%95%2F</url>
    <content type="text"><![CDATA[关于条件测试命令可以使用man test命令查看 条件测试语句语法1.test 测试语句2.[ 测试语句 ]3.[[ 测试语句 ]]4.((测试语句))其中1和2除了语法不一样，功能基本是一样的，而第3种语法他可以使用通配符进行匹配，第四种语法除了用于整数的比较，更多的还是进行一些整数的运算，不过平时经常用到的还是第2、3种语法结构。 条件测试类型 文件测试 数值测试 字符串测试 逻辑测试文件测试格式：1.test 文件测试符 file2.[ 文件测试符 file ] #中括号的两边都需要有空格3.[[ 文件测试符 file ]] #中括号两边需要有空格常用文件测试操作符：123456789101112-b: 文件是否存在，并且为块文件-c：文件是否存在，并且为字符文件-d: 文件是否存在，并且为一个目录（在linux下,万物皆为文件）-e: 文件是否存在-f: 文件是否存在，并且为普通文件-s: 文件是否存在，并且文件大小大于零-L: 文件是否存在，并且为链接文件-r: 文件是否存在，并且文件可读-w: 文件是否存在，并且文件可写-x: 文件是否存在，并且文件可执行file1 -nt file2 文件1是否比文件2新(文件新旧是按照文件修改时间来区分的)file1 -ot file2 文件1是否比文件2旧 实例：1234567891011[root@docker ~]# touch wanger #新建一个普通文件[root@docker ~]# test -f wanger &amp;&amp; echo 0 || echo 10 #测试文件是否是普通文件，如果是输出0，否则输出1[root@docker ~]# [ -d wanger ] &amp;&amp; echo 0 || echo 11 #测试文件是否是一个目录，如果是输出0，否则输出1[root@docker ~]# touch wangerxiao 创建一个普通文件wangerxiao[root@docker ~]# test wanger -nt wangerxiao &amp;&amp; echo 0 || echo 11 #比较wanger是否比wangerxiao新，如果为真输出0，否则输出1[root@docker ~]# [ wanger -ot wangerxiao ] &amp;&amp; echo 0 || echo 10 #比较wanger是否比wangerxiao旧，如果为真输出0，否则输出1 字符串测试：格式： test 字符串测试符 string [ 字符串测试符 string ] [[ 字符串测试符 string ]]常用字符串测试操作符：1234-z string :字符串长度是否为0-n string :字符串长度是否不为0string1 = string2 :string1和string2是否相等string1 != string2 :string1和string2是否不相等 实例：123456789[root@docker ~]# name=wanger #定义一个变量[root@docker ~]# [ -z $name ] &amp;&amp; echo 0 || echo 11 #判断字符串是否为空，为空则返回0，否则返回1[root@docker ~]# test -n $name &amp;&amp; echo 0 || echo 10 #判断字符串是否不为空，如果是则返回0，否则返回1[root@docker ~]# [ $name != &quot;wanger&quot; ] &amp;&amp; echo 0 || echo 11 #判断变量是否不等于”wanger”，如果是返回0,否则返回1[root@docker ~]# test $name = &quot;wanger&quot; &amp;&amp; echo 0 || echo 10 #判断变量是否等于”wanger”,如果是返回0，否则返回1 数值测试：格式：test num1 数值测试操作符 num2[ num1 数值测试操作符 num2 ][[ num 数值测试操作符 num2 ]]((num1数值测试操作符num2)) 常用数值测试操作符：123456num1 -eq num2 : 数字1是否等于数字2num1 -ge num2 : 数字1是否大于等于数字2num1 -gt num2 : 数字1是否大于数字2num1 -le num2 : 数字1是否小于等于数字2num1 -lt num2 : 数字1是否小于数字2num1 -ne num2 : 数字1是否不等于数字2 注意：以上几种操作符不能用在(())格式中，在(())中应使用”&lt; &gt; = != &gt;= &lt;=”比较符号来进行数值的比较 实例：123456789[root@docker ~]# test 6 -le 5 &amp;&amp; echo 0 ||echo 10 #判断6是否小于等于5，如果是返回0，否则返回1[2]+ Done test 64 -gt 63[root@docker ~]# [ 6 -gt 5 ]&amp;&amp; echo 0 || echo 10 #判断6是否大于5，如果大于返回0，否则返回1[root@docker ~]# [[ 6 = 5 ]]&amp;&amp; echo 0 || echo 11 #判断6是否等于5，如果等于返回0，否则返回1[root@docker ~]# ((5!=6))&amp;&amp;echo 0 ||echo 10 #判断5是否等于6，如果不等于返回0，等于则返回1 逻辑运算符：123-a : 相当于&amp;&amp;，表示逻辑与，两端条件都为真，结果为真-o : 相当于||,表示逻辑或，两端条件只要有一个为真，结果就为真！: 逻辑非，两端相反结果为真 实例：1234567test=”123” #定义test变量[root@docker ~]# [ ! -z $test -o $test = &quot;123&quot; ] &amp;&amp;echo 0 || echo 10 #判断test变量是否不为空或者是否等于123，如果是返回0，在[]格式中只能使用-o和-a，而不能用&amp;&amp;和||[root@docker ~]# test -z $test &amp;&amp; test $test = &quot;123&quot; &amp;&amp;echo 0 ||echo 11 #判断test变量是否为空并且test变量是否等于123，如果是返回0[root@docker ~]# [[ -z $test || $test = &quot;123&quot; ]] &amp;&amp;echo 0 ||echo 10 #判断test变量是否为空或者test变量是否等于123，如果是返回0]]></content>
      <tags>
        <tag>shell</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[shell编程循环脚本]]></title>
    <url>%2F2018%2F08%2F18%2Fshell%E7%BC%96%E7%A8%8B%E5%BE%AA%E7%8E%AF%E8%84%9A%E6%9C%AC%2F</url>
    <content type="text"><![CDATA[求从1加到100的和使用for循环求和：123456#!/bin/bashdeclare -i sum=0for ((i=1;i&lt;=100;i++));do let sum+=$idoneecho &quot;sum=$sum&quot; 使用until循环求和：123456789#!/bin/bashi=1sum=0until [ $i -gt 100 ];do let sum+=$i let i++doneecho &quot;sum is:$sum&quot; 使用while循环求和：123456789#!/bin/bashi=1sum=0while [ $i -le 100 ];do let sum+=$i let i++doneecho &quot;sum is:$sum&quot; 求100以内的偶数之和使用for循环求和：1234567891011#!/bin/bashi=0sum=0for i in `seq 100` ;do if [ $[$i%2] -eq 1 ];then continue fi let sum+=$idoneecho &quot;sum is:$sum&quot; 使用while循环求和：123456789101112#!/bin/bashi=0sum=0while [ $i -le 100 ];do let i++ if [ $[$i%2] -eq 1 ];then continue fi let sum+=$idoneecho &quot;sum is: $sum&quot; 使用until循环求和：123456789101112#!/bin/bashi=0sum=0until [ $i -gt 100 ];do let i++ if [ $[ $i%2 ] -eq 1 ];then continue fi let sum+=$idoneecho &quot;sum is: $sum&quot; 编写一个九九乘法表使用for循环：123456789#!/bin/bash#for i in `seq 9`;dofor ((j=1;j&lt;=9;j++));do for ((i=1;i&lt;=j;i++));do echo -ne &quot;$i*$j=$(($i*$j))\t&quot; done echodone 使用while循环：12345678910111213#!/bin/bashi=1j=1while[ $j -le 9 ];do while [ $i -le $j ];do echo -ne &quot;$i*$j=$(($i*$j))\t&quot; let i++ done echo let i=1 let j++done 使用until循环：12345678910111213#!/bin/bashi=1j=1until [ $j -gt 9 ];do until [ $i -gt $j ];do echo -ne &quot;$i*$j=$(($i*$j))\t&quot; let i++ done echo let i=1 let j++done 通过脚本判断用户是否登入系统，如果没有，则每10秒循环一次使用while循环：1234567#!/bin/bashread -p &quot;pls input a username: &quot; usernamewhile ! `who |grep &quot;^$username&quot; &amp;&gt; /dev/null`;do sleep 10doneecho &quot;`date +%F-%H:%M:%S` $username logged on&quot;&gt;&gt;/tmp/user.log 使用case循环来获取系统信息1234567891011121314151617181920212223242526272829303132333435363738394041#!/bin/bashcat &lt;&lt;EOF1) show cpu information;2) show memory information;3) show disk information;4) quitEOFcpu_info()&#123; lscpu &#125;mem_info()&#123; cat /proc/meminfo &#125;disk_info()&#123; fdisk -l &#125;quit()&#123; echo &quot;quit&quot; exit 0 &#125; read -p &quot;pls input a num: &quot; numif [ $num -ne 1 -a $num -ne 2 -a $num -ne 3 -a $num -ne 4 ];then read -p &quot;pls input a num again: &quot; numficase &quot;$num&quot; in 1) cpu_info ;;2) mem_info ;;3) disk_info ;;4) quitesac]]></content>
      <categories>
        <category>shell编程</category>
      </categories>
      <tags>
        <tag>shell</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Markdown语法]]></title>
    <url>%2F2018%2F08%2F09%2FMarkdown%E8%AF%AD%E6%B3%95%2F</url>
    <content type="text"><![CDATA[1.标题第一种 markdown最高可以设置六级标题,前面#号的数量代表标题的等级,#号后面要带一个空格123456# 一级标题## 二级标题### 三级标题#### 四级标题##### 五级标题###### 六级标题 演示 一级标题二级标题三级标题四级标题五级标题六级标题第二种 这种只能表示一级和二级标题,=和-的数量没有限制，只要大于一就行1234一级标题=======二级标题------ 演示 一级标题二级标题2.文本样式1234**加粗***斜体* 或者 _斜体_***加粗斜体***~~删除线~~ 演示加粗斜体加粗斜体删除线 3.列表无序列表无序列表可以有三种写法,使用*或+或- :1234567891011121314使用 * ：* 无序列表1* 无序列表2* 无序列表3使用 + ：+ 无序列表4+ 无序列表5+ 无序列表6使用 - ：- 无序列表7- 无序列表8- 无序列表9 演示使用 * ： 无序列表1 无序列表2 无序列表3 使用 + ： 无序列表4 无序列表5 无序列表6 使用 - ： 无序列表7 无序列表8 无序列表9有序列表有序列表就是在前面加数字而不是用符号1231. 有序列表12. 有序列表23. 有序列表3 演示 有序列表1 有序列表2 有序列表34.引用引用的格式很简单,在引用的文字前面加上&gt;就行了12&gt; 为人民服务&gt; ——毛主席 演示 为人民服务 ——毛主席 5.代码块比较短的或是单行的代码可以使用反引号包裹,若是有多行的代码要使用3个反引号,这里为了转义我用\将反引号隔开，顺便说一下,如果不想让一些符号用作markdown语法,可用\进行转义。123456`短的或者单行代码``\`` 多行代码&#123; print ‘人生苦短，我用Python’ &#125;`\`` 演示短的或者单行代码123多行代码&#123; print ‘人生苦短，我用Python’ &#125; 6.表格在markdown里使用表格有点麻烦，使用|来分隔不同的单元格，使用-来分隔表头和其他行，使用:来设置表格的对齐方式:--- 表示左对齐,不加:也表示左对齐:--: 表示居中对齐---: 表示右对齐12345|name|age|sex||:-----|:--:|----:||wanger|23 |nan ||lisi |20 |nv ||wangwu|22 |nan | 演示 name age sex wanger 23 nan lisi 20 nv wangwu 22 nan 7.分割线可以在一行中用三个以上的星号、减号、底线来建立一个分隔线，同时需要在分隔线的上面空一行。123---___*** 演示 8.超链接与图片超链接与图片格式的最大区别就是图片格式多一个’!’，图片的title和链接的title表示你的鼠标指向图片或者链接描述的时候出现的内容,title与图片地址和链接地址之间有空格,title属性可以不加。 图片![图片描述](图片地址 &quot;title&quot;) 链接[链接描述](链接地址 &quot;title&quot;)12![微信公众号](/uploads/wechat-qcode.jpg &quot;微信公众号&quot;)[个人博客](https://wahaha5354.github.io &quot;个人博客&quot;) 演示个人博客]]></content>
      <tags>
        <tag>markdown</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[next主题的个性化设置]]></title>
    <url>%2F2018%2F08%2F09%2Fnext%E4%B8%BB%E9%A2%98%E7%9A%84%E4%B8%AA%E6%80%A7%E5%8C%96%E8%AE%BE%E7%BD%AE%2F</url>
    <content type="text"><![CDATA[因为hexo博客使用的markdown语法，之前并没有接触过markdown语法，所以第一次写博客只能参考markdown语法的用法来写 设置hexo的头像之前参照了网上修改的方法老是出现报错，折腾了两天还是不行，后来在修改网站图标的时候才知道是因为我配置文件格式写错了，网上的很多方法都是在主题的配置文件里改，但我改了并没有生效，也许是姿势有问题，后来在主题的配置文件里修改竟然生效了，在配置文件里搜索’Sidebar Avatar’，找到如下字段：123456# Sidebar Avataravatar: # in theme directory(source/images): /images/avatar.gif # in site directory(source/uploads): /uploads/avatar.gif # You can also use other linking images. url: /images/avatar.jpg 在url: 后面加上头像的存放地址，我的头像放在了站点目录/source/images/目录下，修改完配置后执行命令:hexo cleanhexo ghexo d 站内搜索刚开始想用Swiftype来着，后来才知道Swiftype在去年就停止免费服务了，又想着去用Algolia，但我实在太笨，找不到地址在哪里，网站访问的也很慢，于是准备用hexo自带的Local Search 安装 hexo-generator-searchdb，在站点的根目录下执行以下命令：npm install hexo-generator-searchdb --save 编辑 站点配置文件，新增以下内容到任意位置： 12345search: path: search.xml field: post format: html limit: 10000 编辑 主题配置文件，启用本地搜索功能： 123# Local searchlocal_search: enable: true 具体可以参考官方的文档Next使用文档目前我的博客评论用的是来必力，分享用的是Add This,站内搜索用的是local search，感觉用起来还是挺不错的]]></content>
      <categories>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>hexo next</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2F2018%2F08%2F07%2Fhello-world%2F</url>
    <content type="text"><![CDATA[后面没有了，这是最早的一篇博客了 Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
  </entry>
  <entry>
    <title><![CDATA[test]]></title>
    <url>%2F2018%2F08%2F05%2Ftest%2F</url>
    <content type="text"><![CDATA[hello wanger]]></content>
      <categories>
        <category>test</category>
      </categories>
      <tags>
        <tag>test</tag>
      </tags>
  </entry>
</search>
